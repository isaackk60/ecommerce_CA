{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\BuyShirt.js\";\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyShirt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      // console.log(\"PayPal payment successful\") \n      // let formData = new FormData()\n      // formData.append(\"items\", this.props.items)\n      // formData.append(\"customerName\", this.props.customerName)\n      // formData.append(\"customerEmail\", this.props.customerEmail)\n      // formData.append(\"address\", this.props.address)\n      // formData.append(\"phone\", this.props.phone)\n      console.log(this.props.items);\n      console.log(this.props.customerName);\n      console.log(this.props.customerEmail);\n      console.log(this.props.address);\n      console.log(this.props.phone);\n      console.log(formData);\n      let inputData = {\n        items: this.props.items,\n        customerName: this.props.customerName,\n        customerEmail: this.props.customerEmail,\n        address: this.props.address,\n        phone: this.props.phone // axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}/${this.props.items}/${this.props.customerName}/${this.props.customerEmail}/${this.props.address}/${this.props.phone}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n        // .then(res => \n        // {                   \n        //     this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n        //                    payPalOrderID:paymentData.orderID, \n        //                    redirectToPayPalMessage:true}) \n        // })\n        // axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n        // .then(res => \n        // {                   \n        //     this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n        //                    payPalOrderID:paymentData.orderID, \n        //                    redirectToPayPalMessage:true}) \n        // })\n        // axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}`,formData, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n        // .then(res => \n        // {                   \n        //     this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n        //                    payPalOrderID:paymentData.orderID, \n        //                    redirectToPayPalMessage:true}) \n        // })\n\n      };\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.orderID, \"/\").concat(this.props.price), {\n        data: inputData\n      }, {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal payment error\");\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      console.log(\"PayPal payment cancelled\"); // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\BuyShirt.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyShirt","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","onApprove","paymentData","console","log","items","customerName","customerEmail","address","phone","formData","inputData","post","orderID","headers","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappings":"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","sourcesContent":["// import React, {Component} from \"react\"\r\n// import axios from \"axios\"\r\n// import {Redirect} from \"react-router-dom\"\r\n\r\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\n// import PayPalMessage from \"./PayPalMessage\"\r\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\r\n\r\n\r\n// export default class BuyShirt extends Component\r\n// {\r\n//     constructor(props)\r\n//     {\r\n//         super(props)\r\n\r\n//         this.state = {redirectToPayPalMessage:false,\r\n//                       payPalMessageType:null,\r\n//                       payPalOrderID:null}\r\n//     }\r\n    \r\n    \r\n    \r\n//     createOrder = (data, actions) => \r\n//     {\r\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n//     }\r\n    \r\n    \r\n//     onApprove = paymentData =>\r\n//     {      \r\n//         axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n//         .then(res => \r\n//         {                   \r\n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n//                            payPalOrderID:paymentData.orderID, \r\n//                            redirectToPayPalMessage:true}) \r\n//         })\r\n//         .catch(errorData =>\r\n//         {           \r\n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n//                            redirectToPayPalMessage:true}) \r\n//         })\r\n//     }\r\n \r\n        \r\n//     onError = errorData => \r\n//     {\r\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n//                        redirectToPayPalMessage:true})         \r\n//     }\r\n    \r\n    \r\n//     onCancel = cancelData => \r\n//     {\r\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \r\n//                        redirectToPayPalMessage:true})       \r\n//     }\r\n    \r\n\r\n                \r\n//     render()\r\n//     {\r\n//         return (\r\n//             <div>\r\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \r\n            \r\n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n//                 </PayPalScriptProvider>\r\n//             </div>\r\n//     )}\r\n// }\r\n\r\n\r\nimport React, {Component} from \"react\"\r\nimport axios from \"axios\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nimport {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\nimport PayPalMessage from \"./PayPalMessage\"\r\nimport {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\r\n\r\n\r\nexport default class BuyShirt extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {redirectToPayPalMessage:false,\r\n                      payPalMessageType:null,\r\n                      payPalOrderID:null}\r\n    }\r\n    createOrder = (data, actions) => \r\n    {\r\n        return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n    }\r\n    \r\n    \r\n    onApprove = paymentData =>\r\n    {      \r\n        // console.log(\"PayPal payment successful\") \r\n        // let formData = new FormData()\r\n        // formData.append(\"items\", this.props.items)\r\n        // formData.append(\"customerName\", this.props.customerName)\r\n        // formData.append(\"customerEmail\", this.props.customerEmail)\r\n        // formData.append(\"address\", this.props.address)\r\n        // formData.append(\"phone\", this.props.phone)\r\nconsole.log(this.props.items)\r\nconsole.log(this.props.customerName)\r\nconsole.log(this.props.customerEmail)\r\nconsole.log(this.props.address)\r\nconsole.log(this.props.phone)\r\nconsole.log(formData);\r\nlet inputData={items:this.props.items,customerName:this.props.customerName,customerEmail:this.props.customerEmail,address:this.props.address,phone:this.props.phone}\r\n\r\n        // axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}/${this.props.items}/${this.props.customerName}/${this.props.customerEmail}/${this.props.address}/${this.props.phone}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n        // .then(res => \r\n        // {                   \r\n        //     this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n        //                    payPalOrderID:paymentData.orderID, \r\n        //                    redirectToPayPalMessage:true}) \r\n        // })\r\n        // axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n        // .then(res => \r\n        // {                   \r\n        //     this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n        //                    payPalOrderID:paymentData.orderID, \r\n        //                    redirectToPayPalMessage:true}) \r\n        // })\r\n        // axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}`,formData, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n        // .then(res => \r\n        // {                   \r\n        //     this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n        //                    payPalOrderID:paymentData.orderID, \r\n        //                    redirectToPayPalMessage:true}) \r\n        // })\r\n        axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}`,{data:inputData}, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n        .then(res => \r\n        {                   \r\n            this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n                           payPalOrderID:paymentData.orderID, \r\n                           redirectToPayPalMessage:true}) \r\n        })\r\n        .catch(errorData =>\r\n        {           \r\n            this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n                           redirectToPayPalMessage:true}) \r\n        })\r\n    }\r\n \r\n        \r\n    onError = errorData => \r\n    {\r\n        console.log(\"PayPal payment error\")  \r\n        this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n            redirectToPayPalMessage:true})          \r\n    }\r\n    \r\n    \r\n    onCancel = cancelData => \r\n    {\r\n        console.log(\"PayPal payment cancelled\")   \r\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n        this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \r\n            redirectToPayPalMessage:true})      \r\n    }\r\n    \r\n                \r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}  \r\n                <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n                    <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n                </PayPalScriptProvider>\r\n            </div>\r\n    )}\r\n}"]},"metadata":{},"sourceType":"module"}