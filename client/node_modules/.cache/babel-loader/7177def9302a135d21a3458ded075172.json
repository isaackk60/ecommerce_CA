{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\Dashboard.js\";\n// import React, {Component} from \"react\"\n// import {Link} from \"react-router-dom\"\n// import axios from \"axios\"\n// import NavigationBar from \"./NavigationBar\"\n// import {ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n// export default class Dashboard extends Component \n// {\n//     constructor(props) \n//     {\n//         super(props)\n//         this.state = {\n//             user:[]\n//         }\n//     }\n//     componentDidMount() {\n//         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n//         // axios.get(`${SERVER_HOST}/users/email`,{email:userEmail},)\n//         //     .then(res => {\n//         //         this.setState({ user: res.data });\n//         //     })\n//         //     .catch(err => {\n//         //         console.error(\"Error fetching user data:\", err);\n//         //     });\n//     //     axios.get(`${SERVER_HOST}/users/email`, { params: { email: userEmail } })\n//     // .then(res => {\n//     //     this.setState({ user: res.data });\n//     // })\n//     // .catch(err => {\n//     //     console.error(\"Error fetching user data:\", err);\n//     // });\n//     axios.get(`${SERVER_HOST}/users/email?email=${userEmail}`)\n//     .then(res => {\n//         this.setState({ user: res.data });\n//     })\n//     .catch(err => {\n//         console.error(\"Error fetching user data:\", err);\n//     });\n//     }\n//     render() \n//     {   \n// console.log(this.state.user)\n//             return (           \n//             <div>\n//                 <NavigationBar />\n//             </div>\n//         )\n//     }\n// }\n// import React, { Component } from \"react\";\n// import axios from \"axios\";\n// import NavigationBar from \"./NavigationBar\";\n// import { SERVER_HOST } from \"../config/global_constants\";\n// export default class Dashboard extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             user: {},\n//             newName: \"\",\n//             newPhone: \"\",\n//             newAddress: \"\"\n//         };\n//     }\n//     componentDidMount() {\n//         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n//         axios.get(`${SERVER_HOST}/users/email?email=${userEmail}`)\n//             .then(res => {\n//                 this.setState({ user: res.data });\n//             })\n//             .catch(err => {\n//                 console.error(\"Error fetching user data:\", err);\n//             });\n//     }\n//     handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         this.setState({ [name]: value });\n//     }\n//     updateUser = (e) => {\n//         e.preventDefault();\n//         const { newName, newPhone, newAddress } = this.state;\n//         const userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n//         axios.put(`${SERVER_HOST}/users/update`, { email: userEmail, newName, newPhone, newAddress })\n//             .then(res => {\n//                 // Handle success\n//                 console.log(\"User updated successfully\");\n//             })\n//             .catch(err => {\n//                 // Handle error\n//                 console.error(\"Error updating user:\", err);\n//             });\n//     }\n//     render() {\n//         const { user, newName, newPhone, newAddress } = this.state;\n//         console.log(user)\n// console.log(newName)\n// console.log(newPhone)\n// console.log(newAddress)\n//         return (\n//             <div>\n//                 <NavigationBar />\n//                 <h2>Welcome, {user.name}</h2>\n//                 <form onSubmit={this.updateUser}>\n//                     <div>\n//                         <label>Name:</label>\n//                         <input type=\"text\" name=\"newName\" value={newName} onChange={this.handleInputChange} />\n//                     </div>\n//                     <div>\n//                         <label>Phone:</label>\n//                         <input type=\"text\" name=\"newPhone\" value={newPhone} onChange={this.handleInputChange} />\n//                     </div>\n//                     <div>\n//                         <label>Address:</label>\n//                         <input type=\"text\" name=\"newAddress\" value={newAddress} onChange={this.handleInputChange} />\n//                     </div>\n//                     <button type=\"submit\">Save</button>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport NavigationBar from \"./NavigationBar\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport Logout from \"./Logout\";\nimport LinkInClass from \"../components/LinkInClass\";\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.updateUser = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            newName = _this$state.newName,\n            newPhone = _this$state.newPhone,\n            newAddress = _this$state.newAddress; // Validation\n\n      const errors = {};\n\n      if (!newName.trim()) {\n        errors.newName = \"Name is required\";\n      }\n\n      if (!newPhone.trim()) {\n        errors.newPhone = \"Phone number is required\";\n      } else if (!/^\\d{8,15}$/.test(newPhone)) {\n        errors.newPhone = \"Phone number must be between 8 and 15 digits\";\n      }\n\n      if (!newAddress.trim()) {\n        errors.newAddress = \"Address is required\";\n      } // Check if there are any errors\n\n\n      if (Object.keys(errors).length === 0) {\n        // No errors, proceed with submission\n        const userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n        axios.put(\"\".concat(SERVER_HOST, \"/users/update\"), {\n          email: userEmail,\n          newName,\n          newPhone,\n          newAddress\n        }).then(res => {\n          // Handle success\n          console.log(\"User updated successfully\");\n\n          if (this.state.from === \"cart\") {\n            this.setState({\n              redirectToCart: true\n            });\n          } else {\n            this.setState({\n              redirectToMain: true\n            });\n          }\n        }).catch(err => {\n          // Handle error\n          console.error(\"Error updating user:\", err);\n        });\n      } else {\n        // Errors found, update state with error messages\n        this.setState({\n          errors\n        });\n      }\n    };\n\n    this.state = {\n      user: {},\n      newName: \"\",\n      newPhone: \"\",\n      newAddress: \"\",\n      redirectToMain: false,\n      redirectToCart: false,\n      // redirectToLogout: false,\n      from: \"\",\n      errors: {\n        newName: \"\",\n        newPhone: \"\",\n        newAddress: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n    axios.get(\"\".concat(SERVER_HOST, \"/users/email?email=\").concat(userEmail)).then(res => {\n      this.setState({\n        user: res.data,\n        newName: res.data.name,\n        newPhone: res.data.phone,\n        newAddress: res.data.address\n      });\n    }).catch(err => {\n      console.error(\"Error fetching user data:\", err);\n    });\n    const state = this.props.location.state;\n\n    if (state && state.from === \"cart\") {\n      this.setState({\n        from: \"cart\"\n      });\n    }\n  }\n\n  // handleLogout = (e) => {\n  //     this.setState({ redirectToLogout: true })\n  // }\n  render() {\n    const _this$state2 = this.state,\n          user = _this$state2.user,\n          newName = _this$state2.newName,\n          newPhone = _this$state2.newPhone,\n          newAddress = _this$state2.newAddress,\n          errors = _this$state2.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.state.redirectToMain ? React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }) : null, this.state.redirectToCart ? React.createElement(Redirect, {\n      to: {\n        pathname: \"/ShoppingCart/\",\n        state: {\n          haveEnoughData: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }) : null, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"shoppingcarth2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Welcome, \", user.name), React.createElement(\"form\", {\n      onSubmit: this.updateUser,\n      className: \"userdashboardform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"biggestdashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"labelinputdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Name: \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"newName\",\n      value: newName !== null ? newName : user.name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), errors.newName && React.createElement(\"h6\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, errors.newName))), React.createElement(\"div\", {\n      className: \"labelinputdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Phone: \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"newPhone\",\n      value: newPhone !== null ? newPhone : user.phone,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), errors.newPhone && React.createElement(\"h6\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, errors.newPhone))), React.createElement(\"div\", {\n      className: \"labelinputdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Address: \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Address\",\n      name: \"newAddress\",\n      value: newAddress !== null ? newAddress : user.address,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), errors.newAddress && React.createElement(\"h6\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, errors.newAddress))), React.createElement(\"div\", {\n      className: \"dashboardsavebutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(\"div\", {\n      className: \"logoutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"logoutbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\Dashboard.js"],"names":["React","Component","axios","Redirect","Link","NavigationBar","SERVER_HOST","Logout","LinkInClass","Dashboard","constructor","props","handleInputChange","e","target","name","value","setState","updateUser","preventDefault","state","newName","newPhone","newAddress","errors","trim","test","Object","keys","length","userEmail","JSON","parse","localStorage","getItem","put","email","then","res","console","log","from","redirectToCart","redirectToMain","catch","err","error","user","componentDidMount","get","data","phone","address","location","render","pathname","haveEnoughData"],"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","sourcesContent":["// import React, {Component} from \"react\"\r\n// import {Link} from \"react-router-dom\"\r\n\r\n// import axios from \"axios\"\r\n// import NavigationBar from \"./NavigationBar\"\r\n\r\n\r\n// import {ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\r\n\r\n\r\n// export default class Dashboard extends Component \r\n// {\r\n//     constructor(props) \r\n//     {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             user:[]\r\n//         }\r\n//     }\r\n\r\n\r\n//     componentDidMount() {\r\n//         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\r\n\r\n//         // axios.get(`${SERVER_HOST}/users/email`,{email:userEmail},)\r\n//         //     .then(res => {\r\n//         //         this.setState({ user: res.data });\r\n//         //     })\r\n//         //     .catch(err => {\r\n//         //         console.error(\"Error fetching user data:\", err);\r\n//         //     });\r\n//     //     axios.get(`${SERVER_HOST}/users/email`, { params: { email: userEmail } })\r\n//     // .then(res => {\r\n//     //     this.setState({ user: res.data });\r\n//     // })\r\n//     // .catch(err => {\r\n//     //     console.error(\"Error fetching user data:\", err);\r\n//     // });\r\n//     axios.get(`${SERVER_HOST}/users/email?email=${userEmail}`)\r\n//     .then(res => {\r\n//         this.setState({ user: res.data });\r\n//     })\r\n//     .catch(err => {\r\n//         console.error(\"Error fetching user data:\", err);\r\n//     });\r\n\r\n\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     render() \r\n//     {   \r\n// console.log(this.state.user)\r\n//             return (           \r\n//             <div>\r\n//                 <NavigationBar />\r\n\r\n\r\n//             </div>\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import axios from \"axios\";\r\n// import NavigationBar from \"./NavigationBar\";\r\n// import { SERVER_HOST } from \"../config/global_constants\";\r\n\r\n// export default class Dashboard extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             user: {},\r\n//             newName: \"\",\r\n//             newPhone: \"\",\r\n//             newAddress: \"\"\r\n//         };\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\r\n\r\n//         axios.get(`${SERVER_HOST}/users/email?email=${userEmail}`)\r\n//             .then(res => {\r\n//                 this.setState({ user: res.data });\r\n//             })\r\n//             .catch(err => {\r\n//                 console.error(\"Error fetching user data:\", err);\r\n//             });\r\n//     }\r\n\r\n//     handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         this.setState({ [name]: value });\r\n//     }\r\n\r\n//     updateUser = (e) => {\r\n//         e.preventDefault();\r\n//         const { newName, newPhone, newAddress } = this.state;\r\n//         const userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\r\n\r\n//         axios.put(`${SERVER_HOST}/users/update`, { email: userEmail, newName, newPhone, newAddress })\r\n//             .then(res => {\r\n//                 // Handle success\r\n//                 console.log(\"User updated successfully\");\r\n//             })\r\n//             .catch(err => {\r\n//                 // Handle error\r\n//                 console.error(\"Error updating user:\", err);\r\n//             });\r\n//     }\r\n\r\n//     render() {\r\n\r\n//         const { user, newName, newPhone, newAddress } = this.state;\r\n//         console.log(user)\r\n// console.log(newName)\r\n// console.log(newPhone)\r\n// console.log(newAddress)\r\n//         return (\r\n//             <div>\r\n//                 <NavigationBar />\r\n//                 <h2>Welcome, {user.name}</h2>\r\n//                 <form onSubmit={this.updateUser}>\r\n//                     <div>\r\n//                         <label>Name:</label>\r\n//                         <input type=\"text\" name=\"newName\" value={newName} onChange={this.handleInputChange} />\r\n//                     </div>\r\n//                     <div>\r\n//                         <label>Phone:</label>\r\n//                         <input type=\"text\" name=\"newPhone\" value={newPhone} onChange={this.handleInputChange} />\r\n//                     </div>\r\n//                     <div>\r\n//                         <label>Address:</label>\r\n//                         <input type=\"text\" name=\"newAddress\" value={newAddress} onChange={this.handleInputChange} />\r\n//                     </div>\r\n//                     <button type=\"submit\">Save</button>\r\n//                 </form>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport { SERVER_HOST } from \"../config/global_constants\";\r\nimport Logout from \"./Logout\"\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\nexport default class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {},\r\n            newName: \"\",\r\n            newPhone: \"\",\r\n            newAddress: \"\",\r\n            redirectToMain: false,\r\n            redirectToCart: false,\r\n            // redirectToLogout: false,\r\n            from: \"\",\r\n            errors: { \r\n                newName: \"\", \r\n                newPhone: \"\",\r\n                newAddress: \"\" \r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\r\n\r\n        axios.get(`${SERVER_HOST}/users/email?email=${userEmail}`)\r\n            .then(res => {\r\n                this.setState({ user: res.data, newName: res.data.name, newPhone: res.data.phone, newAddress: res.data.address });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching user data:\", err);\r\n            });\r\n\r\n        const { state } = this.props.location;\r\n        if (state && state.from === \"cart\") {\r\n            this.setState({ from: \"cart\" })\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    updateUser = (e) => {\r\n        e.preventDefault();\r\n        const { newName, newPhone, newAddress } = this.state;\r\n    \r\n        // Validation\r\n        const errors = {};\r\n        if (!newName.trim()) {\r\n            errors.newName = \"Name is required\";\r\n        }\r\n        if (!newPhone.trim()) {\r\n            errors.newPhone = \"Phone number is required\";\r\n        } else if (!/^\\d{8,15}$/.test(newPhone)) {\r\n            errors.newPhone = \"Phone number must be between 8 and 15 digits\";\r\n        }\r\n        if (!newAddress.trim()) {\r\n            errors.newAddress = \"Address is required\";\r\n        }\r\n    \r\n        // Check if there are any errors\r\n        if (Object.keys(errors).length === 0) {\r\n            // No errors, proceed with submission\r\n            const userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\r\n    \r\n            axios.put(`${SERVER_HOST}/users/update`, { email: userEmail, newName, newPhone, newAddress })\r\n                .then(res => {\r\n                    // Handle success\r\n                    console.log(\"User updated successfully\");\r\n                    if (this.state.from === \"cart\") {\r\n                        this.setState({ redirectToCart: true });\r\n                    } else {\r\n                        this.setState({ redirectToMain: true });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // Handle error\r\n                    console.error(\"Error updating user:\", err);\r\n                });\r\n        } else {\r\n            // Errors found, update state with error messages\r\n            this.setState({ errors });\r\n        }\r\n    }\r\n    \r\n    // handleLogout = (e) => {\r\n    //     this.setState({ redirectToLogout: true })\r\n    // }\r\n\r\n    render() {\r\n        const { user, newName, newPhone, newAddress, errors } = this.state;\r\n\r\n        return (\r\n\r\n            <div>\r\n                {/* {this.state.redirectToLogout ? <Redirect to={\"/Logout\"} /> : null} */}\r\n                {this.state.redirectToMain ? <Redirect to={\"/main\"} /> : null}\r\n                {this.state.redirectToCart ? <Redirect to={{ pathname: \"/ShoppingCart/\", state: { haveEnoughData: true } }} /> : null}\r\n                <NavigationBar />\r\n                <h2 className=\"shoppingcarth2\">Welcome, {user.name}</h2>\r\n                <form onSubmit={this.updateUser} className=\"userdashboardform\">\r\n                    <div className=\"biggestdashboard\">\r\n                        <div className=\"labelinputdiv\">\r\n                            <div>\r\n                                <label>Name: </label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" placeholder=\"Name\" name=\"newName\"  value={newName !== null ? newName : user.name} onChange={this.handleInputChange} />\r\n                                {errors.newName && <h6 className=\"error\">{errors.newName}</h6>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"labelinputdiv\">\r\n                            <div>\r\n                                <label>Phone: </label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" placeholder=\"Phone\" name=\"newPhone\" value={newPhone !== null ? newPhone : user.phone} onChange={this.handleInputChange} />\r\n                                {errors.newPhone && <h6 className=\"error\">{errors.newPhone}</h6>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"labelinputdiv\">\r\n                            <div>\r\n                                <label>Address: </label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" placeholder=\"Address\" name=\"newAddress\" value={newAddress !== null ? newAddress : user.address} onChange={this.handleInputChange} />\r\n                                {errors.newAddress && <h6 className=\"error\">{errors.newAddress}</h6>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dashboardsavebutton\">\r\n                            <button type=\"submit\">Save</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n                <div className=\"logoutButton\">\r\n                    <button className=\"logoutbutton\"><Logout /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}