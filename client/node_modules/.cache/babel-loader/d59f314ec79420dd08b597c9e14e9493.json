{"ast":null,"code":"import _defineProperty from \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ViewPurchaseHistory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class ViewAllUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchChange = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.state = {\n      purchaseHistory: [],\n      eachItemsInOrder: [],\n      allOrders: [],\n      searchQuery: \"\"\n    };\n  } // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history and fetch shirt details\n  //                 this.state.purchaseHistory.forEach(itemsInArray => {\n  //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             // Update eachItemsInOrder state by appending new items\n  //                             this.setState(prevState => ({\n  //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n  //                             }));\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n  // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history\n  //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\n  //                     // Store each itemsInOrder array in a separate array\n  //                     let eachItemsInOrder = [];\n  //                     itemsInArray.items.forEach(item => {\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             eachItemsInOrder.push(updatedItem);\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                     // Push eachItemsInOrder array into allOrders array\n  //                     this.setState(prevState => ({\n  //                         allOrders: [\n  //                             ...prevState.allOrders,\n  //                             {\n  //                                 orderId: itemsInArray._id, // Store item._id into allOrders\n  //                                 eachItemsInOrder: eachItemsInOrder\n  //                             }\n  //                         ]\n  //                     }));\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n\n\n  componentDidMount() {\n    if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n      let userEmail; // const currentUrl = window.location.pathname;\n\n      if (localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER) {\n        userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n      } else if (localStorage.accessLevel == ACCESS_LEVEL_ADMIN) {\n        // if (currentUrl === \"/ViewPurchaseHistory\") {\n        //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n        // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\n        //     userEmail = this.props.match.params.email;\n        // }\n        userEmail = this.props.match.params.email;\n      }\n\n      axios.get(\"\".concat(SERVER_HOST, \"/sales/email?email=\").concat(userEmail)).then(res => {\n        // Update purchase history state\n        this.setState({\n          purchaseHistory: res.data\n        }, () => {\n          // Iterate over each purchase history item\n          this.state.purchaseHistory.forEach((itemsInArray, index) => {\n            let eachItemsInOrder = [];\n            let totalPrice = 0; // Initialize total price for the order\n\n            itemsInArray.items.forEach(item => {\n              // Fetch shirt details and calculate total price for each item\n              axios.get(\"\".concat(SERVER_HOST, \"/shirts/\").concat(item.shirtID), {\n                headers: {\n                  \"authorization\": localStorage.token\n                }\n              }).then(res => {\n                const updatedItem = _objectSpread({}, res.data, {\n                  quantity: item.quantity\n                });\n\n                eachItemsInOrder.push(updatedItem); // Check if all items are fetched\n\n                if (eachItemsInOrder.length === itemsInArray.items.length) {\n                  // Add the price of the item to the total price\n                  eachItemsInOrder.map(item => totalPrice += item.price * item.quantity); // Update state after all items are fetched\n\n                  this.setState(prevState => ({\n                    allOrders: [...prevState.allOrders, {\n                      orderId: itemsInArray._id,\n                      eachItemsInOrder: eachItemsInOrder,\n                      totalPrice: totalPrice\n                    }]\n                  }), () => {\n                    // Call loadShirtPhotos() after updating state\n                    this.loadShirtPhotos();\n                  });\n                }\n              }).catch(err => {\n                console.error(\"Error fetching shirt data:\", err);\n              });\n            });\n          });\n        });\n      }).catch(err => {\n        console.error(\"Error fetching user data:\", err);\n      });\n    }\n  }\n\n  loadShirtPhotos() {\n    this.state.allOrders.forEach(order => {\n      order.eachItemsInOrder.forEach(item => {\n        item.shirtPhotoFilename.forEach(photo => {\n          axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n            // Update shirt photo in DOM\n            const elements = document.getElementsByClassName(photo._id);\n            Array.from(elements).forEach(element => {\n              element.src = \"data:;base64,\".concat(res.data.image);\n            });\n          }).catch(err => {\n            // Handle error\n            console.error(\"Error loading shirt photo:\", err);\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.purchaseHistory);\n    console.log(this.state.eachItemsInOrder);\n    console.log(this.state.allOrders); // console.log(this.state.allOrders.map(order => order.eachItemsInOrder.map(item => item.name)));\n\n    return React.createElement(React.Fragment, null, localStorage.accessLevel > ACCESS_LEVEL_GUEST ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Ordered Items\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchQuery,\n      onChange: this.handleSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), this.state.allOrders.length === 0 ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"The User didn't purchase anything yet\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.state.allOrders.map(order => React.createElement(\"div\", {\n      key: order.orderId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Order ID: \", order.orderId), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Total Price for this t-shirt\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, order.eachItemsInOrder.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, item.shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      className: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, item.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, item.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, item.price * item.quantity))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Total Of The Order Price:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, order.totalPrice)))))))) : React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ViewPurchaseHistory.js"],"names":["React","Component","Redirect","Link","axios","NavigationBar","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","ViewAllUsers","constructor","props","handleSearchChange","event","setState","searchQuery","target","value","state","purchaseHistory","eachItemsInOrder","allOrders","componentDidMount","localStorage","accessLevel","userEmail","JSON","parse","getItem","match","params","email","get","then","res","data","forEach","itemsInArray","index","totalPrice","items","item","shirtID","headers","token","updatedItem","quantity","push","length","map","price","prevState","orderId","_id","loadShirtPhotos","catch","err","console","error","order","shirtPhotoFilename","photo","filename","elements","document","getElementsByClassName","Array","from","element","src","image","render","log","name","size"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Redirect, Link } from \"react-router-dom\"\n\nimport axios from \"axios\"\n\nimport NavigationBar from \"./NavigationBar\"\n\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\n\n\nexport default class ViewAllUsers extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            purchaseHistory: [],\n            eachItemsInOrder: [],\n            allOrders: [],\n            searchQuery: \"\"\n\n        }\n    }\n\n\n    // componentDidMount() {\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n    //         .then(res => {\n    //             // Update purchaseHistory state\n    //             this.setState({ purchaseHistory: res.data }, () => {\n    //                 // Iterate over each item in purchase history and fetch shirt details\n    //                 this.state.purchaseHistory.forEach(itemsInArray => {\n    //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n    //                         .then(res => {\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n    //                             // Update eachItemsInOrder state by appending new items\n    //                             this.setState(prevState => ({\n    //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n    //                             }));\n    //                         })\n    //                         .catch(err => {\n    //                             console.error(\"Error fetching shirt data:\", err);\n    //                         });\n    //                     });\n    //                 });\n    //             });\n    //         })\n    //         .catch(err => {\n    //             console.error(\"Error fetching user data:\", err);\n    //         });\n    //     }\n    // }\n    // componentDidMount() {\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n    //         .then(res => {\n    //             // Update purchaseHistory state\n    //             this.setState({ purchaseHistory: res.data }, () => {\n    //                 // Iterate over each item in purchase history\n    //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\n    //                     // Store each itemsInOrder array in a separate array\n    //                     let eachItemsInOrder = [];\n    //                     itemsInArray.items.forEach(item => {\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n    //                         .then(res => {\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n    //                             eachItemsInOrder.push(updatedItem);\n    //                         })\n    //                         .catch(err => {\n    //                             console.error(\"Error fetching shirt data:\", err);\n    //                         });\n    //                     });\n    //                     // Push eachItemsInOrder array into allOrders array\n    //                     this.setState(prevState => ({\n    //                         allOrders: [\n    //                             ...prevState.allOrders,\n    //                             {\n    //                                 orderId: itemsInArray._id, // Store item._id into allOrders\n    //                                 eachItemsInOrder: eachItemsInOrder\n    //                             }\n    //                         ]\n    //                     }));\n    //                 });\n    //             });\n    //         })\n    //         .catch(err => {\n    //             console.error(\"Error fetching user data:\", err);\n    //         });\n    //     }\n    // }\n\n\n    componentDidMount() {\n        if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n            let userEmail;\n            // const currentUrl = window.location.pathname;\n            if(localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER){\n            userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n            }else if(localStorage.accessLevel ==ACCESS_LEVEL_ADMIN){\n                // if (currentUrl === \"/ViewPurchaseHistory\") {\n                //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n                // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\n                //     userEmail = this.props.match.params.email;\n                // }\n                userEmail = this.props.match.params.email;\n            }\n\n            axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n            .then(res => {\n                // Update purchase history state\n                this.setState({ purchaseHistory: res.data }, () => {\n                    // Iterate over each purchase history item\n                    this.state.purchaseHistory.forEach((itemsInArray, index) => {\n                        let eachItemsInOrder = [];\n                        let totalPrice = 0; // Initialize total price for the order\n                        itemsInArray.items.forEach(item => {\n                            // Fetch shirt details and calculate total price for each item\n                            axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n                                .then(res => {\n                                    const updatedItem = { ...res.data, quantity: item.quantity };\n                                    eachItemsInOrder.push(updatedItem);\n                                    \n                                    // Check if all items are fetched\n                                    if (eachItemsInOrder.length === itemsInArray.items.length) {\n                                        // Add the price of the item to the total price\n                                        eachItemsInOrder.map(item=>totalPrice += item.price * item.quantity)\n                                    \n                                        // Update state after all items are fetched\n                                        this.setState(prevState => ({\n                                            allOrders: [\n                                                ...prevState.allOrders,\n                                                {\n                                                    orderId: itemsInArray._id,\n                                                    eachItemsInOrder: eachItemsInOrder,\n                                                    totalPrice: totalPrice \n                                                }\n                                            ]\n                                        }), () => {\n                                            // Call loadShirtPhotos() after updating state\n                                            this.loadShirtPhotos();\n                                        });\n                                    }\n                                })\n                                .catch(err => {\n                                    console.error(\"Error fetching shirt data:\", err);\n                                });\n                        });\n                    });\n                });\n            })\n            .catch(err => {\n                console.error(\"Error fetching user data:\", err);\n            });\n    }\n    }\n    loadShirtPhotos() {\n        this.state.allOrders.forEach(order => {\n            order.eachItemsInOrder.forEach(item => {\n                item.shirtPhotoFilename.forEach(photo => {\n                    axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n                        .then(res => {\n                            // Update shirt photo in DOM\n                            const elements = document.getElementsByClassName(photo._id);\n                            Array.from(elements).forEach(element => {\n                                element.src = `data:;base64,${res.data.image}`;\n                            });\n                        })\n                        .catch(err => {\n                            // Handle error\n                            console.error(\"Error loading shirt photo:\", err);\n                        });\n                });\n            });\n        });\n    }\n    \n    handleSearchChange = (event) => {\n        this.setState({ searchQuery: event.target.value });\n    };\n    \n\n\n\n    render() {\n        console.log(this.state.purchaseHistory)\n        console.log(this.state.eachItemsInOrder)\n        console.log(this.state.allOrders)\n        // console.log(this.state.allOrders.map(order => order.eachItemsInOrder.map(item => item.name)));\n        return (\n            <>\n                {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\n                    <div>\n                        <NavigationBar />\n                        <h2>Ordered Items</h2>\n                        <input type=\"text\" placeholder=\"Search...\" value={searchQuery} onChange={this.handleSearchChange}/>\n                        {this.state.allOrders.length === 0 ? <h4>The User didn't purchase anything yet</h4>\n\n                       : \n                       <div>\n                       {this.state.allOrders.map(order => (\n                            <div key={order.orderId}>\n                                <h3>Order ID: {order.orderId}</h3>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Price</th>\n                                            <th>Size</th>\n                                            <th>Quantity</th>\n                                            <th>Total Price for this t-shirt</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {order.eachItemsInOrder.map(item => (\n                                            <tr>\n                                                <td>{item.shirtPhotoFilename.map(photo => (\n                                <img key={photo._id} className={photo._id} alt=\"\" />\n                            ))}\n                            </td>\n                                                <td>{item.name}</td>\n                                                <td>{item.price}</td>\n                                                <td>{item.size}</td>\n                                                <td>{item.quantity}</td>\n                                                <td>{item.price*item.quantity}</td>\n                                            </tr>\n                                        ))}\n                                        <tr>\n                                                <td >Total Of The Order Price:</td>\n                                                <td>{order.totalPrice}</td>\n                                            </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        ))}\n                        </div>\n\n                                        }\n                    </div>\n                ) : (\n                    <Redirect to={\"/main\"} />\n                )}\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}