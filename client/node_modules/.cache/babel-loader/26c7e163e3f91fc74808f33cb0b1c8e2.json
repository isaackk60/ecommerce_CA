{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyShirt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      axios.post(\"\".concat(SERVER_HOST, \"/Tshirtsales/\").concat(paymentData.PaymentID, \"/\").concat(this.props.shirtID, \"/\").concat(this.props.price), {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyShirt","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","onApprove","paymentData","post","PaymentID","shirtID","headers","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","orderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport axios from \"axios\"\nimport {Redirect} from \"react-router-dom\"\n\nimport {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\nimport PayPalMessage from \"./PayPalMessage\"\nimport {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n\n\nexport default class BuyShirt extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {redirectToPayPalMessage:false,\n                      payPalMessageType:null,\n                      payPalOrderID:null}\n    }\n    \n    \n    \n    createOrder = (data, actions) => \n    {\n        return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n    }\n    \n    \n    onApprove = paymentData =>\n    {      \n        axios.post(`${SERVER_HOST}/Tshirtsales/${paymentData.PaymentID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n        .then(res => \n        {                   \n            this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n                           payPalOrderID:paymentData.orderID, \n                           redirectToPayPalMessage:true}) \n        })\n        .catch(errorData =>\n        {           \n            this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n                           redirectToPayPalMessage:true}) \n        })\n    }\n \n        \n    onError = errorData => \n    {\n        this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n                       redirectToPayPalMessage:true})         \n    }\n    \n    \n    onCancel = cancelData => \n    {\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n        this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n                       redirectToPayPalMessage:true})       \n    }\n    \n\n                \n    render()\n    {\n        return (\n            <div>\n                {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n            \n                <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n                    <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n                </PayPalScriptProvider>\n            </div>\n    )}\n}\n"]},"metadata":{},"sourceType":"module"}