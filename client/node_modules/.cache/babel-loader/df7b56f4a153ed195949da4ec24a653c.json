{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\PayPalMessage.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nexport default class PayPalMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToDisplayAllShirts: false,\n      buttonColour: \"red-button\",\n      cart: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS) {\n      this.setState({\n        heading: \"PayPal Transaction Confirmation\",\n        message: \"Your PayPal transaction was successful.\",\n        buttonColour: \"green-button\"\n      });\n      const cartLocalStorage = JSON.parse(localStorage.getItem(\"itemsInCart\") || \"[]\"); // console.log(\"itemsInCart: \",localStorage.getItem(\"itemsInCart\").forEach(item=>{item.shirtPhotoFilename}))\n\n      this.setState({\n        cart: cartLocalStorage\n      });\n    } else if (this.props.match.params.messageType === PayPalMessage.messageType.CANCEL) {\n      this.setState({\n        heading: \"PayPal Transaction Cancelled\",\n        message: \"You cancelled your PayPal transaction. Therefore, the transaction was not completed.\"\n      });\n    } else if (this.props.match.params.messageType === PayPalMessage.messageType.ERROR) {\n      this.setState({\n        heading: \"PayPal Transaction Error\",\n        message: \"An error occured when trying to perform your PayPal transaction. The transaction was not completed. Please try to perform your transaction again.\"\n      });\n    } else {\n      console.log(\"The 'messageType' prop that was passed into the PayPalMessage component is invalid. It must be one of the following: PayPalMessage.messageType.SUCCESS, PayPalMessage.messageType.CANCEL or PayPalMessage.messageType.ERROR\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"payPalMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.redirectToDisplayAllShirts ? React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.heading), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.match.params.message), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.message), this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Your PayPal payment confirmation is \", React.createElement(\"span\", {\n      id: \"payPalPaymentID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.match.params.payPalPaymentID)) : null, React.createElement(\"p\", {\n      id: \"payPalPaymentIDButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: this.state.buttonColour,\n      to: \"/Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Continue\")));\n  }\n\n}\nPayPalMessage.messageType = {\n  SUCCESS: \"success\",\n  ERROR: \"error\",\n  CANCEL: \"cancel\"\n};","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\PayPalMessage.js"],"names":["React","Component","Redirect","Link","PayPalMessage","constructor","props","state","redirectToDisplayAllShirts","buttonColour","cart","componentDidMount","match","params","messageType","SUCCESS","setState","heading","message","cartLocalStorage","JSON","parse","localStorage","getItem","CANCEL","ERROR","console","log","render","payPalPaymentID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Redirect, Link } from \"react-router-dom\"\r\n\r\nexport default class PayPalMessage extends Component {\r\n    static messageType = {\r\n        SUCCESS: \"success\",\r\n        ERROR: \"error\",\r\n        CANCEL: \"cancel\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            redirectToDisplayAllShirts: false,\r\n            buttonColour: \"red-button\",\r\n            cart:[]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS) {\r\n            this.setState({\r\n                heading: \"PayPal Transaction Confirmation\",\r\n                message: \"Your PayPal transaction was successful.\",\r\n                buttonColour: \"green-button\"\r\n            })\r\n            const cartLocalStorage = JSON.parse(localStorage.getItem(\"itemsInCart\") || \"[]\");\r\n\r\n            // console.log(\"itemsInCart: \",localStorage.getItem(\"itemsInCart\").forEach(item=>{item.shirtPhotoFilename}))\r\n\r\n            this.setState({ cart: cartLocalStorage })\r\n        }\r\n        else if (this.props.match.params.messageType === PayPalMessage.messageType.CANCEL) {\r\n            this.setState({\r\n                heading: \"PayPal Transaction Cancelled\",\r\n                message: \"You cancelled your PayPal transaction. Therefore, the transaction was not completed.\"\r\n            })\r\n        }\r\n        else if (this.props.match.params.messageType === PayPalMessage.messageType.ERROR) {\r\n            this.setState({\r\n                heading: \"PayPal Transaction Error\",\r\n                message: \"An error occured when trying to perform your PayPal transaction. The transaction was not completed. Please try to perform your transaction again.\"\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"The 'messageType' prop that was passed into the PayPalMessage component is invalid. It must be one of the following: PayPalMessage.messageType.SUCCESS, PayPalMessage.messageType.CANCEL or PayPalMessage.messageType.ERROR\")\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"payPalMessage\">\r\n\r\n                {this.state.redirectToDisplayAllShirts ? <Redirect to=\"/main\" /> : null}\r\n\r\n                <h3>{this.state.heading}</h3>\r\n                <p>{this.props.match.params.message}</p>\r\n                <p>{this.state.message}</p>\r\n\r\n                {this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS ? <p>Your PayPal payment confirmation is <span id=\"payPalPaymentID\">{this.props.match.params.payPalPaymentID}</span></p> : null}\r\n\r\n                <p id=\"payPalPaymentIDButton\"><Link className={this.state.buttonColour} to={\"/Main\"}>Continue</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}