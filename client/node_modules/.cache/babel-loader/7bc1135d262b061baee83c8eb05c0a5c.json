{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js\";\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/Tshirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/shirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyShirt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price.toFixed(2),\n            // Ensure total price is formatted properly\n            currency_code: \"EUR\"\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      axios.post(\"\".concat(SERVER_HOST, \"/shirtsales/\").concat(paymentData.orderID, \"/\").concat(this.props.shirtID, \"/\").concat(this.props.price), {}, {\n        headers: {\n          authorization: localStorage.token\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyShirt","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","toFixed","currency_code","onApprove","paymentData","post","orderID","shirtID","headers","authorization","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,4BAA/C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,yBAApD;AAEA,eAAe,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC5CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUL,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC7B,aAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,QAAAA,cAAc,EAAE,CACZ;AACIC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,OAAjB,CAAyB,CAAzB,CADH;AACgC;AACpCC,YAAAA,aAAa,EAAE;AAFX;AADZ,SADY;AADQ,OAArB,CAAP;AAUH,KArBkB;;AAAA,SAuBnBC,SAvBmB,GAuBNC,WAAD,IAAiB;AACzBtB,MAAAA,KAAK,CACAuB,IADL,WAEWpB,WAFX,yBAEqCmB,WAAW,CAACE,OAFjD,cAE4D,KAAKf,KAAL,CAAWgB,OAFvE,cAEkF,KAAKhB,KAAL,CAAWS,KAF7F,GAGQ,EAHR,EAIQ;AAAEQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEC,YAAY,CAACC;AAA9B;AAAX,OAJR,EAMKC,IANL,CAMWC,GAAD,IAAS;AACX,aAAKC,QAAL,CAAc;AACVC,UAAAA,iBAAiB,EAAE7B,aAAa,CAAC8B,WAAd,CAA0BC,OADnC;AAEVC,UAAAA,aAAa,EAAEd,WAAW,CAACE,OAFjB;AAGVa,UAAAA,uBAAuB,EAAE;AAHf,SAAd;AAKH,OAZL,EAaKC,KAbL,CAaYC,SAAD,IAAe;AAClB,aAAKP,QAAL,CAAc;AACVC,UAAAA,iBAAiB,EAAE7B,aAAa,CAAC8B,WAAd,CAA0BM,KADnC;AAEVH,UAAAA,uBAAuB,EAAE;AAFf,SAAd;AAIH,OAlBL;AAmBH,KA3CkB;;AAAA,SA6CnBI,OA7CmB,GA6CRF,SAAD,IAAe;AACrB,WAAKP,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAE7B,aAAa,CAAC8B,WAAd,CAA0BM,KADnC;AAEVH,QAAAA,uBAAuB,EAAE;AAFf,OAAd;AAIH,KAlDkB;;AAAA,SAoDnBK,QApDmB,GAoDPC,UAAD,IAAgB;AACvB,WAAKX,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAE7B,aAAa,CAAC8B,WAAd,CAA0BU,MADnC;AAEVP,QAAAA,uBAAuB,EAAE;AAFf,OAAd;AAIH,KAzDkB;;AAGf,SAAKQ,KAAL,GAAa;AACTR,MAAAA,uBAAuB,EAAE,KADhB;AAETJ,MAAAA,iBAAiB,EAAE,IAFV;AAGTG,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKH;;AAmDDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWR,uBAAX,GACG,oBAAC,QAAD;AACI,MAAA,EAAE,2BAAoB,KAAKQ,KAAL,CAAWZ,iBAA/B,cAAoD,KAAKY,KAAL,CAAWT,aAA/D,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAIG,IALR,EAOI,oBAAC,oBAAD;AACI,MAAA,OAAO,EAAE;AACLW,QAAAA,QAAQ,EAAE,KADL;AAEL,qBAAa7C;AAFR,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,aAAD;AACI,MAAA,KAAK,EAAE;AAAE8C,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,WAAW,EAAE,KAAKtC,WAFtB;AAGI,MAAA,SAAS,EAAE,KAAKW,SAHpB;AAII,MAAA,OAAO,EAAE,KAAKoB,OAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKC,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAPJ,CADJ;AAwBH;;AArF2C","sourcesContent":["// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n\n\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n    \n    \n    \n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n    \n    \n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/Tshirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n \n        \n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n    \n    \n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n    \n\n                \n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\n\n\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n\n\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n    \n    \n    \n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n    \n    \n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/shirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n \n        \n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n    \n    \n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n    \n\n                \n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\n\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\n\nexport default class BuyShirt extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirectToPayPalMessage: false,\n            payPalMessageType: null,\n            payPalOrderID: null,\n        };\n    }\n\n    createOrder = (data, actions) => {\n        return actions.order.create({\n            purchase_units: [\n                {\n                    amount: {\n                        value: this.props.price.toFixed(2), // Ensure total price is formatted properly\n                        currency_code: \"EUR\",\n                    },\n                },\n            ],\n        });\n    };\n\n    onApprove = (paymentData) => {\n        axios\n            .post(\n                `${SERVER_HOST}/shirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`,\n                {},\n                { headers: { authorization: localStorage.token } }\n            )\n            .then((res) => {\n                this.setState({\n                    payPalMessageType: PayPalMessage.messageType.SUCCESS,\n                    payPalOrderID: paymentData.orderID,\n                    redirectToPayPalMessage: true,\n                });\n            })\n            .catch((errorData) => {\n                this.setState({\n                    payPalMessageType: PayPalMessage.messageType.ERROR,\n                    redirectToPayPalMessage: true,\n                });\n            });\n    };\n\n    onError = (errorData) => {\n        this.setState({\n            payPalMessageType: PayPalMessage.messageType.ERROR,\n            redirectToPayPalMessage: true,\n        });\n    };\n\n    onCancel = (cancelData) => {\n        this.setState({\n            payPalMessageType: PayPalMessage.messageType.CANCEL,\n            redirectToPayPalMessage: true,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                {this.state.redirectToPayPalMessage ? (\n                    <Redirect\n                        to={`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}\n                    />\n                ) : null}\n\n                <PayPalScriptProvider\n                    options={{\n                        currency: \"EUR\",\n                        \"client-id\": SANDBOX_CLIENT_ID,\n                    }}\n                >\n                    <PayPalButtons\n                        style={{ layout: \"horizontal\" }}\n                        createOrder={this.createOrder}\n                        onApprove={this.onApprove}\n                        onError={this.onError}\n                        onCancel={this.onCancel}\n                    />\n                </PayPalScriptProvider>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}