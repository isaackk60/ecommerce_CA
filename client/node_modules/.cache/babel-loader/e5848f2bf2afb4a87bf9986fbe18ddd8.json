{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let formData = new FormData();\n\n      if (this.state.selectedFile) {\n        formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name);\n      }\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/register/\").concat(this.state.name, \"/\").concat(this.state.email, \"/\").concat(this.state.password), formData, {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        localStorage.name = res.data.name;\n        localStorage.accessLevel = res.data.accessLevel;\n        localStorage.profilePhoto = res.data.profilePhoto;\n        localStorage.token = res.data.token;\n        this.setState({\n          isRegistered: true\n        });\n        localStorage.setItem(\"userEmail\", JSON.stringify(this.state.email));\n      }).catch(err => {\n        this.setState({\n          wasSubmittedAtLeastOnce: true\n        });\n      }); // localStorage.setItem(\"userEmail\", JSON.stringify(this.state.email));\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      selectedFile: null,\n      isRegistered: false,\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"login_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outside-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(\"div\", {\n      className: \"loginHeaderContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"anotherLoginHeader\",\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"p\", {\n      className: \"loginHeaderLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"|\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sign Up\")), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      autoComplete: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login-bottom-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(LinkInClass, {\n      value: \"Register New User\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Cancel\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/Register.js"],"names":["React","Component","Redirect","Link","axios","NavigationBar","LinkInClass","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","preventDefault","formData","FormData","state","append","post","email","password","headers","then","res","localStorage","data","accessLevel","profilePhoto","token","isRegistered","setItem","JSON","stringify","catch","err","wasSubmittedAtLeastOnce","confirmPassword","render","errorMessage","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Redirect, Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport NavigationBar from \"./NavigationBar\"\nimport LinkInClass from \"../components/LinkInClass\"\nimport { SERVER_HOST } from \"../config/global_constants\"\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            selectedFile: null,\n            isRegistered: false,\n            wasSubmittedAtLeastOnce: false\n        }\n    }\n\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n\n    handleFileChange = (e) => {\n        this.setState({ selectedFile: e.target.files[0] })\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        let formData = new FormData()\n        if (this.state.selectedFile) {\n            formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name)\n        }\n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, { headers: { \"Content-type\": \"multipart/form-data\" } })\n            .then(res => {\n                localStorage.name = res.data.name\n                localStorage.accessLevel = res.data.accessLevel\n                localStorage.profilePhoto = res.data.profilePhoto\n                localStorage.token = res.data.token\n\n                this.setState({ isRegistered: true })\n                localStorage.setItem(\"userEmail\", JSON.stringify(this.state.email));\n            })\n            .catch(err => {\n                this.setState({ wasSubmittedAtLeastOnce: true })\n            })\n        // localStorage.setItem(\"userEmail\", JSON.stringify(this.state.email));\n    }\n\n\n    render() {\n        let errorMessage = \"\";\n        if (this.state.wasSubmittedAtLeastOnce) {\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br /></div>;\n        }\n\n        return (\n            <>\n                <NavigationBar />\n                <main className=\"login_main\">\n                    <div className=\"outside-form-container\">\n                        <form className=\"form-container\" noValidate={true} id=\"loginOrRegistrationForm\">\n\n                            {this.state.isRegistered ? <Redirect to=\"/main\" /> : null}\n                            {errorMessage}\n                            <div className=\"loginHeaderContainer\">\n                                <Link className=\"anotherLoginHeader\" to={\"/Login\"}>Login</Link>\n                                <p className=\"loginHeaderLink\">|</p>\n                                <h2>Sign Up</h2>\n                            </div>\n\n                            <input\n                                name=\"name\"\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                autoComplete=\"name\"\n                                value={this.state.name}\n                                onChange={this.handleChange}\n                                ref={(input) => { this.inputToFocus = input }}\n                            /><br />\n\n                            <input\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                autoComplete=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            /><br />\n\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                autoComplete=\"password\"\n                                title=\"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            /><br />\n\n                            <input\n                                name=\"confirmPassword\"\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                                autoComplete=\"confirmPassword\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChange}\n                            /><br />\n\n                            <input\n                                type=\"file\"\n                                onChange={this.handleFileChange}\n                            /><br /><br />\n\n                            <div className=\"login-bottom-button\">\n                                <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\n                                <Link className=\"red-button\" to={\"/main\"}>Cancel</Link>\n                            </div>\n                        </form>\n                    </div>\n                </main>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}