{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ShoppingCart.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    this.state = {\n      items: [itemsInCart],\n      totalPrice: 0\n    };\n  } // addItemToCart = (item) => {\n  //     const updatedItems = [...this.state.items, item];\n  //     const totalPrice = this.state.totalPrice + (item.price * item.quantity);\n  //     this.setState({ items: updatedItems, totalPrice });\n  // };\n\n\n  render() {\n    const itemsInCart = this.props.location.state.itemsInCart;\n    let totalPrice = 0;\n    itemsInCart.forEach(item => {\n      totalPrice += item.price * item.quantity;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, items.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, item.name, \" - Quantity: \", item.quantity, \" - Price: $\", item.price * item.quantity))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Total Price: $\", totalPrice));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ShoppingCart.js"],"names":["React","Component","Form","axios","ShoppingCart","constructor","props","state","items","itemsInCart","totalPrice","render","location","forEach","item","price","quantity","map","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CAACC,WAAD,CADE;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH,GAN+C,CAQhD;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAAA,UACGF,WADH,GACmB,KAAKH,KAAL,CAAWM,QAAX,CAAoBL,KADvC,CACGE,WADH;AAGL,QAAIC,UAAU,GAAG,CAAjB;AACAD,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,IAAI,IAAI;AACxBJ,MAAAA,UAAU,IAAII,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,QAAhC;AACH,KAFD;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,KAAK,CAACS,GAAN,CAAU,CAACH,IAAD,EAAOI,KAAP,KACP;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,IAAI,CAACK,IADV,mBAC6BL,IAAI,CAACE,QADlC,iBACuDF,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,QADzE,CADH,CADL,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBN,UAAlB,CATJ,CADJ;AAaH;;AAnC+C","sourcesContent":["import React, { Component } from \"react\"\nimport Form from \"react-bootstrap/Form\"\n\nimport axios from \"axios\"\n\nexport default class ShoppingCart extends Component {\n    constructor(props){\n        this.state = {\n            items: [itemsInCart], \n            totalPrice: 0 \n        };\n    }\n\n    // addItemToCart = (item) => {\n    //     const updatedItems = [...this.state.items, item];\n    //     const totalPrice = this.state.totalPrice + (item.price * item.quantity);\n    //     this.setState({ items: updatedItems, totalPrice });\n    // };\n\n    render() {\n        const { itemsInCart } = this.props.location.state;\n\n        let totalPrice = 0;\n        itemsInCart.forEach(item => {\n            totalPrice += item.price * item.quantity;\n        });\n\n        return (\n            <div>\n                <h2>Shopping Cart</h2>\n                <ul>\n                    {items.map((item, index) => (\n                        <li key={index}>\n                            {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\n                        </li>\n                    ))}\n                </ul>\n                <p>Total Price: ${totalPrice}</p>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}