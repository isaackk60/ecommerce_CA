{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ViewAllUsers.js\";\n// import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Logout from \"./Logout\";\n// import axios from \"axios\";\n// import NavigationBar from \"./NavigationBar\";\n// import { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\n// export default class ViewAllUsers extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             users: [],\n//             searchQuery: \"\",\n//             sortFunction: \"name\",\n//             phoneFilter: \"all\"\n//         };\n//     }\n//     componentDidMount() {\n//         if (localStorage.accessLevel > ACCESS_LEVEL_NORMAL_USER) {\n//             axios.get(`${SERVER_HOST}/users`)\n//                 .then(res => {\n//                     this.setState({ users: res.data });\n//                 })\n//                 .catch(err => {\n//                     // Handle error\n//                     console.error(\"Error fetching users:\", err);\n//                 });\n//         }\n//     }\n//     handleDelete = (userId) => {\n//         axios.delete(`${SERVER_HOST}/users/${userId}`)\n//             .then(res => {\n//                 // Update state after successful deletion\n//                 this.setState(prevState => ({\n//                     users: prevState.users.filter(user => user._id !== userId)\n//                 }));\n//             })\n//             .catch(err => {\n//                 // Handle error\n//                 console.error(\"Error deleting user:\", err);\n//             });\n//     };\n//     handleSearchChange = (event) => {\n//         this.setState({ searchQuery: event.target.value });\n//     };\n//     handleSortChange = (event) => {\n//         this.setState({ sortFunction: event.target.value });\n//     };\n//     handlePhoneFilterChange = (value) => {\n//         this.setState({ phoneFilter: value });\n//     };\n//     render() {\n//         console.log(this.state.users)\n//         const { users, searchQuery, sortFunction, phoneFilter} = this.state;\n//         const filteredUsers = users.filter(user =>\n//             user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//             user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//             user.phone.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//             user.address.toLowerCase().includes(searchQuery.toLowerCase())\n//         );\n//         let sortedUsers = [...filteredUsers];\n//         const sort = {\n//             name: (a, b) => a.name.localeCompare(b.name),\n//             email: (a, b) => a.email.localeCompare(b.email),\n//             phone: (a, b) => {\n//                 if (!a.phone && !b.phone) return 0;\n//                 if (!a.phone) return 1;\n//                 if (!b.phone) return -1;\n//                 return a.phone.localeCompare(b.phone);\n//             },\n//             address: (a, b) => {\n//                 if (!a.address && !b.address) return 0;\n//                 if (!a.address) return 1;\n//                 if (!b.address) return -1;\n//                 return a.address.localeCompare(b.address);\n//             },\n//         };\n//         // sortedUsers.sort(sort[sortFunction]);\n//         // sortedUsers = [...filteredUsersWithPhoneFilter];\n//         // if (phoneFilter === \"irish\") {\n//         //     filteredUsers = filteredUsers.filter(user => user.phone.startsWith(\"353\"));\n//         // }\n//         // // if (phoneFilter === \"irish\") {\n//         // //     filteredPhoneNumbers = filteredPhoneNumbers.filter(phone => phone.startsWith(\"353\"));\n//         // // }\n//         return (\n//             <div>\n//                 <NavigationBar/>\n//                 <h2>All Users</h2>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search...\"\n//                     value={searchQuery}\n//                     onChange={this.handleSearchChange}\n//                 />\n//                 <select value={sortFunction} onChange={this.handleSortChange}>\n//                     <option value=\"name\">Sort by Name</option>\n//                     <option value=\"email\">Sort by Email</option>\n//                     <option value=\"phone\">Sort by Phone</option>\n//                     <option value=\"address\">Sort by Address</option>\n//                 </select>\n//                 {/* <div>\n//                     <label htmlFor=\"phoneFilter\">Filter by Phone:</label>\n//                         <select id=\"phoneFilter\" value={phoneFilter} onChange={(e) => this.handlePhoneFilterChange(e.target.value)}>\n//                             <option value=\"all\">All</option>\n//                             <option value=\"irish\">Irish</option>\n//                         </select>\n//                  </div> */}\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Phone</th>\n//                             <th>Address</th>\n//                             <th></th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {sortedUsers.map(user => (\n//                             <tr key={user._id}>\n//                                 <td>{user.name}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.phone}</td>\n//                                 <td>{user.address}</td>\n//                                 <td>\n//                                     <button onClick={() => this.handleDelete(user._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//                 <div className=\"logoutButton\">\n//                     <button className=\"logoutbutton\"><Logout /></button>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class ViewAllUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = userId => {\n      axios.delete(\"\".concat(SERVER_HOST, \"/users/\").concat(userId)).then(res => {\n        // Update state after successful deletion\n        this.setState(prevState => ({\n          users: prevState.users.filter(user => user._id !== userId)\n        }));\n      }).catch(err => {\n        // Handle error\n        console.error(\"Error deleting user:\", err);\n      });\n    };\n\n    this.handleSearchChange = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.handleSortChange = event => {\n      this.setState({\n        sortFunction: event.target.value\n      });\n    };\n\n    this.handlePhoneFilterChange = value => {\n      this.setState({\n        phoneFilter: value\n      });\n    };\n\n    this.state = {\n      users: [],\n      searchQuery: \"\",\n      sortFunction: \"name\",\n      phoneFilter: \"all\"\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.accessLevel > ACCESS_LEVEL_NORMAL_USER) {\n      axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n        this.setState({\n          users: res.data\n        });\n      }).catch(err => {\n        // Handle error\n        console.error(\"Error fetching users:\", err);\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.users);\n    const _this$state = this.state,\n          users = _this$state.users,\n          searchQuery = _this$state.searchQuery,\n          sortFunction = _this$state.sortFunction,\n          phoneFilter = _this$state.phoneFilter;\n    const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchQuery.toLowerCase()) || user.email.toLowerCase().includes(searchQuery.toLowerCase()) || user.phone.toLowerCase().includes(searchQuery.toLowerCase()) || user.address.toLowerCase().includes(searchQuery.toLowerCase()));\n    let sortedUsers = [...filteredUsers];\n    const sort = {\n      name: (a, b) => a.name.localeCompare(b.name),\n      email: (a, b) => a.email.localeCompare(b.email),\n      phone: (a, b) => {\n        if (!a.phone && !b.phone) return 0;\n        if (!a.phone) return 1;\n        if (!b.phone) return -1;\n        return a.phone.localeCompare(b.phone);\n      },\n      address: (a, b) => {\n        if (!a.address && !b.address) return 0;\n        if (!a.address) return 1;\n        if (!b.address) return -1;\n        return a.address.localeCompare(b.address);\n      }\n    }; // let sortedUsers = [...filteredUsers];\n\n    sortedUsers.sort(sort[sortFunction]);\n    let filteredUsersWithPhoneFilter = [...filteredUsers];\n\n    if (phoneFilter === \"irish\") {\n      filteredUsersWithPhoneFilter = filteredUsersWithPhoneFilter.filter(user => user.phone.startsWith(\"353\"));\n    }\n\n    sortedUsers = [...filteredUsersWithPhoneFilter];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"All Users\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchQuery,\n      onChange: this.handleSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: sortFunction,\n      onChange: this.handleSortChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Sort by Name\"), React.createElement(\"option\", {\n      value: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Sort by Email\"), React.createElement(\"option\", {\n      value: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Sort by Phone\"), React.createElement(\"option\", {\n      value: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Sort by Address\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phoneFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Filter by Phone:\"), React.createElement(\"select\", {\n      id: \"phoneFilter\",\n      value: phoneFilter,\n      onChange: e => this.handlePhoneFilterChange(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"irish\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Irish\"))), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, sortedUsers.map(user => React.createElement(\"tr\", {\n      key: user._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, user.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, user.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, user.phone), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, user.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleDelete(user._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Delete\")))))), React.createElement(\"div\", {\n      className: \"logoutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"logoutbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ViewAllUsers.js"],"names":["React","Component","Link","Logout","axios","NavigationBar","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","ViewAllUsers","constructor","props","handleDelete","userId","delete","then","res","setState","prevState","users","filter","user","_id","catch","err","console","error","handleSearchChange","event","searchQuery","target","value","handleSortChange","sortFunction","handlePhoneFilterChange","phoneFilter","state","componentDidMount","localStorage","accessLevel","get","data","render","log","filteredUsers","name","toLowerCase","includes","email","phone","address","sortedUsers","sort","a","b","localeCompare","filteredUsersWithPhoneFilter","startsWith","e","map"],"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","sourcesContent":["// import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Logout from \"./Logout\";\n// import axios from \"axios\";\n// import NavigationBar from \"./NavigationBar\";\n// import { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\n\n// export default class ViewAllUsers extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             users: [],\n//             searchQuery: \"\",\n//             sortFunction: \"name\",\n//             phoneFilter: \"all\"\n//         };\n//     }\n\n//     componentDidMount() {\n//         if (localStorage.accessLevel > ACCESS_LEVEL_NORMAL_USER) {\n//             axios.get(`${SERVER_HOST}/users`)\n//                 .then(res => {\n//                     this.setState({ users: res.data });\n//                 })\n//                 .catch(err => {\n//                     // Handle error\n//                     console.error(\"Error fetching users:\", err);\n//                 });\n//         }\n//     }\n\n//     handleDelete = (userId) => {\n//         axios.delete(`${SERVER_HOST}/users/${userId}`)\n//             .then(res => {\n//                 // Update state after successful deletion\n//                 this.setState(prevState => ({\n//                     users: prevState.users.filter(user => user._id !== userId)\n//                 }));\n//             })\n//             .catch(err => {\n//                 // Handle error\n//                 console.error(\"Error deleting user:\", err);\n//             });\n//     };\n\n//     handleSearchChange = (event) => {\n//         this.setState({ searchQuery: event.target.value });\n//     };\n\n//     handleSortChange = (event) => {\n//         this.setState({ sortFunction: event.target.value });\n//     };\n\n//     handlePhoneFilterChange = (value) => {\n//         this.setState({ phoneFilter: value });\n//     };\n\n//     render() {\n//         console.log(this.state.users)\n//         const { users, searchQuery, sortFunction, phoneFilter} = this.state;\n//         const filteredUsers = users.filter(user =>\n//             user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//             user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//             user.phone.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//             user.address.toLowerCase().includes(searchQuery.toLowerCase())\n//         );\n\n//         let sortedUsers = [...filteredUsers];\n//         const sort = {\n//             name: (a, b) => a.name.localeCompare(b.name),\n//             email: (a, b) => a.email.localeCompare(b.email),\n//             phone: (a, b) => {\n//                 if (!a.phone && !b.phone) return 0;\n//                 if (!a.phone) return 1;\n//                 if (!b.phone) return -1;\n//                 return a.phone.localeCompare(b.phone);\n//             },\n//             address: (a, b) => {\n//                 if (!a.address && !b.address) return 0;\n//                 if (!a.address) return 1;\n//                 if (!b.address) return -1;\n//                 return a.address.localeCompare(b.address);\n//             },\n//         };\n        \n//         // sortedUsers.sort(sort[sortFunction]);\n\n//         // sortedUsers = [...filteredUsersWithPhoneFilter];\n//         // if (phoneFilter === \"irish\") {\n//         //     filteredUsers = filteredUsers.filter(user => user.phone.startsWith(\"353\"));\n//         // }\n//         // // if (phoneFilter === \"irish\") {\n//         // //     filteredPhoneNumbers = filteredPhoneNumbers.filter(phone => phone.startsWith(\"353\"));\n//         // // }\n\n      \n\n//         return (\n//             <div>\n//                 <NavigationBar/>\n//                 <h2>All Users</h2>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search...\"\n//                     value={searchQuery}\n//                     onChange={this.handleSearchChange}\n//                 />\n\n//                 <select value={sortFunction} onChange={this.handleSortChange}>\n//                     <option value=\"name\">Sort by Name</option>\n//                     <option value=\"email\">Sort by Email</option>\n//                     <option value=\"phone\">Sort by Phone</option>\n//                     <option value=\"address\">Sort by Address</option>\n//                 </select>\n\n//                 {/* <div>\n//                     <label htmlFor=\"phoneFilter\">Filter by Phone:</label>\n//                         <select id=\"phoneFilter\" value={phoneFilter} onChange={(e) => this.handlePhoneFilterChange(e.target.value)}>\n//                             <option value=\"all\">All</option>\n//                             <option value=\"irish\">Irish</option>\n//                         </select>\n//                  </div> */}\n\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Phone</th>\n//                             <th>Address</th>\n//                             <th></th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {sortedUsers.map(user => (\n//                             <tr key={user._id}>\n//                                 <td>{user.name}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.phone}</td>\n//                                 <td>{user.address}</td>\n//                                 <td>\n//                                     <button onClick={() => this.handleDelete(user._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//                 <div className=\"logoutButton\">\n//                     <button className=\"logoutbutton\"><Logout /></button>\n//                 </div>\n                \n//             </div>\n//         );\n//     }\n    \n// }\n\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\n\nexport default class ViewAllUsers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            searchQuery: \"\",\n            sortFunction: \"name\",\n            phoneFilter: \"all\"\n        };\n    }\n\n    componentDidMount() {\n        if (localStorage.accessLevel > ACCESS_LEVEL_NORMAL_USER) {\n            axios.get(`${SERVER_HOST}/users`)\n                .then(res => {\n                    this.setState({ users: res.data });\n                })\n                .catch(err => {\n                    // Handle error\n                    console.error(\"Error fetching users:\", err);\n                });\n        }\n    }\n\n    handleDelete = (userId) => {\n        axios.delete(`${SERVER_HOST}/users/${userId}`)\n            .then(res => {\n                // Update state after successful deletion\n                this.setState(prevState => ({\n                    users: prevState.users.filter(user => user._id !== userId)\n                }));\n            })\n            .catch(err => {\n                // Handle error\n                console.error(\"Error deleting user:\", err);\n            });\n    };\n\n    handleSearchChange = (event) => {\n        this.setState({ searchQuery: event.target.value });\n    };\n\n    handleSortChange = (event) => {\n        this.setState({ sortFunction: event.target.value });\n    };\n    // handleSortChange = (event) => {\n    //     const selectedSortFunction = event.target.value;\n    //     this.setState({ sortFunction: selectedSortFunction });\n    // };\n\n    handlePhoneFilterChange = (value) => {\n        this.setState({ phoneFilter: value });\n    };\n\n    render() {\n        console.log(this.state.users)\n        const { users, searchQuery, sortFunction, phoneFilter} = this.state;\n        const filteredUsers = users.filter(user =>\n            user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            user.phone.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            user.address.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n\n        let sortedUsers = [...filteredUsers];\n        const sort = {\n            name: (a, b) => a.name.localeCompare(b.name),\n            email: (a, b) => a.email.localeCompare(b.email),\n            phone: (a, b) => {\n                if (!a.phone && !b.phone) return 0;\n                if (!a.phone) return 1;\n                if (!b.phone) return -1;\n                return a.phone.localeCompare(b.phone);\n            },\n            address: (a, b) => {\n                if (!a.address && !b.address) return 0;\n                if (!a.address) return 1;\n                if (!b.address) return -1;\n                return a.address.localeCompare(b.address);\n            },\n        };\n\n        // let sortedUsers = [...filteredUsers];\n        sortedUsers.sort(sort[sortFunction]);\n\n        let filteredUsersWithPhoneFilter = [...filteredUsers];\n\n        if (phoneFilter === \"irish\") {\n            filteredUsersWithPhoneFilter = filteredUsersWithPhoneFilter.filter(user => user.phone.startsWith(\"353\"));\n        }\n\n        sortedUsers = [...filteredUsersWithPhoneFilter];\n\n        return (\n            <div>\n                <NavigationBar/>\n                <h2>All Users</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={searchQuery}\n                    onChange={this.handleSearchChange}\n                />\n\n                <select value={sortFunction} onChange={this.handleSortChange}>\n                    <option value=\"name\">Sort by Name</option>\n                    <option value=\"email\">Sort by Email</option>\n                    <option value=\"phone\">Sort by Phone</option>\n                    <option value=\"address\">Sort by Address</option>\n                </select>\n\n                <div>\n                    <label htmlFor=\"phoneFilter\">Filter by Phone:</label>\n                    <select id=\"phoneFilter\" value={phoneFilter} onChange={(e) => this.handlePhoneFilterChange(e.target.value)}>\n                        <option value=\"all\">All</option>\n                        <option value=\"irish\">Irish</option>\n                        {/* Add more options for other filters if needed */}\n                    </select>\n                </div>\n\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Phone</th>\n                            <th>Address</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {sortedUsers.map(user => (\n                            <tr key={user._id}>\n                                <td>{user.name}</td>\n                                <td>{user.email}</td>\n                                <td>{user.phone}</td>\n                                <td>{user.address}</td>\n                                <td>\n                                    <button onClick={() => this.handleDelete(user._id)}>Delete</button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <div className=\"logoutButton\">\n                    <button className=\"logoutbutton\"><Logout /></button>\n                </div>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}