{"ast":null,"code":"var _jsxFileName = \"C:\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\BuyShirt.js\";\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyShirt extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      console.log(\"PayPal payment successful\");\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal payment error\");\n    };\n\n    this.onCancel = cancelData => {\n      console.log(\"PayPal payment cancelled\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\ecommerce_CA\\client\\src\\components\\BuyShirt.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyShirt","createOrder","data","actions","order","create","purchase_units","amount","value","props","price","onApprove","paymentData","console","log","onError","errorData","onCancel","cancelData","render","currency","layout"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,SAAQC,iBAAR,EAA2BC,WAA3B,QAA6C,4BAA7C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,aAAR,EAAuBC,oBAAvB,QAAkD,yBAAlD;AAGA,eAAe,MAAMC,QAAN,SAAuBR,SAAvB,CACf;AAAA;AAAA;;AAAA,SACIS,WADJ,GACkB,CAACC,IAAD,EAAOC,OAAP,KACd;AACI,aAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AAACC,QAAAA,cAAc,EAAC,CAAC;AAACC,UAAAA,MAAM,EAAC;AAACC,YAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWC;AAAlB;AAAR,SAAD;AAAhB,OAArB,CAAP;AACH,KAJL;;AAAA,SAOIC,SAPJ,GAOgBC,WAAW,IACvB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,KAVL;;AAAA,SAaIC,OAbJ,GAacC,SAAS,IACnB;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,KAhBL;;AAAA,SAmBIG,QAnBJ,GAmBeC,UAAU,IACrB;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,KAtBL;AAAA;;AAyBIK,EAAAA,MAAM,GACN;AACI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,oBAAD;AAAsB,MAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAC,KAAV;AAAiB,qBAAYzB;AAA7B,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAC0B,QAAAA,MAAM,EAAE;AAAT,OAAtB;AAA8C,MAAA,WAAW,EAAE,KAAKpB,WAAhE;AAA6E,MAAA,SAAS,EAAE,KAAKU,SAA7F;AAAwG,MAAA,OAAO,EAAE,KAAKI,OAAtH;AAA+H,MAAA,QAAQ,EAAE,KAAKE,QAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAMF;;AAjCN","sourcesContent":["// import React, {Component} from \"react\"\r\n// import axios from \"axios\"\r\n// import {Redirect} from \"react-router-dom\"\r\n\r\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\n// import PayPalMessage from \"./PayPalMessage\"\r\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\r\n\r\n\r\n// export default class BuyShirt extends Component\r\n// {\r\n//     constructor(props)\r\n//     {\r\n//         super(props)\r\n\r\n//         this.state = {redirectToPayPalMessage:false,\r\n//                       payPalMessageType:null,\r\n//                       payPalOrderID:null}\r\n//     }\r\n    \r\n    \r\n    \r\n//     createOrder = (data, actions) => \r\n//     {\r\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n//     }\r\n    \r\n    \r\n//     onApprove = paymentData =>\r\n//     {      \r\n//         axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n//         .then(res => \r\n//         {                   \r\n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n//                            payPalOrderID:paymentData.orderID, \r\n//                            redirectToPayPalMessage:true}) \r\n//         })\r\n//         .catch(errorData =>\r\n//         {           \r\n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n//                            redirectToPayPalMessage:true}) \r\n//         })\r\n//     }\r\n \r\n        \r\n//     onError = errorData => \r\n//     {\r\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n//                        redirectToPayPalMessage:true})         \r\n//     }\r\n    \r\n    \r\n//     onCancel = cancelData => \r\n//     {\r\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \r\n//                        redirectToPayPalMessage:true})       \r\n//     }\r\n    \r\n\r\n                \r\n//     render()\r\n//     {\r\n//         return (\r\n//             <div>\r\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \r\n            \r\n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n//                 </PayPalScriptProvider>\r\n//             </div>\r\n//     )}\r\n// }\r\n\r\n\r\nimport React, {Component} from \"react\"\r\nimport axios from \"axios\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nimport {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\nimport PayPalMessage from \"./PayPalMessage\"\r\nimport {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\r\n\r\n\r\nexport default class BuyShirt extends Component\r\n{\r\n    createOrder = (data, actions) => \r\n    {\r\n        return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n    }\r\n    \r\n    \r\n    onApprove = paymentData =>\r\n    {      \r\n        console.log(\"PayPal payment successful\") \r\n    }\r\n \r\n        \r\n    onError = errorData => \r\n    {\r\n        console.log(\"PayPal payment error\")         \r\n    }\r\n    \r\n    \r\n    onCancel = cancelData => \r\n    {\r\n        console.log(\"PayPal payment cancelled\")      \r\n    }\r\n    \r\n                \r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n                    <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n                </PayPalScriptProvider>\r\n            </div>\r\n    )}\r\n}"]},"metadata":{},"sourceType":"module"}