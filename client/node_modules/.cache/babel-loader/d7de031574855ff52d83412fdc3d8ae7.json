{"ast":null,"code":"var _jsxFileName = \"C:\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\ShoppingCart.js\";\n// import React, { Component } from \"react\"\n// import Form from \"react-bootstrap/Form\"\n// import axios from \"axios\"\n// export default class ShoppingCart extends Component {\n//     constructor(props){\n//         this.state = {\n//             items: [], \n//             totalPrice: 0 \n//         };\n//     }\n//     addItemToCart = (item) => {\n//         const updatedItems = [...this.state.items, item];\n//         const totalPrice = this.state.totalPrice + (item.price * item.quantity);\n//         this.setState({ items: updatedItems, totalPrice });\n//     };\n//     render() {\n//         const { items, totalPrice } = this.state;\n//         const { itemsInCart } = this.props.location.state;\n//         return (\n//             <div>\n//                 <h2>Shopping Cart</h2>\n//                 <ul>\n//                     {items.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul>\n//                 <p>Total Price: ${totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\n// import React, { Component } from \"react\";\n// import Form from \"react-bootstrap/Form\"\n// import NavigationBar from \"./NavigationBar\"\n// import { SERVER_HOST } from \"../config/global_constants\"\n// import axios from \"axios\"\n// export default class ShoppingCart extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             // userId:\"\",\n//             name: \"\",\n//             size: \"\",\n//             price: \"\",\n//             quantity: \"\",\n//             shirtPhotoFilename: null,\n//             // redirectToDisplayAllTShirtInCart: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\n//             wasSubmittedAtLeastOnce: false,\n//             cart:[],\n//             totalPrice:0\n//         }\n//     }\n//     componentDidMount() {\n//         // const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//         axios.get(`${SERVER_HOST}/cart/`)\n//         .then(res => \n//         { \n//             this.setState({cart: res.data})                                         \n//         })\n//         .catch(err =>\n//         {\n//             // do nothing\n//         })\n//         axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}`, { headers: { \"authorization\": localStorage.token } })\n//         .then(res => {\n//             this.setState({\n//                 name: res.data.name,\n//                 // colour: res.data.colour,\n//                 size: res.data.size,\n//                 price: res.data.price,\n//                 quantity: res.data.quantity,\n//                 shirtPhotoFilename:res.data.shirtPhotoFilename\n//             })\n//         })\n//         .catch(err => {\n//             // do nothing\n//         })\n//         // Update cart state with itemsInCart\n//         // this.setState({ cart: itemsInCart });\n//         // Calculate total price\n//         let totalPrice = 0;\n//         // itemsInCart.forEach(item => {\n//         //     totalPrice += item.price * item.quantity;\n//         // });\n//         this.state.cart.forEach(item => {\n//             totalPrice += item.price * item.quantity;\n//         })\n//         // Update totalPrice state\n//         this.setState({ totalPrice: totalPrice });\n//         // Load shirt photos\n//         this.state.cart.forEach(cartItem => {\n//             cartItem.shirtPhotoFilename.forEach(photo => {\n//                 axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//                     .then(res => {\n//                         // Update shirt photo in DOM\n//                         document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n//                     })\n//                     .catch(err => {\n//                         // Handle error\n//                     });\n//             });\n//         });\n//     }\n//     // componentDidMount(){\n//     //     const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//     //     this.setState({ cart: itemsInCart });\n//     //     let totalPrice = 0;\n//     //     itemsInCart.forEach(item => {\n//     //         totalPrice += item.price * item.quantity;\n//     //     });\n//     //     this.setState({ totalPrice: totalPrice });\n//     //     this.state.cart.shirtPhotoFilename.map(photo => {\n//     //         return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//     //             .then(res => {\n//     //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n//     //             })\n//     //             .catch(err => {\n//     //                 // do nothing\n//     //             })\n//     //     })\n//         // let formData = new FormData()\n//         // formData.append(\"userId\", this.state.stock)\n//         // formData.append(\"name\", this.state.name)\n//         // // formData.append(\"colour\", this.state.colour)\n//         // formData.append(\"size\", this.state.size)\n//         // formData.append(\"price\", this.state.price)\n//         // formData.append(\"quantity\", this.state.quantity)\n//         // if (this.state.cart.shirtPhotoFilename) {\n//         //     for (let i = 0; i < this.state.cart.shirtPhotoFilename.length; i++) {\n//         //         formData.append(\"cartPhotos\", this.state.cart.shirtPhotoFilename[i])\n//         //     }\n//         // }\n//         // axios.post(`${SERVER_HOST}/cart`, formData, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\n//         //     .then(res => {\n//         //         this.setState({ redirectToDisplayAllTShirtInCart: true })\n//         //     })\n//         //     .catch(err => {\n//         //         this.setState({ wasSubmittedAtLeastOnce: true })\n//         //     })\n//     //}\n//     render() {\n// console.log(this.state.cart)\n//         return (\n//             <div>\n//                 <NavigationBar />\n//                 <h2>Shopping Cart</h2>\n//                 {/* <div>\n//                     {this.state.cart.shirtPhotoFilename === null ? null : <div className=\"shirtPhotos\">{this.state.cart.shirtPhotoFilename.map(photo => <img key={photo._id} id={photo._id} alt=\"\" />)}</div>}\n//                 </div> */}\n//                 {/* <ul>\n//                     {this.state.cart.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: €{item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul> */}\n//                 <p>Total Price: €{this.state.totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\nimport React, { Component } from \"react\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nimport axios from \"axios\";\nimport BuyShirt from \"./BuyShirt\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (index, field, value) => {\n      const updatedCart = [...this.state.cart];\n      updatedCart[index][field] = value;\n      this.setState({\n        cart: updatedCart\n      }); // localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\n\n      const groupedItems = this.state.cart.reduce((groups, item) => {\n        const group = groups.find(g => g.name === item.name);\n\n        if (group) {\n          group.quantity += item.quantity;\n          group.totalPrice += item.price * item.quantity;\n        } else {\n          groups.push({\n            shirtId: item.shirtId,\n            name: item.name,\n            size: item.size,\n            quantity: item.quantity,\n            price: item.price,\n            totalPrice: item.price * item.quantity,\n            shirtPhotoFilename: item.shirtPhotoFilename,\n            shirtPhotoFilename: item.shirtPhotoFilename\n          });\n        }\n\n        return groups;\n      }, []);\n      this.setState({\n        cart: groupedItems\n      });\n      localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems)); // this.loadShirtPhotos();\n    };\n\n    this.handleDelete = (name, size) => {\n      const updatedCart = this.state.cart.filter(item => !(item.name === name && item.size === size));\n      this.setState({\n        cart: updatedCart\n      });\n      localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\n      this.loadShirtPhotos();\n    };\n\n    this.handlePayment = () => {\n      // Check if all guest details are provided\n      const _this$state = this.state,\n            guestName = _this$state.guestName,\n            guestEmail = _this$state.guestEmail,\n            guestAddress = _this$state.guestAddress,\n            guestPhone = _this$state.guestPhone;\n      const errors = {};\n\n      if (!guestName.trim()) {\n        errors.guestName = \"Name is required\";\n      }\n\n      if (!guestEmail.trim()) {\n        errors.guestEmail = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\n        errors.guestEmail = \"Email is invalid\";\n      }\n\n      if (!guestAddress.trim()) {\n        errors.guestAddress = \"Address is required\";\n      }\n\n      if (!guestPhone.trim()) {\n        errors.guestPhone = \"Phone number is required\";\n      } else if (!/^\\d{10}$/.test(guestPhone)) {\n        errors.guestPhone = \"Phone number must be 10 digits\";\n      } // if (Object.keys(errors).length === 0) {\n      // if (guestName && guestEmail && guestAddress && guestPhone {\n\n\n      if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\n        // Proceed with payment\n        console.log(\"Guest details provided. Proceeding with payment...\"); // Call your payment function or component here\n\n        this.setState({\n          redirectToPaypalButton: true\n        });\n      } else {\n        // Display error message or handle accordingly\n        console.log(\"Please provide all guest details before proceeding with payment.\");\n      }\n    };\n\n    this.handlePayment = () => {\n      // Check if all guest details are provided\n      const _this$state2 = this.state,\n            guestName = _this$state2.guestName,\n            guestEmail = _this$state2.guestEmail,\n            guestAddress = _this$state2.guestAddress,\n            guestPhone = _this$state2.guestPhone;\n      const errors = {};\n\n      if (!guestName.trim()) {\n        errors.guestName = \"Name is required\";\n      }\n\n      if (!guestEmail.trim()) {\n        errors.guestEmail = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\n        errors.guestEmail = \"Email is invalid\";\n      }\n\n      if (!guestAddress.trim()) {\n        errors.guestAddress = \"Address is required\";\n      }\n\n      if (!guestPhone.trim()) {\n        errors.guestPhone = \"Phone number is required\";\n      } else if (!/^\\d{10}$/.test(guestPhone)) {\n        errors.guestPhone = \"Phone number must be 10 digits\";\n      } // if (Object.keys(errors).length === 0) {\n      // if (guestName && guestEmail && guestAddress && guestPhone {\n\n\n      if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\n        // Proceed with payment\n        console.log(\"Guest details provided. Proceeding with payment...\"); // Call your payment function or component here\n\n        this.setState({\n          redirectToPaypalButton: true\n        });\n      } else {\n        // Display error message or handle accordingly\n        console.log(\"Please provide all guest details before proceeding with payment.\");\n      }\n    };\n\n    this.state = {\n      // name:\"\",\n      // price:\"\",\n      // quantity:\"\",\n      // size:\"\",\n      cart: [],\n      guestName: \"\",\n      guestEmail: \"\",\n      guestAddress: \"\",\n      guestPhone: \"\",\n      isGuest: localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\n      redirectToPaypalButton: false // totalPrice: 0\n\n    };\n  }\n\n  componentDidMount() {\n    // Fetch cart data from the server\n    const cartLocalStorage = JSON.parse(localStorage.getItem(\"itemsInCart\") || \"[]\"); // console.log(\"itemsInCart: \",localStorage.getItem(\"itemsInCart\").forEach(item=>{item.shirtPhotoFilename}))\n\n    this.setState({\n      cart: cartLocalStorage\n    }, () => {\n      // Load shirt photos after updating state\n      this.loadShirtPhotos();\n    }); // this.props.shirt.shirtPhotoFilename.map(photo => {\n    //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //         .then(res => {\n    //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n    //         })\n    //         .catch(err => {\n    //             // do nothing\n    //         })\n    // })\n    // this.state.cart.map(item=>{item.shirtPhotoFilename.map(photo => {\n    //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //         .then(res => {\n    //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n    //         })\n    //         .catch(err => {\n    //             // do nothing\n    //         })\n    // })})\n    // this.setState({ cart: cartLocalStorage }, () => {\n    //     // Calculate total price after updating state\n    //     this.calculateTotalPrice();\n    // });\n    // console.log(this.state.cart[0])\n    //         let totalPrice = 0;\n    //         this.state.cart.map(item => {\n    //             console.log(item)\n    //                         totalPrice += item.price * item.quantity;\n    //                     });\n    //                     // Update totalPrice state\n    //                     this.setState({ totalPrice: totalPrice });\n    // axios.get(`${SERVER_HOST}/cart`, { headers: { \"authorization\": localStorage.token } })\n    //     .then(res => {\n    //         // Update state with fetched cart data\n    //         this.setState({ cart: res.data }, () => {\n    //             // Calculate total price after updating state\n    //             this.calculateTotalPrice();\n    //             // Load shirt photos after updating state\n    //             // this.loadShirtPhotos();\n    //         });\n    //     })\n    //     .catch(err => {\n    //         // Handle error\n    //         console.error(\"Error fetching cart data:\", err);\n    //     });\n  } // componentDidUpdate(){\n  //     if (this.state.cart !== undefined) {\n  //         const groupedItems = this.state.cart.reduce((groups, item) => {\n  //             const group = groups.find(g => g.name === item.name);\n  //             if (group) {\n  //                 group.quantity += item.quantity;\n  //                 group.totalPrice += item.price * item.quantity;\n  //             } else {\n  //                 groups.push({\n  //                     name: item.name,\n  //                     size: item.size,\n  //                     quantity: item.quantity,\n  //                     price: item.price,\n  //                     totalPrice: item.price * item.quantity\n  //                 });\n  //             }\n  //             return groups;\n  //         }, []);\n  //         localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems));\n  //     }\n  // }\n\n\n  loadShirtPhotos() {\n    // Loop through each cart item and load its shirt photos\n    this.state.cart.forEach(item => {\n      item.shirtPhotoFilename.forEach(photo => {\n        axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n          // Update shirt photo in DOM\n          document.getElementById(photo._id).src = \"data:;base64,\".concat(res.data.image);\n        }).catch(err => {\n          // Handle error\n          console.error(\"Error loading shirt photo:\", err);\n        });\n      });\n    });\n  }\n\n  calculateTotalPrice() {\n    let totalPrice = 0; // Calculate total price based on cart items\n    // this.state.cart.forEach(item => {\n    //     const carItem=item.cartItems[0];\n    //     totalPrice += carItem.price * carItem.quantity;\n    // });\n    // // Update totalPrice state\n    // this.setState({ totalPrice: totalPrice });\n\n    this.state.cart.map(item => {\n      totalPrice += item.price * item.quantity;\n    }); // Update totalPrice state\n    // this.setState({ totalPrice: totalPrice });\n\n    return totalPrice.toFixed(2);\n  }\n\n  getIdAndQuantity() {\n    let items = [];\n    this.state.cart.map(cartItem => {\n      items.push({\n        shirtID: cartItem.shirtId,\n        quantity: cartItem.quantity\n      });\n    });\n    return items;\n  }\n\n  // loadShirtPhotos() {\n  //     // Loop through each cart item and load its shirt photos\n  //     this.state.cart.forEach(item => {\n  //         item.cartItems[0].shirtPhotoFilename.forEach(photo => {\n  //             axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n  //                 .then(res => {\n  //                     // Update shirt photo in DOM\n  //                     document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n  //                 })\n  //                 .catch(err => {\n  //                     // Handle error\n  //                     console.error(\"Error loading shirt photo:\", err);\n  //                 });\n  //         });\n  //     });\n  // }\n  // handleChange = (field, value) => {\n  //     this.setState({ [field]: value });\n  // };\n  render() {\n    // console.log(this.state.cart[0])\n    // {this.state.cart !== undefined ? this.calculateTotalPrice() : null}\n    // console.log(this.state.cart.map((item,index) => (item.cartItems[0].name)));\n    const groupedItems = this.state.cart.reduce((groups, item) => {\n      const group = groups.find(g => g.name === item.name);\n\n      if (group) {\n        group.quantity += item.quantity;\n        group.totalPrice += item.price * item.quantity;\n      } else {\n        groups.push({\n          shirtId: item.shirtId,\n          name: item.name,\n          size: item.size,\n          quantity: item.quantity,\n          price: item.price,\n          totalPrice: item.price * item.quantity,\n          shirtPhotoFilename: item.shirtPhotoFilename,\n          shirtPhotoFilename: item.shirtPhotoFilename\n        });\n      }\n\n      return groups;\n    }, []);\n    console.log(this.state.cart.map(item => item.shirtPhotoFilename[0])); // this.state.cart.map(item =>\n    //     item.shirtPhotoFilename[0].forEach(photo => { // Use forEach to iterate over each object\n    //         axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //             .then(res => {\n    //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n    //             })\n    //             .catch(err => {\n    //                 // Handle error\n    //                 console.error(\"Error loading shirt photo:\", err);\n    //             });\n    //     })\n    // );\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"div\", {\n      className: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, this.state.cart.map((item, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"each-item-cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"photoanddetailsSC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, item.shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      id: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"detailsShoppingCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, item.name, \" \"), React.createElement(\"select\", {\n      value: item.size,\n      onChange: e => this.handleChange(index, 'size', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"XS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, \"XS\"), React.createElement(\"option\", {\n      value: \"S\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \"S\"), React.createElement(\"option\", {\n      value: \"M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"option\", {\n      value: \"L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"L\"), React.createElement(\"option\", {\n      value: \"XL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, \"XL\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, item.price), React.createElement(\"button\", {\n      onClick: () => this.handleChange(index, 'quantity', Math.max(1, item.quantity - 1)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"button\", {\n      onClick: () => this.handleChange(index, 'quantity', item.quantity + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, \"+\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleDelete(item.name, item.size),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \"Delete\")))), this.state.isGuest ? React.createElement(\"div\", {\n      className: \"guest-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, \"Guest Details\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: this.state.guestName,\n      onChange: e => this.handleChange('guestName', e.target.value),\n      required: true //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.guestEmail,\n      onChange: e => this.handleChange('guestEmail', e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Address\",\n      value: this.state.guestAddress,\n      onChange: e => this.handleChange('guestAddress', e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      value: this.state.guestPhone,\n      onChange: e => this.handleChange('guestPhone', e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    })) : null, React.createElement(\"button\", {\n      onClick: this.handlePayment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, \"Proceed to Payment\"), this.state.redirectToPaypalButton ? React.createElement(BuyShirt, {\n      customerEmail: this.state.guestEmail,\n      customerName: this.state.guestName,\n      address: this.state.guestAddress,\n      phone: this.state.guestPhone,\n      items: this.getIdAndQuantity(),\n      price: this.calculateTotalPrice(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }) : null), this.state.cart !== undefined ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, \"Total Price: \", this.calculateTotalPrice()) : null);\n  }\n\n}","map":{"version":3,"sources":["C:\\ecommerce_CA\\client\\src\\components\\ShoppingCart.js"],"names":["React","Component","NavigationBar","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","axios","BuyShirt","ShoppingCart","constructor","props","handleChange","index","field","value","updatedCart","state","cart","setState","groupedItems","reduce","groups","item","group","find","g","name","quantity","totalPrice","price","push","shirtId","size","shirtPhotoFilename","localStorage","setItem","JSON","stringify","handleDelete","filter","loadShirtPhotos","handlePayment","guestName","guestEmail","guestAddress","guestPhone","errors","trim","test","Object","keys","length","console","log","redirectToPaypalButton","isGuest","accessLevel","componentDidMount","cartLocalStorage","parse","getItem","forEach","photo","get","filename","then","res","document","getElementById","_id","src","data","image","catch","err","error","calculateTotalPrice","map","toFixed","getIdAndQuantity","items","cartItem","shirtID","render","e","target","Math","max","undefined"],"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","sourcesContent":["// import React, { Component } from \"react\"\r\n// import Form from \"react-bootstrap/Form\"\r\n\r\n// import axios from \"axios\"\r\n\r\n// export default class ShoppingCart extends Component {\r\n//     constructor(props){\r\n//         this.state = {\r\n//             items: [], \r\n//             totalPrice: 0 \r\n//         };\r\n//     }\r\n\r\n//     addItemToCart = (item) => {\r\n//         const updatedItems = [...this.state.items, item];\r\n//         const totalPrice = this.state.totalPrice + (item.price * item.quantity);\r\n//         this.setState({ items: updatedItems, totalPrice });\r\n//     };\r\n\r\n//     render() {\r\n//         const { items, totalPrice } = this.state;\r\n//         const { itemsInCart } = this.props.location.state;\r\n\r\n//         return (\r\n//             <div>\r\n//                 <h2>Shopping Cart</h2>\r\n//                 <ul>\r\n//                     {items.map((item, index) => (\r\n//                         <li key={index}>\r\n//                             {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//                 <p>Total Price: ${totalPrice}</p>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import Form from \"react-bootstrap/Form\"\r\n// import NavigationBar from \"./NavigationBar\"\r\n// import { SERVER_HOST } from \"../config/global_constants\"\r\n\r\n// import axios from \"axios\"\r\n\r\n// export default class ShoppingCart extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             // userId:\"\",\r\n//             name: \"\",\r\n//             size: \"\",\r\n//             price: \"\",\r\n//             quantity: \"\",\r\n//             shirtPhotoFilename: null,\r\n//             // redirectToDisplayAllTShirtInCart: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\r\n//             wasSubmittedAtLeastOnce: false,\r\n//             cart:[],\r\n//             totalPrice:0\r\n//         }\r\n//     }\r\n//     componentDidMount() {\r\n//         // const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\r\n//         axios.get(`${SERVER_HOST}/cart/`)\r\n//         .then(res => \r\n//         { \r\n//             this.setState({cart: res.data})                                         \r\n//         })\r\n//         .catch(err =>\r\n//         {\r\n//             // do nothing\r\n//         })\r\n\r\n\r\n//         axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}`, { headers: { \"authorization\": localStorage.token } })\r\n//         .then(res => {\r\n//             this.setState({\r\n//                 name: res.data.name,\r\n//                 // colour: res.data.colour,\r\n//                 size: res.data.size,\r\n//                 price: res.data.price,\r\n//                 quantity: res.data.quantity,\r\n//                 shirtPhotoFilename:res.data.shirtPhotoFilename\r\n//             })\r\n//         })\r\n//         .catch(err => {\r\n//             // do nothing\r\n//         })\r\n\r\n\r\n//         // Update cart state with itemsInCart\r\n//         // this.setState({ cart: itemsInCart });\r\n\r\n//         // Calculate total price\r\n//         let totalPrice = 0;\r\n//         // itemsInCart.forEach(item => {\r\n//         //     totalPrice += item.price * item.quantity;\r\n//         // });\r\n//         this.state.cart.forEach(item => {\r\n//             totalPrice += item.price * item.quantity;\r\n//         })\r\n\r\n//         // Update totalPrice state\r\n//         this.setState({ totalPrice: totalPrice });\r\n\r\n//         // Load shirt photos\r\n//         this.state.cart.forEach(cartItem => {\r\n//             cartItem.shirtPhotoFilename.forEach(photo => {\r\n//                 axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n//                     .then(res => {\r\n//                         // Update shirt photo in DOM\r\n//                         document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\r\n//                     })\r\n//                     .catch(err => {\r\n//                         // Handle error\r\n//                     });\r\n//             });\r\n//         });\r\n//     }\r\n\r\n//     // componentDidMount(){\r\n//     //     const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\r\n//     //     this.setState({ cart: itemsInCart });\r\n//     //     let totalPrice = 0;\r\n//     //     itemsInCart.forEach(item => {\r\n//     //         totalPrice += item.price * item.quantity;\r\n//     //     });\r\n//     //     this.setState({ totalPrice: totalPrice });\r\n//     //     this.state.cart.shirtPhotoFilename.map(photo => {\r\n//     //         return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n//     //             .then(res => {\r\n//     //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\r\n//     //             })\r\n//     //             .catch(err => {\r\n//     //                 // do nothing\r\n//     //             })\r\n//     //     })\r\n//         // let formData = new FormData()\r\n//         // formData.append(\"userId\", this.state.stock)\r\n//         // formData.append(\"name\", this.state.name)\r\n//         // // formData.append(\"colour\", this.state.colour)\r\n//         // formData.append(\"size\", this.state.size)\r\n//         // formData.append(\"price\", this.state.price)\r\n//         // formData.append(\"quantity\", this.state.quantity)\r\n\r\n\r\n//         // if (this.state.cart.shirtPhotoFilename) {\r\n//         //     for (let i = 0; i < this.state.cart.shirtPhotoFilename.length; i++) {\r\n//         //         formData.append(\"cartPhotos\", this.state.cart.shirtPhotoFilename[i])\r\n//         //     }\r\n//         // }\r\n\r\n//         // axios.post(`${SERVER_HOST}/cart`, formData, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\r\n//         //     .then(res => {\r\n//         //         this.setState({ redirectToDisplayAllTShirtInCart: true })\r\n//         //     })\r\n//         //     .catch(err => {\r\n//         //         this.setState({ wasSubmittedAtLeastOnce: true })\r\n//         //     })\r\n//     //}\r\n//     render() {\r\n// console.log(this.state.cart)\r\n//         return (\r\n//             <div>\r\n//                 <NavigationBar />\r\n//                 <h2>Shopping Cart</h2>\r\n//                 {/* <div>\r\n//                     {this.state.cart.shirtPhotoFilename === null ? null : <div className=\"shirtPhotos\">{this.state.cart.shirtPhotoFilename.map(photo => <img key={photo._id} id={photo._id} alt=\"\" />)}</div>}\r\n//                 </div> */}\r\n//                 {/* <ul>\r\n//                     {this.state.cart.map((item, index) => (\r\n//                         <li key={index}>\r\n//                             {item.name} - Quantity: {item.quantity} - Price: €{item.price * item.quantity}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul> */}\r\n//                 <p>Total Price: €{this.state.totalPrice}</p>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\r\nimport axios from \"axios\";\r\nimport BuyShirt from \"./BuyShirt\";\r\n\r\n\r\nexport default class ShoppingCart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // name:\"\",\r\n            // price:\"\",\r\n            // quantity:\"\",\r\n            // size:\"\",\r\n            cart: [],\r\n            guestName: \"\",\r\n            guestEmail: \"\",\r\n            guestAddress: \"\",\r\n            guestPhone: \"\",\r\n            isGuest: localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\r\n            redirectToPaypalButton: false\r\n            // totalPrice: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Fetch cart data from the server\r\n        const cartLocalStorage = JSON.parse(localStorage.getItem(\"itemsInCart\") || \"[]\");\r\n\r\n        // console.log(\"itemsInCart: \",localStorage.getItem(\"itemsInCart\").forEach(item=>{item.shirtPhotoFilename}))\r\n\r\n        this.setState({ cart: cartLocalStorage }, () => {\r\n            // Load shirt photos after updating state\r\n            this.loadShirtPhotos();\r\n        });\r\n\r\n        // this.props.shirt.shirtPhotoFilename.map(photo => {\r\n        //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n        //         .then(res => {\r\n        //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\r\n        //         })\r\n        //         .catch(err => {\r\n        //             // do nothing\r\n        //         })\r\n        // })\r\n\r\n        // this.state.cart.map(item=>{item.shirtPhotoFilename.map(photo => {\r\n        //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n        //         .then(res => {\r\n        //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\r\n        //         })\r\n        //         .catch(err => {\r\n        //             // do nothing\r\n        //         })\r\n        // })})\r\n\r\n        // this.setState({ cart: cartLocalStorage }, () => {\r\n        //     // Calculate total price after updating state\r\n        //     this.calculateTotalPrice();\r\n        // });\r\n\r\n        // console.log(this.state.cart[0])\r\n        //         let totalPrice = 0;\r\n        //         this.state.cart.map(item => {\r\n        //             console.log(item)\r\n        //                         totalPrice += item.price * item.quantity;\r\n        //                     });\r\n        //                     // Update totalPrice state\r\n        //                     this.setState({ totalPrice: totalPrice });\r\n        // axios.get(`${SERVER_HOST}/cart`, { headers: { \"authorization\": localStorage.token } })\r\n        //     .then(res => {\r\n        //         // Update state with fetched cart data\r\n        //         this.setState({ cart: res.data }, () => {\r\n        //             // Calculate total price after updating state\r\n        //             this.calculateTotalPrice();\r\n        //             // Load shirt photos after updating state\r\n        //             // this.loadShirtPhotos();\r\n        //         });\r\n        //     })\r\n        //     .catch(err => {\r\n        //         // Handle error\r\n        //         console.error(\"Error fetching cart data:\", err);\r\n        //     });\r\n    }\r\n    // componentDidUpdate(){\r\n    //     if (this.state.cart !== undefined) {\r\n    //         const groupedItems = this.state.cart.reduce((groups, item) => {\r\n    //             const group = groups.find(g => g.name === item.name);\r\n    //             if (group) {\r\n    //                 group.quantity += item.quantity;\r\n    //                 group.totalPrice += item.price * item.quantity;\r\n    //             } else {\r\n    //                 groups.push({\r\n    //                     name: item.name,\r\n    //                     size: item.size,\r\n    //                     quantity: item.quantity,\r\n    //                     price: item.price,\r\n    //                     totalPrice: item.price * item.quantity\r\n    //                 });\r\n    //             }\r\n    //             return groups;\r\n    //         }, []);\r\n    //         localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems));\r\n    //     }\r\n    // }\r\n    loadShirtPhotos() {\r\n        // Loop through each cart item and load its shirt photos\r\n        this.state.cart.forEach(item => {\r\n            item.shirtPhotoFilename.forEach(photo => {\r\n                axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n                    .then(res => {\r\n                        // Update shirt photo in DOM\r\n                        document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\r\n                    })\r\n                    .catch(err => {\r\n                        // Handle error\r\n                        console.error(\"Error loading shirt photo:\", err);\r\n                    });\r\n            });\r\n        });\r\n    }\r\n    calculateTotalPrice() {\r\n        let totalPrice = 0;\r\n        // Calculate total price based on cart items\r\n        // this.state.cart.forEach(item => {\r\n        //     const carItem=item.cartItems[0];\r\n        //     totalPrice += carItem.price * carItem.quantity;\r\n        // });\r\n        // // Update totalPrice state\r\n        // this.setState({ totalPrice: totalPrice });\r\n        this.state.cart.map(item => {\r\n            totalPrice += item.price * item.quantity;\r\n        });\r\n        // Update totalPrice state\r\n        // this.setState({ totalPrice: totalPrice });\r\n        return totalPrice.toFixed(2);\r\n    }\r\n    getIdAndQuantity() {\r\n        let items = []\r\n        this.state.cart.map(cartItem => {\r\n            items.push({ shirtID: cartItem.shirtId, quantity: cartItem.quantity })\r\n        });\r\n        return items;\r\n\r\n    }\r\n    handleChange = (index, field, value) => {\r\n        const updatedCart = [...this.state.cart];\r\n        updatedCart[index][field] = value;\r\n        this.setState({ cart: updatedCart });\r\n\r\n        // localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\r\n        const groupedItems = this.state.cart.reduce((groups, item) => {\r\n            const group = groups.find(g => g.name === item.name);\r\n            if (group) {\r\n                group.quantity += item.quantity;\r\n                group.totalPrice += item.price * item.quantity;\r\n            } else {\r\n                groups.push({\r\n                    shirtId: item.shirtId,\r\n                    name: item.name,\r\n                    size: item.size,\r\n                    quantity: item.quantity,\r\n                    price: item.price,\r\n                    totalPrice: item.price * item.quantity,\r\n                    shirtPhotoFilename: item.shirtPhotoFilename,\r\n                    shirtPhotoFilename: item.shirtPhotoFilename\r\n                });\r\n            }\r\n            return groups;\r\n        }, []);\r\n        this.setState({ cart: groupedItems })\r\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems));\r\n        // this.loadShirtPhotos();\r\n    };\r\n\r\n    handleDelete = (name, size) => {\r\n        const updatedCart = this.state.cart.filter(item => !(item.name === name && item.size === size));\r\n        this.setState({ cart: updatedCart });\r\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\r\n        this.loadShirtPhotos();\r\n    };\r\n    handlePayment = () => {\r\n        // Check if all guest details are provided\r\n        const { guestName, guestEmail, guestAddress, guestPhone } = this.state;\r\n        const errors = {};\r\n        if (!guestName.trim()) {\r\n            errors.guestName = \"Name is required\";\r\n        }\r\n        if (!guestEmail.trim()) {\r\n            errors.guestEmail = \"Email is required\";\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\r\n            errors.guestEmail = \"Email is invalid\";\r\n        }\r\n        if (!guestAddress.trim()) {\r\n            errors.guestAddress = \"Address is required\";\r\n        }\r\n        if (!guestPhone.trim()) {\r\n            errors.guestPhone = \"Phone number is required\";\r\n        } else if (!/^\\d{10}$/.test(guestPhone)) {\r\n            errors.guestPhone = \"Phone number must be 10 digits\";\r\n        }\r\n        // if (Object.keys(errors).length === 0) {\r\n        // if (guestName && guestEmail && guestAddress && guestPhone {\r\n        if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\r\n            // Proceed with payment\r\n            console.log(\"Guest details provided. Proceeding with payment...\");\r\n            // Call your payment function or component here\r\n            this.setState({ redirectToPaypalButton: true })\r\n        } else {\r\n            // Display error message or handle accordingly\r\n            console.log(\"Please provide all guest details before proceeding with payment.\");\r\n        }\r\n    };\r\n    handlePayment = () => {\r\n        // Check if all guest details are provided\r\n        const { guestName, guestEmail, guestAddress, guestPhone } = this.state;\r\n        const errors = {};\r\n        if (!guestName.trim()) {\r\n            errors.guestName = \"Name is required\";\r\n        }\r\n        if (!guestEmail.trim()) {\r\n            errors.guestEmail = \"Email is required\";\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\r\n            errors.guestEmail = \"Email is invalid\";\r\n        }\r\n        if (!guestAddress.trim()) {\r\n            errors.guestAddress = \"Address is required\";\r\n        }\r\n        if (!guestPhone.trim()) {\r\n            errors.guestPhone = \"Phone number is required\";\r\n        } else if (!/^\\d{10}$/.test(guestPhone)) {\r\n            errors.guestPhone = \"Phone number must be 10 digits\";\r\n        }\r\n        // if (Object.keys(errors).length === 0) {\r\n        // if (guestName && guestEmail && guestAddress && guestPhone {\r\n        if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\r\n            // Proceed with payment\r\n            console.log(\"Guest details provided. Proceeding with payment...\");\r\n            // Call your payment function or component here\r\n            this.setState({ redirectToPaypalButton: true })\r\n        } else {\r\n            // Display error message or handle accordingly\r\n            console.log(\"Please provide all guest details before proceeding with payment.\");\r\n        }\r\n    };\r\n\r\n    // loadShirtPhotos() {\r\n    //     // Loop through each cart item and load its shirt photos\r\n\r\n    //     this.state.cart.forEach(item => {\r\n    //         item.cartItems[0].shirtPhotoFilename.forEach(photo => {\r\n    //             axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n    //                 .then(res => {\r\n    //                     // Update shirt photo in DOM\r\n    //                     document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\r\n    //                 })\r\n    //                 .catch(err => {\r\n    //                     // Handle error\r\n    //                     console.error(\"Error loading shirt photo:\", err);\r\n    //                 });\r\n    //         });\r\n    //     });\r\n    // }\r\n    // handleChange = (field, value) => {\r\n    //     this.setState({ [field]: value });\r\n    // };\r\n\r\n    render() {\r\n        // console.log(this.state.cart[0])\r\n        // {this.state.cart !== undefined ? this.calculateTotalPrice() : null}\r\n\r\n        // console.log(this.state.cart.map((item,index) => (item.cartItems[0].name)));\r\n        const groupedItems = this.state.cart.reduce((groups, item) => {\r\n            const group = groups.find(g => g.name === item.name);\r\n            if (group) {\r\n                group.quantity += item.quantity;\r\n                group.totalPrice += item.price * item.quantity;\r\n            } else {\r\n                groups.push({\r\n                    shirtId: item.shirtId,\r\n                    name: item.name,\r\n                    size: item.size,\r\n                    quantity: item.quantity,\r\n                    price: item.price,\r\n                    totalPrice: item.price * item.quantity,\r\n                    shirtPhotoFilename: item.shirtPhotoFilename,\r\n                    shirtPhotoFilename: item.shirtPhotoFilename\r\n                });\r\n            }\r\n            return groups;\r\n        }, []);\r\n        console.log(this.state.cart.map(item => item.shirtPhotoFilename[0]))\r\n\r\n        // this.state.cart.map(item =>\r\n        //     item.shirtPhotoFilename[0].forEach(photo => { // Use forEach to iterate over each object\r\n        //         axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n        //             .then(res => {\r\n        //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\r\n        //             })\r\n        //             .catch(err => {\r\n        //                 // Handle error\r\n        //                 console.error(\"Error loading shirt photo:\", err);\r\n        //             });\r\n        //     })\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                <NavigationBar />\r\n                <h2>Shopping Cart</h2>\r\n                <div className=\"cart-container\">\r\n                    {this.state.cart.map((item, index) => (\r\n                        <div key={index} className=\"each-item-cart\">\r\n                            <div className=\"photoanddetailsSC\">\r\n                                {/* display shirt photo */}\r\n                                {item.shirtPhotoFilename.map(photo => (\r\n                                    <img key={photo._id} id={photo._id} alt=\"\" />\r\n                                ))}\r\n                                <div className=\"detailsShoppingCart\">\r\n                                    {/* <img src={`${SERVER_HOST}/shirts/photo/${item.shirtPhotoFilename}`} alt=\"Shirt\" style={{ width: '100px', height: '100px' }} /> */}\r\n                                    {/* <img src={`${SERVER_HOST}/shirts/photo/${item.shirtPhotoFilename}`} alt=\"Shirt\" /> */}\r\n                                    {/* {console.log(\"shirtPhotoFilename: \", item.shirtPhotoFilename)} */}\r\n                                    <h3>{item.name} </h3>\r\n                                    <select\r\n                                        value={item.size}\r\n                                        onChange={e => this.handleChange(index, 'size', e.target.value)}\r\n                                    >\r\n                                        <option value=\"XS\">XS</option>\r\n                                        <option value=\"S\">S</option>\r\n                                        <option value=\"M\">M</option>\r\n                                        <option value=\"L\">L</option>\r\n                                        <option value=\"XL\">XL</option>\r\n                                    </select>\r\n                                    {/* <span>Quantity:</span> */}\r\n\r\n                                    <div>{item.price}</div>\r\n\r\n                                    <button onClick={() => this.handleChange(index, 'quantity', Math.max(1, item.quantity - 1))}>-</button>\r\n                                    <span>{item.quantity}</span>\r\n                                    <button onClick={() => this.handleChange(index, 'quantity', item.quantity + 1)}>+</button>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button onClick={() => this.handleDelete(item.name, item.size)}>Delete</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    ))}\r\n                    {this.state.isGuest ?\r\n                        <div className=\"guest-details\">\r\n                            <h3>Guest Details</h3>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={this.state.guestName}\r\n                                onChange={e => this.handleChange('guestName', e.target.value)}\r\n                                required //required\r\n                            />\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.guestEmail}\r\n                                onChange={e => this.handleChange('guestEmail', e.target.value)}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Address\"\r\n                                value={this.state.guestAddress}\r\n                                onChange={e => this.handleChange('guestAddress', e.target.value)}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Phone\"\r\n                                value={this.state.guestPhone}\r\n                                onChange={e => this.handleChange('guestPhone', e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        : null}\r\n\r\n\r\n                    {/* paypalbutton */}\r\n                    {/* <BuyShirt customerEmail={this.state.guestEmail} customerName={this.state.guestName} address={this.state.guestAddress} phone={this.state.guestPhone} items={this.getIdAndQuantity()} price={this.calculateTotalPrice()} /> */}\r\n                    <button onClick={this.handlePayment}>Proceed to Payment</button>\r\n                    {this.state.redirectToPaypalButton ? <BuyShirt customerEmail={this.state.guestEmail} customerName={this.state.guestName} address={this.state.guestAddress} phone={this.state.guestPhone} items={this.getIdAndQuantity()} price={this.calculateTotalPrice()} /> : null}\r\n                </div>\r\n\r\n                {/* <p>Total Price: €{this.state.totalPrice}</p> */}\r\n                {this.state.cart !== undefined ? <p>Total Price: {this.calculateTotalPrice()}</p> : null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}