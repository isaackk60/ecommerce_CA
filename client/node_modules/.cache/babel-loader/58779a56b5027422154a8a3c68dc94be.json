{"ast":null,"code":"import _defineProperty from \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\ViewPurchaseHistory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class ViewAllUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      purchaseHistory: [],\n      eachItemsInOrder: [],\n      allOrders: [],\n      searchQuery: \"\",\n      sortFunction: \"name\",\n      sizeFilter: \"\"\n    };\n  } // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history and fetch shirt details\n  //                 this.state.purchaseHistory.forEach(itemsInArray => {\n  //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             // Update eachItemsInOrder state by appending new items\n  //                             this.setState(prevState => ({\n  //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n  //                             }));\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n  // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history\n  //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\n  //                     // Store each itemsInOrder array in a separate array\n  //                     let eachItemsInOrder = [];\n  //                     itemsInArray.items.forEach(item => {\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             eachItemsInOrder.push(updatedItem);\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                     // Push eachItemsInOrder array into allOrders array\n  //                     this.setState(prevState => ({\n  //                         allOrders: [\n  //                             ...prevState.allOrders,\n  //                             {\n  //                                 orderId: itemsInArray._id, // Store item._id into allOrders\n  //                                 eachItemsInOrder: eachItemsInOrder\n  //                             }\n  //                         ]\n  //                     }));\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n\n\n  componentDidMount() {\n    if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n      let userEmail; // const currentUrl = window.location.pathname;\n\n      if (localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER) {\n        userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n      } else if (localStorage.accessLevel == ACCESS_LEVEL_ADMIN) {\n        // if (currentUrl === \"/ViewPurchaseHistory\") {\n        //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n        // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\n        //     userEmail = this.props.match.params.email;\n        // }\n        userEmail = this.props.match.params.email;\n      }\n\n      axios.get(\"\".concat(SERVER_HOST, \"/sales/email?email=\").concat(userEmail)).then(res => {\n        // Update purchase history state\n        this.setState({\n          purchaseHistory: res.data\n        }, () => {\n          // Iterate over each purchase history item\n          this.state.purchaseHistory.forEach((itemsInArray, index) => {\n            let eachItemsInOrder = [];\n            let totalPrice = 0; // Initialize total price for the order\n\n            itemsInArray.items.forEach(item => {\n              // Fetch shirt details and calculate total price for each item\n              axios.get(\"\".concat(SERVER_HOST, \"/shirts/\").concat(item.shirtID), {\n                headers: {\n                  \"authorization\": localStorage.token\n                }\n              }).then(res => {\n                const updatedItem = _objectSpread({}, res.data, {\n                  quantity: item.quantity\n                });\n\n                eachItemsInOrder.push(updatedItem); // Check if all items are fetched\n\n                if (eachItemsInOrder.length === itemsInArray.items.length) {\n                  // Add the price of the item to the total price\n                  eachItemsInOrder.map(item => totalPrice += item.price * item.quantity); // Update state after all items are fetched\n\n                  this.setState(prevState => ({\n                    allOrders: [...prevState.allOrders, {\n                      orderId: itemsInArray._id,\n                      eachItemsInOrder: eachItemsInOrder,\n                      totalPrice: totalPrice\n                    }]\n                  }), () => {\n                    // Call loadShirtPhotos() after updating state\n                    this.loadShirtPhotos();\n                  });\n                }\n              }).catch(err => {\n                console.error(\"Error fetching shirt data:\", err);\n              });\n            });\n          });\n        });\n      }).catch(err => {\n        console.error(\"Error fetching user data:\", err);\n      });\n    }\n  }\n\n  loadShirtPhotos() {\n    this.state.allOrders.forEach(order => {\n      order.eachItemsInOrder.forEach(item => {\n        item.shirtPhotoFilename.forEach(photo => {\n          axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n            // Update shirt photo in DOM\n            const elements = document.getElementsByClassName(photo._id);\n            Array.from(elements).forEach(element => {\n              element.src = \"data:;base64,\".concat(res.data.image);\n            });\n          }).catch(err => {\n            // Handle error\n            console.error(\"Error loading shirt photo:\", err);\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          allOrders = _this$state.allOrders,\n          searchQuery = _this$state.searchQuery,\n          sortFunction = _this$state.sortFunction,\n          sizeFilter = _this$state.sizeFilter;\n    let filteredOrders = allOrders.filter(order => order.eachItemsInOrder.some(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())));\n\n    if (sizeFilter !== \"\") {\n      filteredOrders = filteredOrders.filter(order => order.eachItemsInOrder.some(item => item.size.toLowerCase() === sizeFilter.toLowerCase()));\n    }\n\n    let sortedOrders = [...filteredOrders];\n\n    if (sortFunction === \"totalPrice\") {\n      sortedOrders.sort((a, b) => a.totalPrice - b.totalPrice);\n    } else if (sortFunction === \"name\") {\n      sortedOrders = filteredOrders;\n    }\n\n    return React.createElement(React.Fragment, null, localStorage.accessLevel > ACCESS_LEVEL_GUEST ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Ordered Items\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchQuery,\n      onChange: this.handleSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sortInViewPurchaseHistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: sortFunction,\n      onChange: e => {\n        if (e.target.value === 'totalPrice') {\n          this.handleSortByTotalPrice();\n        } else if (e.target.value === 'name') {\n          this.handleSortByDefault(); // Handle default sorting option\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Default Sorting\"), React.createElement(\"option\", {\n      value: \"totalPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Sort by Total Price\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: sizeFilter,\n      onChange: this.handleSizeFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"All Sizes\"), React.createElement(\"option\", {\n      value: \"XS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"XS\"), React.createElement(\"option\", {\n      value: \"S\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"S\"), React.createElement(\"option\", {\n      value: \"M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"option\", {\n      value: \"L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"L\"), React.createElement(\"option\", {\n      value: \"XL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"XL\"))), this.state.allOrders.length === 0 ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"The User didn't purchase anything yet\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.state.allOrders.map(order => React.createElement(\"div\", {\n      key: order.orderId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Order ID: \", order.orderId), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Total Price for this t-shirt\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, order.eachItemsInOrder.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, item.shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      className: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, item.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, item.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, item.price * item.quantity))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Total Of The Order Price:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, order.totalPrice)))))))) : React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\ViewPurchaseHistory.js"],"names":["React","Component","Redirect","Link","axios","NavigationBar","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","ViewAllUsers","constructor","props","state","purchaseHistory","eachItemsInOrder","allOrders","searchQuery","sortFunction","sizeFilter","componentDidMount","localStorage","accessLevel","userEmail","JSON","parse","getItem","match","params","email","get","then","res","setState","data","forEach","itemsInArray","index","totalPrice","items","item","shirtID","headers","token","updatedItem","quantity","push","length","map","price","prevState","orderId","_id","loadShirtPhotos","catch","err","console","error","order","shirtPhotoFilename","photo","filename","elements","document","getElementsByClassName","Array","from","element","src","image","render","filteredOrders","filter","some","name","toLowerCase","includes","size","sortedOrders","sort","a","b","handleSearchChange","e","target","value","handleSortByTotalPrice","handleSortByDefault","handleSizeFilterChange"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,wBAAjD,EAA2EC,WAA3E,QAA8F,4BAA9F;AAGA,eAAe,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAChDU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,EADR;AAETC,MAAAA,gBAAgB,EAAE,EAFT;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,YAAY,EAAE,MALL;AAMTC,MAAAA,UAAU,EAAE;AANH,KAAb;AAQH,GAZ+C,CAehD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,YAAY,CAACC,WAAb,GAA2BhB,kBAA/B,EAAmD;AAC/C,UAAIiB,SAAJ,CAD+C,CAE/C;;AACA,UAAGF,YAAY,CAACC,WAAb,IAA4Bd,wBAA/B,EAAwD;AACxDe,QAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,WAArB,CAAX,CAAZ;AACC,OAFD,MAEM,IAAGL,YAAY,CAACC,WAAb,IAA2Bf,kBAA9B,EAAiD;AACnD;AACA;AACA;AACA;AACA;AACAgB,QAAAA,SAAS,GAAG,KAAKX,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBC,KAApC;AACH;;AAEDzB,MAAAA,KAAK,CAAC0B,GAAN,WAAarB,WAAb,gCAA8Cc,SAA9C,GACCQ,IADD,CACMC,GAAG,IAAI;AACT;AACA,aAAKC,QAAL,CAAc;AAAEnB,UAAAA,eAAe,EAAEkB,GAAG,CAACE;AAAvB,SAAd,EAA6C,MAAM;AAC/C;AACA,eAAKrB,KAAL,CAAWC,eAAX,CAA2BqB,OAA3B,CAAmC,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACxD,gBAAItB,gBAAgB,GAAG,EAAvB;AACA,gBAAIuB,UAAU,GAAG,CAAjB,CAFwD,CAEpC;;AACpBF,YAAAA,YAAY,CAACG,KAAb,CAAmBJ,OAAnB,CAA2BK,IAAI,IAAI;AAC/B;AACApC,cAAAA,KAAK,CAAC0B,GAAN,WAAarB,WAAb,qBAAmC+B,IAAI,CAACC,OAAxC,GAAmD;AAAEC,gBAAAA,OAAO,EAAE;AAAE,mCAAiBrB,YAAY,CAACsB;AAAhC;AAAX,eAAnD,EACKZ,IADL,CACUC,GAAG,IAAI;AACT,sBAAMY,WAAW,qBAAQZ,GAAG,CAACE,IAAZ;AAAkBW,kBAAAA,QAAQ,EAAEL,IAAI,CAACK;AAAjC,kBAAjB;;AACA9B,gBAAAA,gBAAgB,CAAC+B,IAAjB,CAAsBF,WAAtB,EAFS,CAIT;;AACA,oBAAI7B,gBAAgB,CAACgC,MAAjB,KAA4BX,YAAY,CAACG,KAAb,CAAmBQ,MAAnD,EAA2D;AACvD;AACAhC,kBAAAA,gBAAgB,CAACiC,GAAjB,CAAqBR,IAAI,IAAEF,UAAU,IAAIE,IAAI,CAACS,KAAL,GAAaT,IAAI,CAACK,QAA3D,EAFuD,CAIvD;;AACA,uBAAKZ,QAAL,CAAciB,SAAS,KAAK;AACxBlC,oBAAAA,SAAS,EAAE,CACP,GAAGkC,SAAS,CAAClC,SADN,EAEP;AACImC,sBAAAA,OAAO,EAAEf,YAAY,CAACgB,GAD1B;AAEIrC,sBAAAA,gBAAgB,EAAEA,gBAFtB;AAGIuB,sBAAAA,UAAU,EAAEA;AAHhB,qBAFO;AADa,mBAAL,CAAvB,EASI,MAAM;AACN;AACA,yBAAKe,eAAL;AACH,mBAZD;AAaH;AACJ,eAzBL,EA0BKC,KA1BL,CA0BWC,GAAG,IAAI;AACVC,gBAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C;AACH,eA5BL;AA6BH,aA/BD;AAgCH,WAnCD;AAoCH,SAtCD;AAuCH,OA1CD,EA2CCD,KA3CD,CA2COC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd,EAA2CF,GAA3C;AACH,OA7CD;AA8CP;AACA;;AAEDF,EAAAA,eAAe,GAAG;AACd,SAAKxC,KAAL,CAAWG,SAAX,CAAqBmB,OAArB,CAA6BuB,KAAK,IAAI;AAClCA,MAAAA,KAAK,CAAC3C,gBAAN,CAAuBoB,OAAvB,CAA+BK,IAAI,IAAI;AACnCA,QAAAA,IAAI,CAACmB,kBAAL,CAAwBxB,OAAxB,CAAgCyB,KAAK,IAAI;AACrCxD,UAAAA,KAAK,CAAC0B,GAAN,WAAarB,WAAb,2BAAyCmD,KAAK,CAACC,QAA/C,GACK9B,IADL,CACUC,GAAG,IAAI;AACT;AACA,kBAAM8B,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgCJ,KAAK,CAACR,GAAtC,CAAjB;AACAa,YAAAA,KAAK,CAACC,IAAN,CAAWJ,QAAX,EAAqB3B,OAArB,CAA6BgC,OAAO,IAAI;AACpCA,cAAAA,OAAO,CAACC,GAAR,0BAA8BpC,GAAG,CAACE,IAAJ,CAASmC,KAAvC;AACH,aAFD;AAGH,WAPL,EAQKf,KARL,CAQWC,GAAG,IAAI;AACV;AACAC,YAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C;AACH,WAXL;AAaH,SAdD;AAeH,OAhBD;AAiBH,KAlBD;AAmBH;;AAOLe,EAAAA,MAAM,GAAG;AAAA,wBACuD,KAAKzD,KAD5D;AAAA,UACGG,SADH,eACGA,SADH;AAAA,UACcC,WADd,eACcA,WADd;AAAA,UAC2BC,YAD3B,eAC2BA,YAD3B;AAAA,UACwCC,UADxC,eACwCA,UADxC;AAGL,QAAIoD,cAAc,GAAGvD,SAAS,CAACwD,MAAV,CAAiBd,KAAK,IACvCA,KAAK,CAAC3C,gBAAN,CAAuB0D,IAAvB,CAA4BjC,IAAI,IAAIA,IAAI,CAACkC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiC3D,WAAW,CAAC0D,WAAZ,EAAjC,CAApC,CADiB,CAArB;;AAIA,QAAIxD,UAAU,KAAK,EAAnB,EAAuB;AACnBoD,MAAAA,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAsBd,KAAK,IACxCA,KAAK,CAAC3C,gBAAN,CAAuB0D,IAAvB,CAA4BjC,IAAI,IAAIA,IAAI,CAACqC,IAAL,CAAUF,WAAV,OAA4BxD,UAAU,CAACwD,WAAX,EAAhE,CADa,CAAjB;AAGH;;AAED,QAAIG,YAAY,GAAG,CAAC,GAAGP,cAAJ,CAAnB;;AACA,QAAIrD,YAAY,KAAK,YAArB,EAAmC;AAC/B4D,MAAAA,YAAY,CAACC,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC1C,UAAF,GAAe2C,CAAC,CAAC3C,UAA7C;AACH,KAFD,MAEM,IAAIpB,YAAY,KAAK,MAArB,EAA6B;AAC/B4D,MAAAA,YAAY,GAAGP,cAAf;AACH;;AAED,WACI,0CACKlD,YAAY,CAACC,WAAb,GAA2BhB,kBAA3B,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,WAFhB;AAGI,MAAA,KAAK,EAAEW,WAHX;AAII,MAAA,QAAQ,EAAE,KAAKiE,kBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EASI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAEhE,YAAf;AAA6B,MAAA,QAAQ,EAAGiE,CAAD,IAAO;AAC1C,YAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,YAAvB,EAAqC;AACjC,eAAKC,sBAAL;AACH,SAFD,MAEM,IAAIH,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,MAAvB,EAA+B;AACjC,eAAKE,mBAAL,GADiC,CACL;AAC/B;AACJ,OAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPJ,EAQI;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ,CADJ,CATJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAQ,MAAA,KAAK,EAAEpE,UAAf;AAA2B,MAAA,QAAQ,EAAE,KAAKqE,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CAFA,CAtBJ,EAiCK,KAAK3E,KAAL,CAAWG,SAAX,CAAqB+B,MAArB,KAAgC,CAAhC,GAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAApC,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKlC,KAAL,CAAWG,SAAX,CAAqBgC,GAArB,CAAyBU,KAAK,IAC1B;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACP,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeO,KAAK,CAACP,OAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCALJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKO,KAAK,CAAC3C,gBAAN,CAAuBiC,GAAvB,CAA2BR,IAAI,IAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACmB,kBAAL,CAAwBX,GAAxB,CAA4BY,KAAK,IACtD;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACR,GAAhB;AAAqB,MAAA,SAAS,EAAEQ,KAAK,CAACR,GAAtC;AAA2C,MAAA,GAAG,EAAC,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB,CAAL,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,IAAI,CAACkC,IAAV,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlC,IAAI,CAACS,KAAV,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,IAAI,CAACqC,IAAV,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKrC,IAAI,CAACK,QAAV,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACS,KAAL,GAAWT,IAAI,CAACK,QAArB,CATJ,CADH,CAFL,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADR,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,KAAK,CAACpB,UAAX,CAFR,CAfJ,CAVJ,CAFJ,CADJ,CADD,CApCP,CADH,GA+EG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhFR,CADJ;AAqFH;;AA1RmD","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Redirect, Link } from \"react-router-dom\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport NavigationBar from \"./NavigationBar\"\r\n\r\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\r\n\r\n\r\nexport default class ViewAllUsers extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            purchaseHistory: [],\r\n            eachItemsInOrder: [],\r\n            allOrders: [],\r\n            searchQuery: \"\",\r\n            sortFunction: \"name\",\r\n            sizeFilter: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n    //         .then(res => {\r\n    //             // Update purchaseHistory state\r\n    //             this.setState({ purchaseHistory: res.data }, () => {\r\n    //                 // Iterate over each item in purchase history and fetch shirt details\r\n    //                 this.state.purchaseHistory.forEach(itemsInArray => {\r\n    //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\r\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n    //                         .then(res => {\r\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\r\n    //                             // Update eachItemsInOrder state by appending new items\r\n    //                             this.setState(prevState => ({\r\n    //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\r\n    //                             }));\r\n    //                         })\r\n    //                         .catch(err => {\r\n    //                             console.error(\"Error fetching shirt data:\", err);\r\n    //                         });\r\n    //                     });\r\n    //                 });\r\n    //             });\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.error(\"Error fetching user data:\", err);\r\n    //         });\r\n    //     }\r\n    // }\r\n    // componentDidMount() {\r\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n    //         .then(res => {\r\n    //             // Update purchaseHistory state\r\n    //             this.setState({ purchaseHistory: res.data }, () => {\r\n    //                 // Iterate over each item in purchase history\r\n    //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\r\n    //                     // Store each itemsInOrder array in a separate array\r\n    //                     let eachItemsInOrder = [];\r\n    //                     itemsInArray.items.forEach(item => {\r\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n    //                         .then(res => {\r\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\r\n    //                             eachItemsInOrder.push(updatedItem);\r\n    //                         })\r\n    //                         .catch(err => {\r\n    //                             console.error(\"Error fetching shirt data:\", err);\r\n    //                         });\r\n    //                     });\r\n    //                     // Push eachItemsInOrder array into allOrders array\r\n    //                     this.setState(prevState => ({\r\n    //                         allOrders: [\r\n    //                             ...prevState.allOrders,\r\n    //                             {\r\n    //                                 orderId: itemsInArray._id, // Store item._id into allOrders\r\n    //                                 eachItemsInOrder: eachItemsInOrder\r\n    //                             }\r\n    //                         ]\r\n    //                     }));\r\n    //                 });\r\n    //             });\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.error(\"Error fetching user data:\", err);\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    componentDidMount() {\r\n        if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n            let userEmail;\r\n            // const currentUrl = window.location.pathname;\r\n            if(localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER){\r\n            userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n            }else if(localStorage.accessLevel ==ACCESS_LEVEL_ADMIN){\r\n                // if (currentUrl === \"/ViewPurchaseHistory\") {\r\n                //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n                // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\r\n                //     userEmail = this.props.match.params.email;\r\n                // }\r\n                userEmail = this.props.match.params.email;\r\n            }\r\n\r\n            axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n            .then(res => {\r\n                // Update purchase history state\r\n                this.setState({ purchaseHistory: res.data }, () => {\r\n                    // Iterate over each purchase history item\r\n                    this.state.purchaseHistory.forEach((itemsInArray, index) => {\r\n                        let eachItemsInOrder = [];\r\n                        let totalPrice = 0; // Initialize total price for the order\r\n                        itemsInArray.items.forEach(item => {\r\n                            // Fetch shirt details and calculate total price for each item\r\n                            axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n                                .then(res => {\r\n                                    const updatedItem = { ...res.data, quantity: item.quantity };\r\n                                    eachItemsInOrder.push(updatedItem);\r\n                                    \r\n                                    // Check if all items are fetched\r\n                                    if (eachItemsInOrder.length === itemsInArray.items.length) {\r\n                                        // Add the price of the item to the total price\r\n                                        eachItemsInOrder.map(item=>totalPrice += item.price * item.quantity)\r\n                                    \r\n                                        // Update state after all items are fetched\r\n                                        this.setState(prevState => ({\r\n                                            allOrders: [\r\n                                                ...prevState.allOrders,\r\n                                                {\r\n                                                    orderId: itemsInArray._id,\r\n                                                    eachItemsInOrder: eachItemsInOrder,\r\n                                                    totalPrice: totalPrice \r\n                                                }\r\n                                            ]\r\n                                        }), () => {\r\n                                            // Call loadShirtPhotos() after updating state\r\n                                            this.loadShirtPhotos();\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(err => {\r\n                                    console.error(\"Error fetching shirt data:\", err);\r\n                                });\r\n                        });\r\n                    });\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching user data:\", err);\r\n            });\r\n    }\r\n    }\r\n    \r\n    loadShirtPhotos() {\r\n        this.state.allOrders.forEach(order => {\r\n            order.eachItemsInOrder.forEach(item => {\r\n                item.shirtPhotoFilename.forEach(photo => {\r\n                    axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n                        .then(res => {\r\n                            // Update shirt photo in DOM\r\n                            const elements = document.getElementsByClassName(photo._id);\r\n                            Array.from(elements).forEach(element => {\r\n                                element.src = `data:;base64,${res.data.image}`;\r\n                            });\r\n                        })\r\n                        .catch(err => {\r\n                            // Handle error\r\n                            console.error(\"Error loading shirt photo:\", err);\r\n                        });\r\n\r\n                });\r\n            });\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\nrender() {\r\n    const { allOrders, searchQuery, sortFunction,sizeFilter } = this.state;\r\n    \r\n    let filteredOrders = allOrders.filter(order =>\r\n        order.eachItemsInOrder.some(item => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n    );\r\n\r\n    if (sizeFilter !== \"\") {\r\n        filteredOrders = filteredOrders.filter(order =>\r\n            order.eachItemsInOrder.some(item => item.size.toLowerCase() === sizeFilter.toLowerCase())\r\n        );\r\n    }\r\n\r\n    let sortedOrders = [...filteredOrders];\r\n    if (sortFunction === \"totalPrice\") {\r\n        sortedOrders.sort((a, b) => a.totalPrice - b.totalPrice);\r\n    }else if (sortFunction === \"name\") {\r\n        sortedOrders = filteredOrders; \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\r\n                <div>\r\n                    <NavigationBar />\r\n                    <h2>Ordered Items</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search...\"\r\n                        value={searchQuery}\r\n                        onChange={this.handleSearchChange}\r\n                    />\r\n                    <div className=\"sortInViewPurchaseHistory\">\r\n                        <select value={sortFunction} onChange={(e) => {\r\n                            if (e.target.value === 'totalPrice') {\r\n                                this.handleSortByTotalPrice();\r\n                            }else if (e.target.value === 'name') {\r\n                                this.handleSortByDefault(); // Handle default sorting option\r\n                            }\r\n                        }}>\r\n                            <option value=\"name\">Default Sorting</option>\r\n                            <option value=\"totalPrice\">Sort by Total Price</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                    {/* <h2>Filter by Size:</h2> */}\r\n                    <select value={sizeFilter} onChange={this.handleSizeFilterChange}>\r\n                        <option value=\"\">All Sizes</option>\r\n                        <option value=\"XS\">XS</option>\r\n                        <option value=\"S\">S</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"L\">L</option>\r\n                        <option value=\"XL\">XL</option>\r\n                    </select>\r\n                </div>\r\n                    {this.state.allOrders.length === 0 ? <h4>The User didn't purchase anything yet</h4>\r\n\r\n                       : \r\n                       <div>\r\n                       {this.state.allOrders.map(order => (\r\n                            <div key={order.orderId}>\r\n                                <h3>Order ID: {order.orderId}</h3>\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Price</th>\r\n                                            <th>Size</th>\r\n                                            <th>Quantity</th>\r\n                                            <th>Total Price for this t-shirt</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                        {order.eachItemsInOrder.map(item => (\r\n                                            <tr>\r\n                                                <td>{item.shirtPhotoFilename.map(photo => (\r\n                                <img key={photo._id} className={photo._id} alt=\"\" />\r\n                            ))}\r\n                            </td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.price}</td>\r\n                                                <td>{item.size}</td>\r\n                                                <td>{item.quantity}</td>\r\n                                                <td>{item.price*item.quantity}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                                <td >Total Of The Order Price:</td>\r\n                                                <td>{order.totalPrice}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                    }\r\n                </div>\r\n            ) : (\r\n                <Redirect to={\"/main\"} />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}