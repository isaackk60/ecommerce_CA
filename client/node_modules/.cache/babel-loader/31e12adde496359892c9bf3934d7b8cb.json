{"ast":null,"code":"import _defineProperty from \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\ViewPurchaseHistory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class ViewAllUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = (orderId, itemId) => {\n      let shirtObject = {\n        stock: item.stock - item.quantity\n      };\n      axios.put(\"\".concat(SERVER_HOST, \"/shirts/\").concat(itemId), shirtObject, {\n        headers: {\n          \"authorization\": localStorage.token\n        }\n      }).then(res => {\n        // Handle success if needed\n        console.log(\"Stock updated for shirt with ID: \".concat(itemId));\n        localStorage.removeItem(\"itemsInCart\");\n      }).catch(err => {\n        // Handle error if needed\n        console.error(\"Error updating stock for shirt with ID: \".concat(itemId), err);\n      });\n    };\n\n    this.state = {\n      purchaseHistory: [],\n      eachItemsInOrder: [],\n      allOrders: []\n    };\n  } // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history and fetch shirt details\n  //                 this.state.purchaseHistory.forEach(itemsInArray => {\n  //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             // Update eachItemsInOrder state by appending new items\n  //                             this.setState(prevState => ({\n  //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n  //                             }));\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n  // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history\n  //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\n  //                     // Store each itemsInOrder array in a separate array\n  //                     let eachItemsInOrder = [];\n  //                     itemsInArray.items.forEach(item => {\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             eachItemsInOrder.push(updatedItem);\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                     // Push eachItemsInOrder array into allOrders array\n  //                     this.setState(prevState => ({\n  //                         allOrders: [\n  //                             ...prevState.allOrders,\n  //                             {\n  //                                 orderId: itemsInArray._id, // Store item._id into allOrders\n  //                                 eachItemsInOrder: eachItemsInOrder\n  //                             }\n  //                         ]\n  //                     }));\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n\n\n  componentDidMount() {\n    if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n      let userEmail; // const currentUrl = window.location.pathname;\n\n      if (localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER) {\n        userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n      } else if (localStorage.accessLevel == ACCESS_LEVEL_ADMIN) {\n        // if (currentUrl === \"/ViewPurchaseHistory\") {\n        //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n        // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\n        //     userEmail = this.props.match.params.email;\n        // }\n        userEmail = this.props.match.params.email;\n      }\n\n      axios.get(\"\".concat(SERVER_HOST, \"/sales/email?email=\").concat(userEmail)).then(res => {\n        // Update purchase history state\n        this.setState({\n          purchaseHistory: res.data\n        }, () => {\n          // Iterate over each purchase history item\n          this.state.purchaseHistory.forEach((itemsInArray, index) => {\n            let eachItemsInOrder = [];\n            let totalPrice = 0; // Initialize total price for the order\n\n            itemsInArray.items.forEach(item => {\n              // Fetch shirt details and calculate total price for each item\n              axios.get(\"\".concat(SERVER_HOST, \"/shirts/\").concat(item.shirtID), {\n                headers: {\n                  \"authorization\": localStorage.token\n                }\n              }).then(res => {\n                const updatedItem = _objectSpread({}, res.data, {\n                  quantity: item.quantity\n                });\n\n                eachItemsInOrder.push(updatedItem); // Check if all items are fetched\n\n                if (eachItemsInOrder.length === itemsInArray.items.length) {\n                  // Add the price of the item to the total price\n                  eachItemsInOrder.map(item => totalPrice += item.price * item.quantity); // Update state after all items are fetched\n\n                  this.setState(prevState => ({\n                    allOrders: [...prevState.allOrders, {\n                      orderId: itemsInArray._id,\n                      eachItemsInOrder: eachItemsInOrder,\n                      totalPrice: totalPrice\n                    }]\n                  }), () => {\n                    // Call loadShirtPhotos() after updating state\n                    this.loadShirtPhotos();\n                  });\n                }\n              }).catch(err => {\n                console.error(\"Error fetching shirt data:\", err);\n              });\n            });\n          });\n        });\n      }).catch(err => {\n        console.error(\"Error fetching user data:\", err);\n      });\n    }\n  }\n\n  loadShirtPhotos() {\n    this.state.allOrders.forEach(order => {\n      order.eachItemsInOrder.forEach(item => {\n        item.shirtPhotoFilename.forEach(photo => {\n          axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n            // Update shirt photo in DOM\n            const elements = document.getElementsByClassName(photo._id);\n            Array.from(elements).forEach(element => {\n              element.src = \"data:;base64,\".concat(res.data.image);\n            });\n          }).catch(err => {\n            // Handle error\n            console.error(\"Error loading shirt photo:\", err);\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.purchaseHistory);\n    console.log(this.state.eachItemsInOrder);\n    console.log(this.state.allOrders); // console.log(this.state.allOrders.map(order => order.eachItemsInOrder.map(item => item.name)));\n\n    return React.createElement(React.Fragment, null, localStorage.accessLevel > ACCESS_LEVEL_GUEST ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Ordered Items\"), this.state.allOrders.length === 0 ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"The User didn't purchase anything yet\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.state.allOrders.map(order => React.createElement(\"div\", {\n      key: order.orderId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Order ID: \", order.orderId), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Photo\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Total Price for this t-shirt\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Return\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, order.eachItemsInOrder.map(item => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, item.shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      className: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, item.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, item.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, item.price * item.quantity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleDelete(order.orderId, item._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Return Product\")))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Total Of The Order Price:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, order.totalPrice)))))))) : React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\ViewPurchaseHistory.js"],"names":["React","Component","Redirect","Link","axios","NavigationBar","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","ViewAllUsers","constructor","props","handleDelete","orderId","itemId","shirtObject","stock","item","quantity","put","headers","localStorage","token","then","res","console","log","removeItem","catch","err","error","state","purchaseHistory","eachItemsInOrder","allOrders","componentDidMount","accessLevel","userEmail","JSON","parse","getItem","match","params","email","get","setState","data","forEach","itemsInArray","index","totalPrice","items","shirtID","updatedItem","push","length","map","price","prevState","_id","loadShirtPhotos","order","shirtPhotoFilename","photo","filename","elements","document","getElementsByClassName","Array","from","element","src","image","render","name","size"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Redirect, Link } from \"react-router-dom\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport NavigationBar from \"./NavigationBar\"\r\n\r\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\r\n\r\n\r\nexport default class ViewAllUsers extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            purchaseHistory: [],\r\n\r\n            eachItemsInOrder: [],\r\n            allOrders: []\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n    //         .then(res => {\r\n    //             // Update purchaseHistory state\r\n    //             this.setState({ purchaseHistory: res.data }, () => {\r\n    //                 // Iterate over each item in purchase history and fetch shirt details\r\n    //                 this.state.purchaseHistory.forEach(itemsInArray => {\r\n    //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\r\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n    //                         .then(res => {\r\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\r\n    //                             // Update eachItemsInOrder state by appending new items\r\n    //                             this.setState(prevState => ({\r\n    //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\r\n    //                             }));\r\n    //                         })\r\n    //                         .catch(err => {\r\n    //                             console.error(\"Error fetching shirt data:\", err);\r\n    //                         });\r\n    //                     });\r\n    //                 });\r\n    //             });\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.error(\"Error fetching user data:\", err);\r\n    //         });\r\n    //     }\r\n    // }\r\n    // componentDidMount() {\r\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n    //         .then(res => {\r\n    //             // Update purchaseHistory state\r\n    //             this.setState({ purchaseHistory: res.data }, () => {\r\n    //                 // Iterate over each item in purchase history\r\n    //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\r\n    //                     // Store each itemsInOrder array in a separate array\r\n    //                     let eachItemsInOrder = [];\r\n    //                     itemsInArray.items.forEach(item => {\r\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n    //                         .then(res => {\r\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\r\n    //                             eachItemsInOrder.push(updatedItem);\r\n    //                         })\r\n    //                         .catch(err => {\r\n    //                             console.error(\"Error fetching shirt data:\", err);\r\n    //                         });\r\n    //                     });\r\n    //                     // Push eachItemsInOrder array into allOrders array\r\n    //                     this.setState(prevState => ({\r\n    //                         allOrders: [\r\n    //                             ...prevState.allOrders,\r\n    //                             {\r\n    //                                 orderId: itemsInArray._id, // Store item._id into allOrders\r\n    //                                 eachItemsInOrder: eachItemsInOrder\r\n    //                             }\r\n    //                         ]\r\n    //                     }));\r\n    //                 });\r\n    //             });\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.error(\"Error fetching user data:\", err);\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    componentDidMount() {\r\n        if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n            let userEmail;\r\n            // const currentUrl = window.location.pathname;\r\n            if(localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER){\r\n            userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n            }else if(localStorage.accessLevel ==ACCESS_LEVEL_ADMIN){\r\n                // if (currentUrl === \"/ViewPurchaseHistory\") {\r\n                //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n                // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\r\n                //     userEmail = this.props.match.params.email;\r\n                // }\r\n                userEmail = this.props.match.params.email;\r\n            }\r\n\r\n            axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n            .then(res => {\r\n                // Update purchase history state\r\n                this.setState({ purchaseHistory: res.data }, () => {\r\n                    // Iterate over each purchase history item\r\n                    this.state.purchaseHistory.forEach((itemsInArray, index) => {\r\n                        let eachItemsInOrder = [];\r\n                        let totalPrice = 0; // Initialize total price for the order\r\n                        itemsInArray.items.forEach(item => {\r\n                            // Fetch shirt details and calculate total price for each item\r\n                            axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n                                .then(res => {\r\n                                    const updatedItem = { ...res.data, quantity: item.quantity };\r\n                                    eachItemsInOrder.push(updatedItem);\r\n                                    \r\n                                    // Check if all items are fetched\r\n                                    if (eachItemsInOrder.length === itemsInArray.items.length) {\r\n                                        // Add the price of the item to the total price\r\n                                        eachItemsInOrder.map(item=>totalPrice += item.price * item.quantity)\r\n                                    \r\n                                        // Update state after all items are fetched\r\n                                        this.setState(prevState => ({\r\n                                            allOrders: [\r\n                                                ...prevState.allOrders,\r\n                                                {\r\n                                                    orderId: itemsInArray._id,\r\n                                                    eachItemsInOrder: eachItemsInOrder,\r\n                                                    totalPrice: totalPrice \r\n                                                }\r\n                                            ]\r\n                                        }), () => {\r\n                                            // Call loadShirtPhotos() after updating state\r\n                                            this.loadShirtPhotos();\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(err => {\r\n                                    console.error(\"Error fetching shirt data:\", err);\r\n                                });\r\n                        });\r\n                    });\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching user data:\", err);\r\n            });\r\n    }\r\n    }\r\n    loadShirtPhotos() {\r\n        this.state.allOrders.forEach(order => {\r\n            order.eachItemsInOrder.forEach(item => {\r\n                item.shirtPhotoFilename.forEach(photo => {\r\n                    axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n                        .then(res => {\r\n                            // Update shirt photo in DOM\r\n                            const elements = document.getElementsByClassName(photo._id);\r\n                            Array.from(elements).forEach(element => {\r\n                                element.src = `data:;base64,${res.data.image}`;\r\n                            });\r\n                        })\r\n                        .catch(err => {\r\n                            // Handle error\r\n                            console.error(\"Error loading shirt photo:\", err);\r\n                        });\r\n\r\n                });\r\n            });\r\n        });\r\n    }\r\n    \r\n    handleDelete = (orderId, itemId) => {\r\n        let shirtObject = {\r\n            stock: item.stock - item.quantity\r\n        };\r\n\r\n\r\n\r\n        axios.put(`${SERVER_HOST}/shirts/${itemId}`, shirtObject, { headers: { \"authorization\": localStorage.token } })\r\n        .then(res => {\r\n            // Handle success if needed\r\n            console.log(`Stock updated for shirt with ID: ${itemId}`);\r\n            localStorage.removeItem(\"itemsInCart\");\r\n        })\r\n        .catch(err => {\r\n            // Handle error if needed\r\n            console.error(`Error updating stock for shirt with ID: ${itemId}`, err);\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state.purchaseHistory)\r\n        console.log(this.state.eachItemsInOrder)\r\n        console.log(this.state.allOrders)\r\n        // console.log(this.state.allOrders.map(order => order.eachItemsInOrder.map(item => item.name)));\r\n        return (\r\n            <>\r\n                {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\r\n                    <div>\r\n                        <NavigationBar />\r\n                        <h2>Ordered Items</h2>\r\n{this.state.allOrders.length === 0 ? <h4>The User didn't purchase anything yet</h4>\r\n\r\n                       : \r\n                       <div>\r\n                       {this.state.allOrders.map(order => (\r\n                            <div key={order.orderId}>\r\n                                <h3>Order ID: {order.orderId}</h3>\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th>Photo</th>\r\n                                            <th>Name</th>\r\n                                            <th>Price</th>\r\n                                            <th>Size</th>\r\n                                            <th>Quantity</th>\r\n                                            <th>Total Price for this t-shirt</th>\r\n                                            <th>Return</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                        {order.eachItemsInOrder.map(item => (\r\n                                            <tr>\r\n                                                <td>{item.shirtPhotoFilename.map(photo => (\r\n                                <img key={photo._id} className={photo._id} alt=\"\" />\r\n                            ))}\r\n                            </td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.price}</td>\r\n                                                <td>{item.size}</td>\r\n                                                <td>{item.quantity}</td>\r\n                                                <td>{item.price*item.quantity}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.handleDelete(order.orderId, item._id)}>Return Product</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                                <td >Total Of The Order Price:</td>\r\n                                                <td>{order.totalPrice}</td>\r\n                                            </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n\r\n                                        }\r\n                    </div>\r\n                ) : (\r\n                    <Redirect to={\"/main\"} />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}