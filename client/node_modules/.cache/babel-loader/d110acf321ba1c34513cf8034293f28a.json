{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyShirt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      console.log(this.props.items);\n      console.log(this.props.customerName);\n      console.log(this.props.customerEmail);\n      console.log(this.props.address);\n      console.log(this.props.phone);\n      let inputData = {\n        items: this.props.items,\n        customerName: this.props.customerName,\n        customerEmail: this.props.customerEmail,\n        address: this.props.address,\n        phone: this.props.phone\n      };\n      console.log(inputData);\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.orderID, \"/\").concat(this.props.price), {\n        items: this.props.items,\n        customerName: this.props.customerName,\n        customerEmail: this.props.customerEmail,\n        address: this.props.address,\n        phone: this.props.phone\n      }, {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-type\": \"application/json\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal payment error\");\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      console.log(\"PayPal payment cancelled\"); // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"paypal-outer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyShirt","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","onApprove","paymentData","console","log","items","customerName","customerEmail","address","phone","inputData","post","orderID","headers","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,4BAA/C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,yBAApD;AAGA,eAAe,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC5CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,WATmB,GASL,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC7B,aAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AAAEC,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS;AAApB;AAAV,SAAD;AAAlB,OAArB,CAAP;AACH,KAXkB;;AAAA,SAcnBC,SAdmB,GAcPC,WAAW,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWc,KAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWe,YAAvB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWgB,aAAvB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWiB,OAAvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWkB,KAAvB;AACA,UAAIC,SAAS,GAAG;AAAEL,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KAApB;AAA2BC,QAAAA,YAAY,EAAE,KAAKf,KAAL,CAAWe,YAApD;AAAkEC,QAAAA,aAAa,EAAE,KAAKhB,KAAL,CAAWgB,aAA5F;AAA2GC,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWiB,OAA/H;AAAwIC,QAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB;AAA1J,OAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA5B,MAAAA,KAAK,CAAC6B,IAAN,WAAc1B,WAAd,oBAAmCiB,WAAW,CAACU,OAA/C,cAA0D,KAAKrB,KAAL,CAAWS,KAArE,GAA8E;AAAEK,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KAApB;AAA2BC,QAAAA,YAAY,EAAE,KAAKf,KAAL,CAAWe,YAApD;AAAkEC,QAAAA,aAAa,EAAE,KAAKhB,KAAL,CAAWgB,aAA5F;AAA2GC,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWiB,OAA/H;AAAwIC,QAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB;AAA1J,OAA9E,EAAiP;AAAEI,QAAAA,OAAO,EAAE;AAAE,2BAAiBC,YAAY,CAACC,KAAhC;AAAuC,0BAAgB;AAAvD;AAAX,OAAjP,EACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AACVC,UAAAA,iBAAiB,EAAEjC,aAAa,CAACkC,WAAd,CAA0BC,OADnC;AAEVC,UAAAA,aAAa,EAAEpB,WAAW,CAACU,OAFjB;AAGVW,UAAAA,uBAAuB,EAAE;AAHf,SAAd;AAKH,OAPL,EAQKC,KARL,CAQWC,SAAS,IAAI;AAChB,aAAKP,QAAL,CAAc;AACVC,UAAAA,iBAAiB,EAAEjC,aAAa,CAACkC,WAAd,CAA0BM,KADnC;AAEVH,UAAAA,uBAAuB,EAAE;AAFf,SAAd;AAIH,OAbL;AAcH,KApCkB;;AAAA,SAuCnBI,OAvCmB,GAuCTF,SAAS,IAAI;AACnBtB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,WAAKc,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAEjC,aAAa,CAACkC,WAAd,CAA0BM,KADnC;AAEVH,QAAAA,uBAAuB,EAAE;AAFf,OAAd;AAIH,KA7CkB;;AAAA,SAgDnBK,QAhDmB,GAgDRC,UAAU,IAAI;AACrB1B,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EADqB,CAErB;;AACA,WAAKc,QAAL,CAAc;AACVC,QAAAA,iBAAiB,EAAEjC,aAAa,CAACkC,WAAd,CAA0BU,MADnC;AAEVP,QAAAA,uBAAuB,EAAE;AAFf,OAAd;AAIH,KAvDkB;;AAGf,SAAKQ,KAAL,GAAa;AACTR,MAAAA,uBAAuB,EAAE,KADhB;AAETJ,MAAAA,iBAAiB,EAAE,IAFV;AAGTG,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKH;;AAkDDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWR,uBAAX,GAAqC,oBAAC,QAAD;AAAU,MAAA,EAAE,2BAAoB,KAAKQ,KAAL,CAAWZ,iBAA/B,cAAoD,KAAKY,KAAL,CAAWT,aAA/D,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArC,GAAsI,IAD3I,EAEI,oBAAC,oBAAD;AAAsB,MAAA,OAAO,EAAE;AAAEW,QAAAA,QAAQ,EAAE,KAAZ;AAAmB,qBAAajD;AAAhC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEkD,QAAAA,MAAM,EAAE;AAAV,OAAtB;AAAgD,MAAA,WAAW,EAAE,KAAK1C,WAAlE;AAA+E,MAAA,SAAS,EAAE,KAAKS,SAA/F;AAA0G,MAAA,OAAO,EAAE,KAAK0B,OAAxH;AAAiI,MAAA,QAAQ,EAAE,KAAKC,QAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFJ,CADJ;AAUH;;AAtE2C","sourcesContent":["import React, { Component } from \"react\"\nimport axios from \"axios\"\nimport { Redirect } from \"react-router-dom\"\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\"\nimport PayPalMessage from \"./PayPalMessage\"\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\"\n\n\nexport default class BuyShirt extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            redirectToPayPalMessage: false,\n            payPalMessageType: null,\n            payPalOrderID: null\n        }\n    }\n    createOrder = (data, actions) => {\n        return actions.order.create({ purchase_units: [{ amount: { value: this.props.price } }] })\n    }\n\n\n    onApprove = paymentData => {\n        console.log(this.props.items)\n        console.log(this.props.customerName)\n        console.log(this.props.customerEmail)\n        console.log(this.props.address)\n        console.log(this.props.phone)\n        let inputData = { items: this.props.items, customerName: this.props.customerName, customerEmail: this.props.customerEmail, address: this.props.address, phone: this.props.phone }\n        console.log(inputData)\n        axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.price}`, { items: this.props.items, customerName: this.props.customerName, customerEmail: this.props.customerEmail, address: this.props.address, phone: this.props.phone }, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"application/json\" } })\n            .then(res => {\n                this.setState({\n                    payPalMessageType: PayPalMessage.messageType.SUCCESS,\n                    payPalOrderID: paymentData.orderID,\n                    redirectToPayPalMessage: true\n                })\n            })\n            .catch(errorData => {\n                this.setState({\n                    payPalMessageType: PayPalMessage.messageType.ERROR,\n                    redirectToPayPalMessage: true\n                })\n            })\n    }\n\n\n    onError = errorData => {\n        console.log(\"PayPal payment error\")\n        this.setState({\n            payPalMessageType: PayPalMessage.messageType.ERROR,\n            redirectToPayPalMessage: true\n        })\n    }\n\n\n    onCancel = cancelData => {\n        console.log(\"PayPal payment cancelled\")\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n        this.setState({\n            payPalMessageType: PayPalMessage.messageType.CANCEL,\n            redirectToPayPalMessage: true\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.redirectToPayPalMessage ? <Redirect to={`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`} /> : null}\n                <PayPalScriptProvider options={{ currency: \"EUR\", \"client-id\": SANDBOX_CLIENT_ID }}>\n                    <div className=\"paypal-outer-container\">\n                        <PayPalButtons style={{ layout: \"horizontal\" }} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel} />\n                    </div>\n                </PayPalScriptProvider>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}