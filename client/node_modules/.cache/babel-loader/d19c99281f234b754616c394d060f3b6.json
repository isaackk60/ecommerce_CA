{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ShoppingCart.js\";\n// import React, { Component } from \"react\"\n// import Form from \"react-bootstrap/Form\"\n// import axios from \"axios\"\n// export default class ShoppingCart extends Component {\n//     constructor(props){\n//         this.state = {\n//             items: [], \n//             totalPrice: 0 \n//         };\n//     }\n//     addItemToCart = (item) => {\n//         const updatedItems = [...this.state.items, item];\n//         const totalPrice = this.state.totalPrice + (item.price * item.quantity);\n//         this.setState({ items: updatedItems, totalPrice });\n//     };\n//     render() {\n//         const { items, totalPrice } = this.state;\n//         const { itemsInCart } = this.props.location.state;\n//         return (\n//             <div>\n//                 <h2>Shopping Cart</h2>\n//                 <ul>\n//                     {items.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul>\n//                 <p>Total Price: ${totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\n// import React, { Component } from \"react\";\n// import Form from \"react-bootstrap/Form\"\n// import NavigationBar from \"./NavigationBar\"\n// import { SERVER_HOST } from \"../config/global_constants\"\n// import axios from \"axios\"\n// export default class ShoppingCart extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             // userId:\"\",\n//             name: \"\",\n//             size: \"\",\n//             price: \"\",\n//             quantity: \"\",\n//             shirtPhotoFilename: null,\n//             // redirectToDisplayAllTShirtInCart: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\n//             wasSubmittedAtLeastOnce: false,\n//             cart:[],\n//             totalPrice:0\n//         }\n//     }\n//     componentDidMount() {\n//         // const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//         axios.get(`${SERVER_HOST}/cart/`)\n//         .then(res => \n//         { \n//             this.setState({cart: res.data})                                         \n//         })\n//         .catch(err =>\n//         {\n//             // do nothing\n//         })\n//         axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}`, { headers: { \"authorization\": localStorage.token } })\n//         .then(res => {\n//             this.setState({\n//                 name: res.data.name,\n//                 // colour: res.data.colour,\n//                 size: res.data.size,\n//                 price: res.data.price,\n//                 quantity: res.data.quantity,\n//                 shirtPhotoFilename:res.data.shirtPhotoFilename\n//             })\n//         })\n//         .catch(err => {\n//             // do nothing\n//         })\n//         // Update cart state with itemsInCart\n//         // this.setState({ cart: itemsInCart });\n//         // Calculate total price\n//         let totalPrice = 0;\n//         // itemsInCart.forEach(item => {\n//         //     totalPrice += item.price * item.quantity;\n//         // });\n//         this.state.cart.forEach(item => {\n//             totalPrice += item.price * item.quantity;\n//         })\n//         // Update totalPrice state\n//         this.setState({ totalPrice: totalPrice });\n//         // Load shirt photos\n//         this.state.cart.forEach(cartItem => {\n//             cartItem.shirtPhotoFilename.forEach(photo => {\n//                 axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//                     .then(res => {\n//                         // Update shirt photo in DOM\n//                         document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n//                     })\n//                     .catch(err => {\n//                         // Handle error\n//                     });\n//             });\n//         });\n//     }\n//     // componentDidMount(){\n//     //     const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//     //     this.setState({ cart: itemsInCart });\n//     //     let totalPrice = 0;\n//     //     itemsInCart.forEach(item => {\n//     //         totalPrice += item.price * item.quantity;\n//     //     });\n//     //     this.setState({ totalPrice: totalPrice });\n//     //     this.state.cart.shirtPhotoFilename.map(photo => {\n//     //         return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//     //             .then(res => {\n//     //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n//     //             })\n//     //             .catch(err => {\n//     //                 // do nothing\n//     //             })\n//     //     })\n//         // let formData = new FormData()\n//         // formData.append(\"userId\", this.state.stock)\n//         // formData.append(\"name\", this.state.name)\n//         // // formData.append(\"colour\", this.state.colour)\n//         // formData.append(\"size\", this.state.size)\n//         // formData.append(\"price\", this.state.price)\n//         // formData.append(\"quantity\", this.state.quantity)\n//         // if (this.state.cart.shirtPhotoFilename) {\n//         //     for (let i = 0; i < this.state.cart.shirtPhotoFilename.length; i++) {\n//         //         formData.append(\"cartPhotos\", this.state.cart.shirtPhotoFilename[i])\n//         //     }\n//         // }\n//         // axios.post(`${SERVER_HOST}/cart`, formData, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\n//         //     .then(res => {\n//         //         this.setState({ redirectToDisplayAllTShirtInCart: true })\n//         //     })\n//         //     .catch(err => {\n//         //         this.setState({ wasSubmittedAtLeastOnce: true })\n//         //     })\n//     //}\n//     render() {\n// console.log(this.state.cart)\n//         return (\n//             <div>\n//                 <NavigationBar />\n//                 <h2>Shopping Cart</h2>\n//                 {/* <div>\n//                     {this.state.cart.shirtPhotoFilename === null ? null : <div className=\"shirtPhotos\">{this.state.cart.shirtPhotoFilename.map(photo => <img key={photo._id} id={photo._id} alt=\"\" />)}</div>}\n//                 </div> */}\n//                 {/* <ul>\n//                     {this.state.cart.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: €{item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul> */}\n//                 <p>Total Price: €{this.state.totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\nimport React, { Component } from \"react\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nimport axios from \"axios\";\nimport BuyShirt from \"./BuyShirt\";\nimport { Link } from \"react-router-dom\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (index, field, value) => {\n      const updatedCart = [...this.state.cart];\n      updatedCart[index][field] = value;\n      this.setState({\n        cart: updatedCart\n      }); // localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\n\n      const groupedItems = this.state.cart.reduce((groups, item) => {\n        const group = groups.find(g => g.name === item.name);\n\n        if (group) {\n          group.quantity += item.quantity;\n          group.totalPrice += item.price * item.quantity;\n        } else {\n          groups.push({\n            shirtId: item.shirtId,\n            name: item.name,\n            size: item.size,\n            quantity: item.quantity,\n            price: item.price,\n            totalPrice: item.price * item.quantity,\n            shirtPhotoFilename: item.shirtPhotoFilename,\n            shirtPhotoFilename: item.shirtPhotoFilename\n          });\n        }\n\n        return groups;\n      }, []);\n      this.setState({\n        cart: groupedItems\n      });\n      localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems)); // this.loadShirtPhotos();\n    };\n\n    this.handleDelete = (name, size) => {\n      const updatedCart = this.state.cart.filter(item => !(item.name === name && item.size === size));\n      this.setState({\n        cart: updatedCart\n      });\n      localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\n      this.loadShirtPhotos();\n    };\n\n    this.handlePayment = () => {\n      // Check if all guest details are provided\n      const _this$state = this.state,\n            guestName = _this$state.guestName,\n            guestEmail = _this$state.guestEmail,\n            guestAddress = _this$state.guestAddress,\n            guestPhone = _this$state.guestPhone;\n      const errors = {};\n\n      if (!guestName.trim()) {\n        errors.guestName = \"Name is required\";\n      }\n\n      if (!guestEmail.trim()) {\n        errors.guestEmail = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\n        errors.guestEmail = \"Email is invalid\";\n      }\n\n      if (!guestAddress.trim()) {\n        errors.guestAddress = \"Address is required\";\n      }\n\n      if (!guestPhone.trim()) {\n        errors.guestPhone = \"Phone number is required\";\n      } else if (!/^\\d{10}$/.test(guestPhone)) {\n        errors.guestPhone = \"Phone number must be 10 digits\";\n      } // if (Object.keys(errors).length === 0) {\n      // if (guestName && guestEmail && guestAddress && guestPhone {\n\n\n      if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\n        // Proceed with payment\n        console.log(\"Guest details provided. Proceeding with payment...\"); // Call your payment function or component here\n\n        this.setState({\n          redirectToPaypalButton: true\n        });\n      } else {\n        // Display error message or handle accordingly\n        console.log(\"Please provide all guest details before proceeding with payment.\");\n      }\n    };\n\n    this.handlePayment = () => {\n      // Check if all guest details are provided\n      const _this$state2 = this.state,\n            guestName = _this$state2.guestName,\n            guestEmail = _this$state2.guestEmail,\n            guestAddress = _this$state2.guestAddress,\n            guestPhone = _this$state2.guestPhone;\n      const errors = {};\n\n      if (!guestName.trim()) {\n        errors.guestName = \"Name is required\";\n      }\n\n      if (!guestEmail.trim()) {\n        errors.guestEmail = \"Email is required\";\n      } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\n        errors.guestEmail = \"Email is invalid\";\n      }\n\n      if (!guestAddress.trim()) {\n        errors.guestAddress = \"Address is required\";\n      }\n\n      if (!guestPhone.trim()) {\n        errors.guestPhone = \"Phone number is required\";\n      } else if (!/^\\d{10}$/.test(guestPhone)) {\n        errors.guestPhone = \"Phone number must be 10 digits\";\n      } // if (Object.keys(errors).length === 0) {\n      // if (guestName && guestEmail && guestAddress && guestPhone {\n\n\n      if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\n        // Proceed with payment\n        console.log(\"Guest details provided. Proceeding with payment...\"); // Call your payment function or component here\n\n        this.setState({\n          redirectToPaypalButton: true\n        });\n      } else {\n        // Display error message or handle accordingly\n        console.log(\"Please provide all guest details before proceeding with payment.\");\n      }\n    };\n\n    this.handleGuest = (field, value) => {\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.submitGuestDetail = () => {\n      if (this.state.guestName && this.state.guestEmail && this.state.guestAddress && this.state.guestEmail) {\n        this.setState({\n          haveEnoughData: true\n        });\n      }\n    };\n\n    this.state = {\n      // name:\"\",\n      // price:\"\",\n      // quantity:\"\",\n      // size:\"\",\n      cart: [],\n      user: {},\n      guestName: \"\",\n      guestEmail: \"\",\n      guestAddress: \"\",\n      guestPhone: \"\",\n      isGuest: localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\n      redirectToPaypalButton: false,\n      // redirectToPaypalButton: true,\n      haveEnoughData: false // totalPrice: 0\n\n    };\n  }\n\n  componentDidMount() {\n    // Fetch cart data from the server\n    const cartLocalStorage = JSON.parse(localStorage.getItem(\"itemsInCart\") || \"[]\"); // console.log(\"itemsInCart: \",localStorage.getItem(\"itemsInCart\").forEach(item=>{item.shirtPhotoFilename}))\n\n    this.setState({\n      cart: cartLocalStorage\n    }, () => {\n      // Load shirt photos after updating state\n      this.loadShirtPhotos();\n    });\n    let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n    axios.get(\"\".concat(SERVER_HOST, \"/users/email?email=\").concat(userEmail)).then(res => {\n      this.setState({\n        user: res.data\n      });\n    }).catch(err => {\n      console.error(\"Error fetching user data:\", err);\n    });\n    const state = this.props.location.state;\n\n    if (state && state.haveEnoughData === true) {\n      this.setState({\n        haveEnoughData: true\n      });\n    } // this.props.shirt.shirtPhotoFilename.map(photo => {\n    //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //         .then(res => {\n    //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n    //         })\n    //         .catch(err => {\n    //             // do nothing\n    //         })\n    // })\n    // this.state.cart.map(item=>{item.shirtPhotoFilename.map(photo => {\n    //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //         .then(res => {\n    //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n    //         })\n    //         .catch(err => {\n    //             // do nothing\n    //         })\n    // })})\n    // this.setState({ cart: cartLocalStorage }, () => {\n    //     // Calculate total price after updating state\n    //     this.calculateTotalPrice();\n    // });\n    // console.log(this.state.cart[0])\n    //         let totalPrice = 0;\n    //         this.state.cart.map(item => {\n    //             console.log(item)\n    //                         totalPrice += item.price * item.quantity;\n    //                     });\n    //                     // Update totalPrice state\n    //                     this.setState({ totalPrice: totalPrice });\n    // axios.get(`${SERVER_HOST}/cart`, { headers: { \"authorization\": localStorage.token } })\n    //     .then(res => {\n    //         // Update state with fetched cart data\n    //         this.setState({ cart: res.data }, () => {\n    //             // Calculate total price after updating state\n    //             this.calculateTotalPrice();\n    //             // Load shirt photos after updating state\n    //             // this.loadShirtPhotos();\n    //         });\n    //     })\n    //     .catch(err => {\n    //         // Handle error\n    //         console.error(\"Error fetching cart data:\", err);\n    //     });\n\n  } // componentDidUpdate(){\n  //     if (this.state.cart !== undefined) {\n  //         const groupedItems = this.state.cart.reduce((groups, item) => {\n  //             const group = groups.find(g => g.name === item.name);\n  //             if (group) {\n  //                 group.quantity += item.quantity;\n  //                 group.totalPrice += item.price * item.quantity;\n  //             } else {\n  //                 groups.push({\n  //                     name: item.name,\n  //                     size: item.size,\n  //                     quantity: item.quantity,\n  //                     price: item.price,\n  //                     totalPrice: item.price * item.quantity\n  //                 });\n  //             }\n  //             return groups;\n  //         }, []);\n  //         localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems));\n  //     }\n  // }\n\n\n  loadShirtPhotos() {\n    // Loop through each cart item and load its shirt photos\n    this.state.cart.forEach(item => {\n      item.shirtPhotoFilename.forEach(photo => {\n        axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n          // Update shirt photo in DOM\n          document.getElementById(photo._id).src = \"data:;base64,\".concat(res.data.image);\n        }).catch(err => {\n          // Handle error\n          console.error(\"Error loading shirt photo:\", err);\n        });\n      });\n    });\n  }\n\n  calculateTotalPrice() {\n    let totalPrice = 0; // Calculate total price based on cart items\n    // this.state.cart.forEach(item => {\n    //     const carItem=item.cartItems[0];\n    //     totalPrice += carItem.price * carItem.quantity;\n    // });\n    // // Update totalPrice state\n    // this.setState({ totalPrice: totalPrice });\n\n    this.state.cart.map(item => {\n      totalPrice += item.price * item.quantity;\n    }); // Update totalPrice state\n    // this.setState({ totalPrice: totalPrice });\n\n    return totalPrice.toFixed(2);\n  }\n\n  getIdAndQuantity() {\n    let items = [];\n    this.state.cart.map(cartItem => {\n      items.push({\n        shirtID: cartItem.shirtId,\n        quantity: cartItem.quantity\n      });\n    });\n    return items;\n  }\n\n  render() {\n    console.log(this.state.user); // console.log(this.state.cart[0])\n    // {this.state.cart !== undefined ? this.calculateTotalPrice() : null}\n    // console.log(this.state.cart.map((item,index) => (item.cartItems[0].name)));\n\n    const groupedItems = this.state.cart.reduce((groups, item) => {\n      const group = groups.find(g => g.name === item.name);\n\n      if (group) {\n        group.quantity += item.quantity;\n        group.totalPrice += item.price * item.quantity;\n      } else {\n        groups.push({\n          shirtId: item.shirtId,\n          name: item.name,\n          size: item.size,\n          quantity: item.quantity,\n          price: item.price,\n          totalPrice: item.price * item.quantity,\n          shirtPhotoFilename: item.shirtPhotoFilename,\n          shirtPhotoFilename: item.shirtPhotoFilename\n        });\n      }\n\n      return groups;\n    }, []); // console.log(this.state.cart.map(item => item.shirtPhotoFilename[0]))\n    // this.state.cart.map(item =>\n    //     item.shirtPhotoFilename[0].forEach(photo => { // Use forEach to iterate over each object\n    //         axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //             .then(res => {\n    //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n    //             })\n    //             .catch(err => {\n    //                 // Handle error\n    //                 console.error(\"Error loading shirt photo:\", err);\n    //             });\n    //     })\n    // );\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"shoppingcarth2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"div\", {\n      className: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, this.state.cart.map((item, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"each-item-cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"photoanddetailsSC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, item.shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      id: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"detailsShoppingCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, item.name, \" \"), React.createElement(\"select\", {\n      value: item.size,\n      onChange: e => this.handleChange(index, 'size', e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"XS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"XS\"), React.createElement(\"option\", {\n      value: \"S\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, \"S\"), React.createElement(\"option\", {\n      value: \"M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"option\", {\n      value: \"L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"L\"), React.createElement(\"option\", {\n      value: \"XL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"XL\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, \"\\u20AC\", item.price), React.createElement(\"div\", {\n      className: \"buttonDivShoppingCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleChange(index, 'quantity', Math.max(1, item.quantity - 1)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"button\", {\n      onClick: () => this.handleChange(index, 'quantity', item.quantity + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, \"+\")))), React.createElement(\"div\", {\n      className: \"shoppingcartdeletebutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleDelete(item.name, item.size),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"Delete\")))), this.state.isGuest ? React.createElement(\"div\", {\n      className: \"guest-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, \"Guest Details\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: this.state.guestName,\n      onChange: e => this.handleChange('guestName', e.target.value),\n      required: true //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.guestEmail,\n      onChange: e => this.handleChange('guestEmail', e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Address\",\n      value: this.state.guestAddress,\n      onChange: e => this.handleChange('guestAddress', e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      value: this.state.guestPhone,\n      onChange: e => this.handleChange('guestPhone', e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submitGuestDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, \"Submit\")) : null, this.state.isGuest ? this.state.haveEnoughData ? React.createElement(BuyShirt, {\n      customerEmail: this.state.guestEmail,\n      customerName: this.state.guestName,\n      address: this.state.guestAddress,\n      phone: this.state.guestPhone,\n      items: this.getIdAndQuantity(),\n      price: this.calculateTotalPrice(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }) : React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, \"You have to fill in personal detail\") : this.state.user.name && this.state.user.email && this.state.user.phone && this.state.user.address || this.state.haveEnoughData ? React.createElement(BuyShirt, {\n      customerEmail: this.state.user.email,\n      customerName: this.state.user.name,\n      address: this.state.user.address,\n      phone: this.state.user.phone,\n      items: this.getIdAndQuantity(),\n      price: this.calculateTotalPrice(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }) : React.createElement(Link, {\n      className: \"green-button\",\n      to: {\n        pathname: \"/Dashboard\",\n        state: {\n          from: \"cart\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, \"Please finish your profile\"), React.createElement(\"div\", {\n      className: \"totalPriceShoppingCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, this.state.cart !== undefined ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, \"Total Price: $\", this.calculateTotalPrice()) : null), React.createElement(\"button\", {\n      onClick: this.handlePayment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, \"Proceed to Payment\"), this.state.redirectToPaypalButton ? React.createElement(BuyShirt, {\n      customerEmail: this.state.guestEmail,\n      customerName: this.state.guestName,\n      address: this.state.guestAddress,\n      phone: this.state.guestPhone,\n      items: this.getIdAndQuantity(),\n      price: this.calculateTotalPrice(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }) : null, \":null\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ShoppingCart.js"],"names":["React","Component","NavigationBar","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","axios","BuyShirt","Link","ShoppingCart","constructor","props","handleChange","index","field","value","updatedCart","state","cart","setState","groupedItems","reduce","groups","item","group","find","g","name","quantity","totalPrice","price","push","shirtId","size","shirtPhotoFilename","localStorage","setItem","JSON","stringify","handleDelete","filter","loadShirtPhotos","handlePayment","guestName","guestEmail","guestAddress","guestPhone","errors","trim","test","Object","keys","length","console","log","redirectToPaypalButton","handleGuest","submitGuestDetail","haveEnoughData","user","isGuest","accessLevel","componentDidMount","cartLocalStorage","parse","getItem","userEmail","get","then","res","data","catch","err","error","location","forEach","photo","filename","document","getElementById","_id","src","image","calculateTotalPrice","map","toFixed","getIdAndQuantity","items","cartItem","shirtID","render","e","target","Math","max","email","phone","address","pathname","from","undefined"],"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","sourcesContent":["// import React, { Component } from \"react\"\n// import Form from \"react-bootstrap/Form\"\n\n// import axios from \"axios\"\n\n// export default class ShoppingCart extends Component {\n//     constructor(props){\n//         this.state = {\n//             items: [], \n//             totalPrice: 0 \n//         };\n//     }\n\n//     addItemToCart = (item) => {\n//         const updatedItems = [...this.state.items, item];\n//         const totalPrice = this.state.totalPrice + (item.price * item.quantity);\n//         this.setState({ items: updatedItems, totalPrice });\n//     };\n\n//     render() {\n//         const { items, totalPrice } = this.state;\n//         const { itemsInCart } = this.props.location.state;\n\n//         return (\n//             <div>\n//                 <h2>Shopping Cart</h2>\n//                 <ul>\n//                     {items.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul>\n//                 <p>Total Price: ${totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n\n\n\n\n\n// import React, { Component } from \"react\";\n// import Form from \"react-bootstrap/Form\"\n// import NavigationBar from \"./NavigationBar\"\n// import { SERVER_HOST } from \"../config/global_constants\"\n\n// import axios from \"axios\"\n\n// export default class ShoppingCart extends Component {\n//     constructor(props) {\n//         super(props)\n\n//         this.state = {\n//             // userId:\"\",\n//             name: \"\",\n//             size: \"\",\n//             price: \"\",\n//             quantity: \"\",\n//             shirtPhotoFilename: null,\n//             // redirectToDisplayAllTShirtInCart: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\n//             wasSubmittedAtLeastOnce: false,\n//             cart:[],\n//             totalPrice:0\n//         }\n//     }\n//     componentDidMount() {\n//         // const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//         axios.get(`${SERVER_HOST}/cart/`)\n//         .then(res => \n//         { \n//             this.setState({cart: res.data})                                         \n//         })\n//         .catch(err =>\n//         {\n//             // do nothing\n//         })\n\n\n//         axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}`, { headers: { \"authorization\": localStorage.token } })\n//         .then(res => {\n//             this.setState({\n//                 name: res.data.name,\n//                 // colour: res.data.colour,\n//                 size: res.data.size,\n//                 price: res.data.price,\n//                 quantity: res.data.quantity,\n//                 shirtPhotoFilename:res.data.shirtPhotoFilename\n//             })\n//         })\n//         .catch(err => {\n//             // do nothing\n//         })\n\n\n//         // Update cart state with itemsInCart\n//         // this.setState({ cart: itemsInCart });\n\n//         // Calculate total price\n//         let totalPrice = 0;\n//         // itemsInCart.forEach(item => {\n//         //     totalPrice += item.price * item.quantity;\n//         // });\n//         this.state.cart.forEach(item => {\n//             totalPrice += item.price * item.quantity;\n//         })\n\n//         // Update totalPrice state\n//         this.setState({ totalPrice: totalPrice });\n\n//         // Load shirt photos\n//         this.state.cart.forEach(cartItem => {\n//             cartItem.shirtPhotoFilename.forEach(photo => {\n//                 axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//                     .then(res => {\n//                         // Update shirt photo in DOM\n//                         document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n//                     })\n//                     .catch(err => {\n//                         // Handle error\n//                     });\n//             });\n//         });\n//     }\n\n//     // componentDidMount(){\n//     //     const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//     //     this.setState({ cart: itemsInCart });\n//     //     let totalPrice = 0;\n//     //     itemsInCart.forEach(item => {\n//     //         totalPrice += item.price * item.quantity;\n//     //     });\n//     //     this.setState({ totalPrice: totalPrice });\n//     //     this.state.cart.shirtPhotoFilename.map(photo => {\n//     //         return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//     //             .then(res => {\n//     //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n//     //             })\n//     //             .catch(err => {\n//     //                 // do nothing\n//     //             })\n//     //     })\n//         // let formData = new FormData()\n//         // formData.append(\"userId\", this.state.stock)\n//         // formData.append(\"name\", this.state.name)\n//         // // formData.append(\"colour\", this.state.colour)\n//         // formData.append(\"size\", this.state.size)\n//         // formData.append(\"price\", this.state.price)\n//         // formData.append(\"quantity\", this.state.quantity)\n\n\n//         // if (this.state.cart.shirtPhotoFilename) {\n//         //     for (let i = 0; i < this.state.cart.shirtPhotoFilename.length; i++) {\n//         //         formData.append(\"cartPhotos\", this.state.cart.shirtPhotoFilename[i])\n//         //     }\n//         // }\n\n//         // axios.post(`${SERVER_HOST}/cart`, formData, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\n//         //     .then(res => {\n//         //         this.setState({ redirectToDisplayAllTShirtInCart: true })\n//         //     })\n//         //     .catch(err => {\n//         //         this.setState({ wasSubmittedAtLeastOnce: true })\n//         //     })\n//     //}\n//     render() {\n// console.log(this.state.cart)\n//         return (\n//             <div>\n//                 <NavigationBar />\n//                 <h2>Shopping Cart</h2>\n//                 {/* <div>\n//                     {this.state.cart.shirtPhotoFilename === null ? null : <div className=\"shirtPhotos\">{this.state.cart.shirtPhotoFilename.map(photo => <img key={photo._id} id={photo._id} alt=\"\" />)}</div>}\n//                 </div> */}\n//                 {/* <ul>\n//                     {this.state.cart.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: €{item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul> */}\n//                 <p>Total Price: €{this.state.totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n\nimport React, { Component } from \"react\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\nimport axios from \"axios\";\nimport BuyShirt from \"./BuyShirt\";\nimport {Link} from \"react-router-dom\"\n\n\nexport default class ShoppingCart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // name:\"\",\n            // price:\"\",\n            // quantity:\"\",\n            // size:\"\",\n            cart: [],\n            user:{},\n            guestName: \"\",\n            guestEmail: \"\",\n            guestAddress: \"\",\n            guestPhone: \"\",\n            isGuest: localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\n            redirectToPaypalButton: false,\n            // redirectToPaypalButton: true,\n            haveEnoughData:false\n            // totalPrice: 0\n        };\n    }\n\n    componentDidMount() {\n        // Fetch cart data from the server\n        const cartLocalStorage = JSON.parse(localStorage.getItem(\"itemsInCart\") || \"[]\");\n\n        // console.log(\"itemsInCart: \",localStorage.getItem(\"itemsInCart\").forEach(item=>{item.shirtPhotoFilename}))\n\n        this.setState({ cart: cartLocalStorage }, () => {\n            // Load shirt photos after updating state\n            this.loadShirtPhotos();\n        });\n\n\n        let userEmail = JSON.parse(localStorage.getItem(\"userEmail\") || null);\n\n        axios.get(`${SERVER_HOST}/users/email?email=${userEmail}`)\n            .then(res => {\n                this.setState({ user: res.data});\n            })\n            .catch(err => {\n                console.error(\"Error fetching user data:\", err);\n            });\n\n            const { state } = this.props.location;\n            if (state && state.haveEnoughData === true) {\n                this.setState({haveEnoughData:true})\n            }\n\n        // this.props.shirt.shirtPhotoFilename.map(photo => {\n        //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n        //         .then(res => {\n        //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n        //         })\n        //         .catch(err => {\n        //             // do nothing\n        //         })\n        // })\n\n        // this.state.cart.map(item=>{item.shirtPhotoFilename.map(photo => {\n        //     return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n        //         .then(res => {\n        //             document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n        //         })\n        //         .catch(err => {\n        //             // do nothing\n        //         })\n        // })})\n\n        // this.setState({ cart: cartLocalStorage }, () => {\n        //     // Calculate total price after updating state\n        //     this.calculateTotalPrice();\n        // });\n\n        // console.log(this.state.cart[0])\n        //         let totalPrice = 0;\n        //         this.state.cart.map(item => {\n        //             console.log(item)\n        //                         totalPrice += item.price * item.quantity;\n        //                     });\n        //                     // Update totalPrice state\n        //                     this.setState({ totalPrice: totalPrice });\n        // axios.get(`${SERVER_HOST}/cart`, { headers: { \"authorization\": localStorage.token } })\n        //     .then(res => {\n        //         // Update state with fetched cart data\n        //         this.setState({ cart: res.data }, () => {\n        //             // Calculate total price after updating state\n        //             this.calculateTotalPrice();\n        //             // Load shirt photos after updating state\n        //             // this.loadShirtPhotos();\n        //         });\n        //     })\n        //     .catch(err => {\n        //         // Handle error\n        //         console.error(\"Error fetching cart data:\", err);\n        //     });\n    }\n    // componentDidUpdate(){\n    //     if (this.state.cart !== undefined) {\n    //         const groupedItems = this.state.cart.reduce((groups, item) => {\n    //             const group = groups.find(g => g.name === item.name);\n    //             if (group) {\n    //                 group.quantity += item.quantity;\n    //                 group.totalPrice += item.price * item.quantity;\n    //             } else {\n    //                 groups.push({\n    //                     name: item.name,\n    //                     size: item.size,\n    //                     quantity: item.quantity,\n    //                     price: item.price,\n    //                     totalPrice: item.price * item.quantity\n    //                 });\n    //             }\n    //             return groups;\n    //         }, []);\n    //         localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems));\n    //     }\n    // }\n    loadShirtPhotos() {\n        // Loop through each cart item and load its shirt photos\n        this.state.cart.forEach(item => {\n            item.shirtPhotoFilename.forEach(photo => {\n                axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n                    .then(res => {\n                        // Update shirt photo in DOM\n                        document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n                    })\n                    .catch(err => {\n                        // Handle error\n                        console.error(\"Error loading shirt photo:\", err);\n                    });\n            });\n        });\n    }\n    calculateTotalPrice() {\n        let totalPrice = 0;\n        // Calculate total price based on cart items\n        // this.state.cart.forEach(item => {\n        //     const carItem=item.cartItems[0];\n        //     totalPrice += carItem.price * carItem.quantity;\n        // });\n        // // Update totalPrice state\n        // this.setState({ totalPrice: totalPrice });\n        this.state.cart.map(item => {\n            totalPrice += item.price * item.quantity;\n        });\n        // Update totalPrice state\n        // this.setState({ totalPrice: totalPrice });\n        return totalPrice.toFixed(2);\n    }\n    getIdAndQuantity() {\n        let items = []\n        this.state.cart.map(cartItem => {\n            items.push({ shirtID: cartItem.shirtId, quantity: cartItem.quantity })\n        });\n        return items;\n\n    }\n    handleChange = (index, field, value) => {\n        const updatedCart = [...this.state.cart];\n        updatedCart[index][field] = value;\n        this.setState({ cart: updatedCart });\n\n        // localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\n        const groupedItems = this.state.cart.reduce((groups, item) => {\n            const group = groups.find(g => g.name === item.name);\n            if (group) {\n                group.quantity += item.quantity;\n                group.totalPrice += item.price * item.quantity;\n            } else {\n                groups.push({\n                    shirtId: item.shirtId,\n                    name: item.name,\n                    size: item.size,\n                    quantity: item.quantity,\n                    price: item.price,\n                    totalPrice: item.price * item.quantity,\n                    shirtPhotoFilename: item.shirtPhotoFilename,\n                    shirtPhotoFilename: item.shirtPhotoFilename\n                });\n            }\n            return groups;\n        }, []);\n        this.setState({ cart: groupedItems })\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(groupedItems));\n        // this.loadShirtPhotos();\n    };\n\n    handleDelete = (name, size) => {\n        const updatedCart = this.state.cart.filter(item => !(item.name === name && item.size === size));\n        this.setState({ cart: updatedCart });\n        localStorage.setItem(\"itemsInCart\", JSON.stringify(updatedCart));\n        this.loadShirtPhotos();\n    };\n    handlePayment = () => {\n        // Check if all guest details are provided\n        const { guestName, guestEmail, guestAddress, guestPhone } = this.state;\n        const errors = {};\n        if (!guestName.trim()) {\n            errors.guestName = \"Name is required\";\n        }\n        if (!guestEmail.trim()) {\n            errors.guestEmail = \"Email is required\";\n        } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\n            errors.guestEmail = \"Email is invalid\";\n        }\n        if (!guestAddress.trim()) {\n            errors.guestAddress = \"Address is required\";\n        }\n        if (!guestPhone.trim()) {\n            errors.guestPhone = \"Phone number is required\";\n        } else if (!/^\\d{10}$/.test(guestPhone)) {\n            errors.guestPhone = \"Phone number must be 10 digits\";\n        }\n        // if (Object.keys(errors).length === 0) {\n        // if (guestName && guestEmail && guestAddress && guestPhone {\n        if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\n            // Proceed with payment\n            console.log(\"Guest details provided. Proceeding with payment...\");\n            // Call your payment function or component here\n            this.setState({ redirectToPaypalButton: true })\n        } else {\n            // Display error message or handle accordingly\n            console.log(\"Please provide all guest details before proceeding with payment.\");\n        }\n    };\n    handlePayment = () => {\n        // Check if all guest details are provided\n        const { guestName, guestEmail, guestAddress, guestPhone } = this.state;\n        const errors = {};\n        if (!guestName.trim()) {\n            errors.guestName = \"Name is required\";\n        }\n        if (!guestEmail.trim()) {\n            errors.guestEmail = \"Email is required\";\n        } else if (!/\\S+@\\S+\\.\\S+/.test(guestEmail)) {\n            errors.guestEmail = \"Email is invalid\";\n        }\n        if (!guestAddress.trim()) {\n            errors.guestAddress = \"Address is required\";\n        }\n        if (!guestPhone.trim()) {\n            errors.guestPhone = \"Phone number is required\";\n        } else if (!/^\\d{10}$/.test(guestPhone)) {\n            errors.guestPhone = \"Phone number must be 10 digits\";\n        }\n        // if (Object.keys(errors).length === 0) {\n        // if (guestName && guestEmail && guestAddress && guestPhone {\n        if (guestName && guestEmail && guestAddress && guestPhone && Object.keys(errors).length === 0) {\n            // Proceed with payment\n            console.log(\"Guest details provided. Proceeding with payment...\");\n            // Call your payment function or component here\n            this.setState({ redirectToPaypalButton: true })\n        } else {\n            // Display error message or handle accordingly\n            console.log(\"Please provide all guest details before proceeding with payment.\");\n        }\n    };\n\n    // loadShirtPhotos() {\n    //     // Loop through each cart item and load its shirt photos\n\n    //     this.state.cart.forEach(item => {\n    //         item.cartItems[0].shirtPhotoFilename.forEach(photo => {\n    //             axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n    //                 .then(res => {\n    //                     // Update shirt photo in DOM\n    //                     document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n    //                 })\n    //                 .catch(err => {\n    //                     // Handle error\n    //                     console.error(\"Error loading shirt photo:\", err);\n    //                 });\n    //         });\n    //     });\n    // }\n    handleGuest = (field, value) => {\n        this.setState({ [field]: value });\n    };\n    submitGuestDetail=()=>{\n        if(this.state.guestName&&this.state.guestEmail&&this.state.guestAddress&&this.state.guestEmail){\n            this.setState({haveEnoughData:true})\n        }\n    }\n\n    render() {\n        console.log(this.state.user)\n        // console.log(this.state.cart[0])\n        // {this.state.cart !== undefined ? this.calculateTotalPrice() : null}\n\n        // console.log(this.state.cart.map((item,index) => (item.cartItems[0].name)));\n        const groupedItems = this.state.cart.reduce((groups, item) => {\n            const group = groups.find(g => g.name === item.name);\n            if (group) {\n                group.quantity += item.quantity;\n                group.totalPrice += item.price * item.quantity;\n            } else {\n                groups.push({\n                    shirtId: item.shirtId,\n                    name: item.name,\n                    size: item.size,\n                    quantity: item.quantity,\n                    price: item.price,\n                    totalPrice: item.price * item.quantity,\n                    shirtPhotoFilename: item.shirtPhotoFilename,\n                    shirtPhotoFilename: item.shirtPhotoFilename\n                });\n            }\n            return groups;\n        }, []);\n        // console.log(this.state.cart.map(item => item.shirtPhotoFilename[0]))\n\n        // this.state.cart.map(item =>\n        //     item.shirtPhotoFilename[0].forEach(photo => { // Use forEach to iterate over each object\n        //         axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n        //             .then(res => {\n        //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n        //             })\n        //             .catch(err => {\n        //                 // Handle error\n        //                 console.error(\"Error loading shirt photo:\", err);\n        //             });\n        //     })\n        // );\n\n        return (\n            <div>\n                <NavigationBar />\n                <h2 className=\"shoppingcarth2\">Shopping Cart</h2>\n                <div className=\"cart-container\">\n                    {this.state.cart.map((item, index) => (\n                        <div key={index} className=\"each-item-cart\">\n                            <div className=\"photoanddetailsSC\">\n                                {/* display shirt photo */}\n                                {item.shirtPhotoFilename.map(photo => (\n                                    <img key={photo._id} id={photo._id} alt=\"\" />\n                                ))}\n                                <div className=\"detailsShoppingCart\">\n                                    {/* <img src={`${SERVER_HOST}/shirts/photo/${item.shirtPhotoFilename}`} alt=\"Shirt\" style={{ width: '100px', height: '100px' }} /> */}\n                                    {/* <img src={`${SERVER_HOST}/shirts/photo/${item.shirtPhotoFilename}`} alt=\"Shirt\" /> */}\n                                    {/* {console.log(\"shirtPhotoFilename: \", item.shirtPhotoFilename)} */}\n                                    <h3>{item.name} </h3>\n                                    <select\n                                        value={item.size}\n                                        onChange={e => this.handleChange(index, 'size', e.target.value)}\n                                    >\n                                        <option value=\"XS\">XS</option>\n                                        <option value=\"S\">S</option>\n                                        <option value=\"M\">M</option>\n                                        <option value=\"L\">L</option>\n                                        <option value=\"XL\">XL</option>\n                                    </select>\n                                    {/* <span>Quantity:</span> */}\n\n                                    <div>€{item.price}</div>\n\n                                    <div className=\"buttonDivShoppingCart\">\n                                        <button onClick={() => this.handleChange(index, 'quantity', Math.max(1, item.quantity - 1))}>-</button>\n                                        <span>{item.quantity}</span>\n                                        <button onClick={() => this.handleChange(index, 'quantity', item.quantity + 1)}>+</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"shoppingcartdeletebutton\">\n                                <button onClick={() => this.handleDelete(item.name, item.size)}>Delete</button>\n                            </div>\n\n                        </div>\n\n                    ))}\n                    {this.state.isGuest ?\n                        <div className=\"guest-details\">\n                            <h3>Guest Details</h3>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={this.state.guestName}\n                                onChange={e => this.handleChange('guestName', e.target.value)}\n                                required //required\n                            />\n                            <input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                value={this.state.guestEmail}\n                                onChange={e => this.handleChange('guestEmail', e.target.value)}\n                                required\n                            />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Address\"\n                                value={this.state.guestAddress}\n                                onChange={e => this.handleChange('guestAddress', e.target.value)}\n                                required\n                            />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Phone\"\n                                value={this.state.guestPhone}\n                                onChange={e => this.handleChange('guestPhone', e.target.value)}\n                                required\n                            />\n                            <button onClick={this.submitGuestDetail}>Submit</button>\n                 </div>\n                        : null}\n\n\n{this.state.isGuest?(this.state.haveEnoughData)?<BuyShirt customerEmail={this.state.guestEmail} customerName={this.state.guestName} address={this.state.guestAddress} phone={this.state.guestPhone} items={this.getIdAndQuantity()} price={this.calculateTotalPrice()}/>\n:<h6>You have to fill in personal detail</h6>:((this.state.user.name&&this.state.user.email&&this.state.user.phone&&this.state.user.address)|| this.state.haveEnoughData)?<BuyShirt customerEmail={this.state.user.email} customerName={this.state.user.name} address={this.state.user.address} phone={this.state.user.phone} items={this.getIdAndQuantity()} price={this.calculateTotalPrice()}/>\n:<Link className=\"green-button\" to={{pathname: \"/Dashboard\", state: { from: \"cart\" }}}>Please finish your profile</Link>}\n\n{/* {this.state.haveEnoughData?\n{/* paypalbutton */}\n                    {/* <BuyShirt customerEmail={this.state.guestEmail} customerName={this.state.guestName} address={this.state.guestAddress} phone={this.state.guestPhone} items={this.getIdAndQuantity()} price={this.calculateTotalPrice()} /> */}\n                    <div className=\"totalPriceShoppingCart\">\n                        {this.state.cart !== undefined ? <p>Total Price: ${this.calculateTotalPrice()}</p> : null}\n                    </div>\n                    <button onClick={this.handlePayment}>Proceed to Payment</button>\n                    {this.state.redirectToPaypalButton ? <BuyShirt customerEmail={this.state.guestEmail} customerName={this.state.guestName} address={this.state.guestAddress} phone={this.state.guestPhone} items={this.getIdAndQuantity()} price={this.calculateTotalPrice()} /> : null}\n:null\n\n                    \n                </div>\n\n                {/* <p>Total Price: €{this.state.totalPrice}</p> */}\n\n\n            </div>\n        );\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}