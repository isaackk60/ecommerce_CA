{"ast":null,"code":"// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/Tshirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/shirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/BuyShirt.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n\n\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n    \n    \n    \n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n    \n    \n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/Tshirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n \n        \n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n    \n    \n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n    \n\n                \n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\n\n\n// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import PayPalMessage from \"./PayPalMessage\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\n\n\n// export default class BuyShirt extends Component\n// {\n//     constructor(props)\n//     {\n//         super(props)\n\n//         this.state = {redirectToPayPalMessage:false,\n//                       payPalMessageType:null,\n//                       payPalOrderID:null}\n//     }\n    \n    \n    \n//     createOrder = (data, actions) => \n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n    \n    \n//     onApprove = paymentData =>\n//     {      \n//         axios.post(`${SERVER_HOST}/shirtsales/${paymentData.orderID}/${this.props.shirtID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//         .then(res => \n//         {                   \n//             this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n//                            payPalOrderID:paymentData.orderID, \n//                            redirectToPayPalMessage:true}) \n//         })\n//         .catch(errorData =>\n//         {           \n//             this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                            redirectToPayPalMessage:true}) \n//         })\n//     }\n \n        \n//     onError = errorData => \n//     {\n//         this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n//                        redirectToPayPalMessage:true})         \n//     }\n    \n    \n//     onCancel = cancelData => \n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n//                        redirectToPayPalMessage:true})       \n//     }\n    \n\n                \n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \n            \n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//     )}\n// }\n"]},"metadata":{},"sourceType":"module"}