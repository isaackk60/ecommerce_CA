{"ast":null,"code":"var _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let formData = new FormData();\n\n      if (this.state.selectedFile) {\n        formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name);\n      }\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/register/\").concat(this.state.name, \"/\").concat(this.state.email, \"/\").concat(this.state.password), formData, {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        localStorage.name = res.data.name;\n        localStorage.accessLevel = res.data.accessLevel;\n        localStorage.profilePhoto = res.data.profilePhoto;\n        localStorage.token = res.data.token;\n        this.setState({\n          isRegistered: true\n        });\n      }).catch(err => {\n        this.setState({\n          wasSubmittedAtLeastOnce: true\n        });\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      selectedFile: null,\n      isRegistered: false,\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"main\", {\n      className: \"login_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outside-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(\"div\", {\n      className: \"loginHeaderContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"anotherLoginHeader\",\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"p\", {\n      className: \"loginHeaderLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"|\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Sign Up\")), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      autoComplete: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(LinkInClass, {\n      value: \"Register New User\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/Register.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","preventDefault","formData","FormData","state","append","post","email","password","headers","then","res","localStorage","data","accessLevel","profilePhoto","token","isRegistered","catch","err","wasSubmittedAtLeastOnce","confirmPassword","render","errorMessage","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Register extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\", \n            selectedFile:null,\n            isRegistered:false,\n            wasSubmittedAtLeastOnce:false\n        } \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n\n    handleFileChange = (e) => \n    {\n        this.setState({selectedFile: e.target.files[0]})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        let formData = new FormData()  \n        if(this.state.selectedFile)\n        {\n            formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name)\n        }    \n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {headers: {\"Content-type\": \"multipart/form-data\"}})\n        .then(res => \n        {     \n            localStorage.name = res.data.name\n            localStorage.accessLevel = res.data.accessLevel\n            localStorage.profilePhoto = res.data.profilePhoto                    \n            localStorage.token = res.data.token\n                    \n            this.setState({isRegistered:true})               \n        })   \n        .catch(err =>\n        {\n            this.setState({wasSubmittedAtLeastOnce: true})            \n        })\n    }\n\n\n    render() \n    {     \n        let errorMessage = \"\";\n        if(this.state.wasSubmittedAtLeastOnce)\n        {\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\n        }          \n    \n        return (\n            <main className=\"login_main\">\n            <div className=\"outside-form-container\">\n        <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n       \n            {this.state.isRegistered ? <Redirect to=\"/main\"/> : null} \n            {errorMessage}\n            <div className=\"loginHeaderContainer\">\n                        <Link className=\"anotherLoginHeader\" to={\"/Login\"}>Login</Link>\n                        <p className=\"loginHeaderLink\">|</p>\n                        <h2>Sign Up</h2>\n                    </div>\n       \n            <input  \n                name = \"name\"              \n                type = \"text\"\n                placeholder = \"Name\"\n                autoComplete=\"name\"\n                value = {this.state.name}\n                onChange = {this.handleChange}\n                ref = {(input) => { this.inputToFocus = input }} \n            /><br/>           \n\n        <input  \n                name = \"email\"              \n                type = \"email\"\n                placeholder = \"Email\"\n                autoComplete=\"email\"\n                value = {this.state.email}\n                onChange = {this.handleChange}\n            /><br/>              \n\n        <input  \n                name = \"password\"           \n                type = \"password\"\n                placeholder = \"Password\"\n                autoComplete=\"password\"\n                title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                value = {this.state.password}\n                onChange = {this.handleChange}\n            /><br/>           \n\n            <input          \n                name = \"confirmPassword\"    \n                type = \"password\"\n                placeholder = \"Confirm password\"\n                autoComplete=\"confirmPassword\"\n                value = {this.state.confirmPassword}\n                onChange = {this.handleChange}\n            /><br/>\n            \n            <input            \n                type = \"file\"                    \n                onChange = {this.handleFileChange}\n            /><br/><br/>\n            \n            <span>\n            <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\n            <Link className=\"red-button\" to={\"/main\"}>Cancel</Link>   \n            </span>\n        </form>\n        </div>\n        </main>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}