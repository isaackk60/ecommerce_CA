{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\ResetDatabase.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class ResetDatabase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.resetUsersModel = () => {\n      axios.post(\"\".concat(SERVER_HOST, \"/users/reset_user_collection\")).then(res => {\n        console.log(\"User collection reset\");\n        localStorage.clear();\n        this.setState({\n          isReset: true\n        });\n      }).catch(err => {// do nothing    \n      });\n    };\n\n    this.state = {\n      isReset: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.isReset ? React.createElement(Redirect, {\n      to: \"/Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\\"Reset User Database\\\" is only for testing purposes.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \"All code on the client-side and server-side relating to resetting the database should be removed from any development release\"), React.createElement(LinkInClass, {\n      value: \"Reset User Database\",\n      className: \"red-button\",\n      onClick: this.resetUsersModel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Reset the database and set up an administrator with:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \" * email \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"admin@admin.com\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \" * password \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"123!\\\"\\xA3qweQWE\")), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\ResetDatabase.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","SERVER_HOST","ResetDatabase","constructor","props","handleChange","e","setState","target","name","value","resetUsersModel","post","then","res","console","log","localStorage","clear","isReset","catch","err","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAGA,eAAe,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACjDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASHC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACH,KAXkB;;AAAA,SAcnBC,eAdmB,GAcD,MAAM;AACpBZ,MAAAA,KAAK,CAACa,IAAN,WAAcX,WAAd,mCACKY,IADL,CACUC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEAC,QAAAA,YAAY,CAACC,KAAb;AAEA,aAAKX,QAAL,CAAc;AAAEY,UAAAA,OAAO,EAAE;AAAX,SAAd;AACH,OAPL,EAQKC,KARL,CAQWC,GAAG,IAAI,CACV;AACH,OAVL;AAWH,KA1BkB;;AAGf,SAAKC,KAAL,GAAa;AACTH,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAwBDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,UAAU,EAAE,IAA7C;AAAmD,MAAA,EAAE,EAAC,yBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKD,KAAL,CAAWH,OAAX,GAAqB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAA+C,IAFpD,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,kIAJJ,EAKI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,qBAAnB;AAAyC,MAAA,SAAS,EAAC,YAAnD;AAAgE,MAAA,OAAO,EAAE,KAAKR,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,OAKsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALtG,EAK4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL5G,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvD,eAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAtE,EAAsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtG,kBAAwH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAxH,CANJ,EAQI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,EAAE,EAAE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADJ;AAYH;;AA5CgD","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Redirect, Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport LinkInClass from \"../components/LinkInClass\"\r\nimport { SERVER_HOST } from \"../config/global_constants\"\r\n\r\n\r\nexport default class ResetDatabase extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isReset: false\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n    resetUsersModel = () => {\r\n        axios.post(`${SERVER_HOST}/users/reset_user_collection`)\r\n            .then(res => {\r\n                console.log(\"User collection reset\")\r\n\r\n                localStorage.clear()\r\n\r\n                this.setState({ isReset: true })\r\n            })\r\n            .catch(err => {\r\n                // do nothing    \r\n            })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form-container\" noValidate={true} id=\"loginOrRegistrationForm\">\r\n\r\n                {this.state.isReset ? <Redirect to=\"/Main\" /> : null}\r\n\r\n                <p>\"Reset User Database\" is only for testing purposes.<br />All code on the client-side and server-side relating to resetting the database should be removed from any development release</p>\r\n                <LinkInClass value=\"Reset User Database\" className=\"red-button\" onClick={this.resetUsersModel} /> <br /><br />\r\n                <p>Reset the database and set up an administrator with:<br /> * email <strong>admin@admin.com</strong><br /> * password <strong>123!\"Â£qweQWE</strong></p>\r\n\r\n                <Link className=\"red-button\" to={\"/Main\"}>Cancel</Link>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}