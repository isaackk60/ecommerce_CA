{"ast":null,"code":"import _defineProperty from \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ViewPurchaseHistory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class ViewAllUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchChange = event => {\n      // Update search query state\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.handleSortByTotalPrice = () => {\n      this.setState({\n        sortFunction: \"totalPrice\"\n      });\n    };\n\n    this.handleSortByDefault = () => {\n      this.setState({\n        sortFunction: \"name\"\n      }); // Set the default sorting option\n    };\n\n    this.handleSizeFilterChange = event => {\n      // Update size filter state\n      this.setState({\n        sizeFilter: event.target.value\n      });\n    };\n\n    this.state = {\n      purchaseHistory: [],\n      eachItemsInOrder: [],\n      allOrders: [],\n      searchQuery: \"\",\n      sortFunction: \"name\",\n      sizeFilter: \"\"\n    };\n  } // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history and fetch shirt details\n  //                 this.state.purchaseHistory.forEach(itemsInArray => {\n  //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             // Update eachItemsInOrder state by appending new items\n  //                             this.setState(prevState => ({\n  //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n  //                             }));\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n  // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history\n  //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\n  //                     // Store each itemsInOrder array in a separate array\n  //                     let eachItemsInOrder = [];\n  //                     itemsInArray.items.forEach(item => {\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             eachItemsInOrder.push(updatedItem);\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                     // Push eachItemsInOrder array into allOrders array\n  //                     this.setState(prevState => ({\n  //                         allOrders: [\n  //                             ...prevState.allOrders,\n  //                             {\n  //                                 orderId: itemsInArray._id, // Store item._id into allOrders\n  //                                 eachItemsInOrder: eachItemsInOrder\n  //                             }\n  //                         ]\n  //                     }));\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n\n\n  componentDidMount() {\n    if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n      let userEmail; // const currentUrl = window.location.pathname;\n\n      if (localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER) {\n        userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n      } else if (localStorage.accessLevel == ACCESS_LEVEL_ADMIN) {\n        // if (currentUrl === \"/ViewPurchaseHistory\") {\n        //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n        // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\n        //     userEmail = this.props.match.params.email;\n        // }\n        userEmail = this.props.match.params.email;\n      }\n\n      axios.get(\"\".concat(SERVER_HOST, \"/sales/email?email=\").concat(userEmail)).then(res => {\n        // Update purchase history state\n        this.setState({\n          purchaseHistory: res.data\n        }, () => {\n          // Iterate over each purchase history item\n          this.state.purchaseHistory.forEach((itemsInArray, index) => {\n            let eachItemsInOrder = [];\n            let totalPrice = 0; // Initialize total price for the order\n\n            itemsInArray.items.forEach(item => {\n              // Fetch shirt details and calculate total price for each item\n              axios.get(\"\".concat(SERVER_HOST, \"/shirts/\").concat(item.shirtID), {\n                headers: {\n                  \"authorization\": localStorage.token\n                }\n              }).then(res => {\n                const updatedItem = _objectSpread({}, res.data, {\n                  quantity: item.quantity\n                });\n\n                eachItemsInOrder.push(updatedItem); // Check if all items are fetched\n\n                if (eachItemsInOrder.length === itemsInArray.items.length) {\n                  // Add the price of the item to the total price\n                  eachItemsInOrder.map(item => totalPrice += item.price * item.quantity); // Update state after all items are fetched\n\n                  this.setState(prevState => ({\n                    allOrders: [...prevState.allOrders, {\n                      orderId: itemsInArray._id,\n                      eachItemsInOrder: eachItemsInOrder,\n                      totalPrice: totalPrice\n                    }]\n                  }), () => {\n                    // Call loadShirtPhotos() after updating state\n                    this.loadShirtPhotos();\n                  });\n                }\n              }).catch(err => {\n                console.error(\"Error fetching shirt data:\", err);\n              });\n            });\n          });\n        });\n      }).catch(err => {\n        console.error(\"Error fetching user data:\", err);\n      });\n    }\n  }\n\n  loadShirtPhotos() {\n    this.state.allOrders.forEach(order => {\n      order.eachItemsInOrder.forEach(item => {\n        item.shirtPhotoFilename.forEach(photo => {\n          axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n            // Update shirt photo in DOM\n            const elements = document.getElementsByClassName(photo._id);\n            Array.from(elements).forEach(element => {\n              element.src = \"data:;base64,\".concat(res.data.image);\n            });\n          }).catch(err => {\n            // Handle error\n            console.error(\"Error loading shirt photo:\", err);\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          allOrders = _this$state.allOrders,\n          searchQuery = _this$state.searchQuery,\n          sortFunction = _this$state.sortFunction,\n          sizeFilter = _this$state.sizeFilter;\n    const filteredOrders = allOrders.filter(order => order.eachItemsInOrder.some(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())));\n\n    if (sizeFilter !== \"\") {\n      filteredOrders = filteredOrders.filter(order => order.eachItemsInOrder.some(item => item.size.toLowerCase() === sizeFilter.toLowerCase()));\n    }\n\n    let sortedOrders = [...filteredOrders];\n\n    if (sortFunction === \"totalPrice\") {\n      sortedOrders.sort((a, b) => a.totalPrice - b.totalPrice);\n    } else if (sortFunction === \"name\") {\n      sortedOrders = filteredOrders;\n    }\n\n    return React.createElement(React.Fragment, null, localStorage.accessLevel > ACCESS_LEVEL_GUEST ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Ordered Items\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchQuery,\n      onChange: this.handleSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sortInViewPurchaseHistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: sortFunction,\n      onChange: e => {\n        if (e.target.value === 'totalPrice') {\n          this.handleSortByTotalPrice();\n        } else if (e.target.value === 'name') {\n          this.handleSortByDefault(); // Handle default sorting option\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Default Sorting\"), React.createElement(\"option\", {\n      value: \"totalPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Sort by Total Price\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Filter by Size:\"), React.createElement(\"select\", {\n      value: sizeFilter,\n      onChange: this.handleSizeFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"All Sizes\"), React.createElement(\"option\", {\n      value: \"XS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"XS\"), React.createElement(\"option\", {\n      value: \"S\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"S\"), React.createElement(\"option\", {\n      value: \"M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"option\", {\n      value: \"L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"L\"), React.createElement(\"option\", {\n      value: \"XL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"XL\"))), this.state.allOrders.length === 0 ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"The User didn't purchase anything yet\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, sortedOrders.map(order => React.createElement(\"div\", {\n      key: order.orderId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Order ID: \", order.orderId), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Total Price for this t-shirt\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, order.eachItemsInOrder.map(item => React.createElement(\"tr\", {\n      key: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, item.shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      className: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, item.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, item.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, item.price * item.quantity))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Total Of The Order Price:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, order.totalPrice)))))))) : React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/xhanhan/Desktop/CA Ecommerce/ecommerce_CA/client/src/components/ViewPurchaseHistory.js"],"names":["React","Component","Redirect","Link","axios","NavigationBar","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","ViewAllUsers","constructor","props","handleSearchChange","event","setState","searchQuery","target","value","handleSortByTotalPrice","sortFunction","handleSortByDefault","handleSizeFilterChange","sizeFilter","state","purchaseHistory","eachItemsInOrder","allOrders","componentDidMount","localStorage","accessLevel","userEmail","JSON","parse","getItem","match","params","email","get","then","res","data","forEach","itemsInArray","index","totalPrice","items","item","shirtID","headers","token","updatedItem","quantity","push","length","map","price","prevState","orderId","_id","loadShirtPhotos","catch","err","console","error","order","shirtPhotoFilename","photo","filename","elements","document","getElementsByClassName","Array","from","element","src","image","render","filteredOrders","filter","some","name","toLowerCase","includes","size","sortedOrders","sort","a","b","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Redirect, Link } from \"react-router-dom\"\n\nimport axios from \"axios\"\n\nimport NavigationBar from \"./NavigationBar\"\n\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\n\n\nexport default class ViewAllUsers extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            purchaseHistory: [],\n            eachItemsInOrder: [],\n            allOrders: [],\n            searchQuery: \"\",\n            sortFunction: \"name\",\n            sizeFilter: \"\"\n        }\n    }\n\n\n    // componentDidMount() {\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n    //         .then(res => {\n    //             // Update purchaseHistory state\n    //             this.setState({ purchaseHistory: res.data }, () => {\n    //                 // Iterate over each item in purchase history and fetch shirt details\n    //                 this.state.purchaseHistory.forEach(itemsInArray => {\n    //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n    //                         .then(res => {\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n    //                             // Update eachItemsInOrder state by appending new items\n    //                             this.setState(prevState => ({\n    //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n    //                             }));\n    //                         })\n    //                         .catch(err => {\n    //                             console.error(\"Error fetching shirt data:\", err);\n    //                         });\n    //                     });\n    //                 });\n    //             });\n    //         })\n    //         .catch(err => {\n    //             console.error(\"Error fetching user data:\", err);\n    //         });\n    //     }\n    // }\n    // componentDidMount() {\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n    //         .then(res => {\n    //             // Update purchaseHistory state\n    //             this.setState({ purchaseHistory: res.data }, () => {\n    //                 // Iterate over each item in purchase history\n    //                 this.state.purchaseHistory.forEach((itemsInArray, index) => {\n    //                     // Store each itemsInOrder array in a separate array\n    //                     let eachItemsInOrder = [];\n    //                     itemsInArray.items.forEach(item => {\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n    //                         .then(res => {\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n    //                             eachItemsInOrder.push(updatedItem);\n    //                         })\n    //                         .catch(err => {\n    //                             console.error(\"Error fetching shirt data:\", err);\n    //                         });\n    //                     });\n    //                     // Push eachItemsInOrder array into allOrders array\n    //                     this.setState(prevState => ({\n    //                         allOrders: [\n    //                             ...prevState.allOrders,\n    //                             {\n    //                                 orderId: itemsInArray._id, // Store item._id into allOrders\n    //                                 eachItemsInOrder: eachItemsInOrder\n    //                             }\n    //                         ]\n    //                     }));\n    //                 });\n    //             });\n    //         })\n    //         .catch(err => {\n    //             console.error(\"Error fetching user data:\", err);\n    //         });\n    //     }\n    // }\n\n\n    componentDidMount() {\n        if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n            let userEmail;\n            // const currentUrl = window.location.pathname;\n            if (localStorage.accessLevel == ACCESS_LEVEL_NORMAL_USER) {\n                userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n            } else if (localStorage.accessLevel == ACCESS_LEVEL_ADMIN) {\n                // if (currentUrl === \"/ViewPurchaseHistory\") {\n                //     userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n                // } else if (currentUrl.startsWith(\"/ViewPurchaseHistory/\")) {\n                //     userEmail = this.props.match.params.email;\n                // }\n                userEmail = this.props.match.params.email;\n            }\n\n            axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n                .then(res => {\n                    // Update purchase history state\n                    this.setState({ purchaseHistory: res.data }, () => {\n                        // Iterate over each purchase history item\n                        this.state.purchaseHistory.forEach((itemsInArray, index) => {\n                            let eachItemsInOrder = [];\n                            let totalPrice = 0; // Initialize total price for the order\n                            itemsInArray.items.forEach(item => {\n                                // Fetch shirt details and calculate total price for each item\n                                axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n                                    .then(res => {\n                                        const updatedItem = { ...res.data, quantity: item.quantity };\n                                        eachItemsInOrder.push(updatedItem);\n\n                                        // Check if all items are fetched\n                                        if (eachItemsInOrder.length === itemsInArray.items.length) {\n                                            // Add the price of the item to the total price\n                                            eachItemsInOrder.map(item => totalPrice += item.price * item.quantity)\n\n                                            // Update state after all items are fetched\n                                            this.setState(prevState => ({\n                                                allOrders: [\n                                                    ...prevState.allOrders,\n                                                    {\n                                                        orderId: itemsInArray._id,\n                                                        eachItemsInOrder: eachItemsInOrder,\n                                                        totalPrice: totalPrice\n                                                    }\n                                                ]\n                                            }), () => {\n                                                // Call loadShirtPhotos() after updating state\n                                                this.loadShirtPhotos();\n                                            });\n                                        }\n                                    })\n                                    .catch(err => {\n                                        console.error(\"Error fetching shirt data:\", err);\n                                    });\n                            });\n                        });\n                    });\n                })\n                .catch(err => {\n                    console.error(\"Error fetching user data:\", err);\n                });\n        }\n    }\n    loadShirtPhotos() {\n        this.state.allOrders.forEach(order => {\n            order.eachItemsInOrder.forEach(item => {\n                item.shirtPhotoFilename.forEach(photo => {\n                    axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n                        .then(res => {\n                            // Update shirt photo in DOM\n                            const elements = document.getElementsByClassName(photo._id);\n                            Array.from(elements).forEach(element => {\n                                element.src = `data:;base64,${res.data.image}`;\n                            });\n                        })\n                        .catch(err => {\n                            // Handle error\n                            console.error(\"Error loading shirt photo:\", err);\n                        });\n                });\n            });\n        });\n    }\n\n    handleSearchChange = (event) => {\n        // Update search query state\n        this.setState({ searchQuery: event.target.value });\n    };\n\n\n    handleSortByTotalPrice = () => {\n        this.setState({ sortFunction: \"totalPrice\" });\n    };\n\n\n    handleSortByDefault = () => {\n        this.setState({ sortFunction: \"name\" }); // Set the default sorting option\n    };\n\n    handleSizeFilterChange = (event) => {\n        // Update size filter state\n        this.setState({ sizeFilter: event.target.value });\n    };\n\nrender() {\n    const { allOrders, searchQuery, sortFunction,sizeFilter } = this.state;\n    \n    const filteredOrders = allOrders.filter(order =>\n        order.eachItemsInOrder.some(item => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    );\n\n    if (sizeFilter !== \"\") {\n        filteredOrders = filteredOrders.filter(order =>\n            order.eachItemsInOrder.some(item => item.size.toLowerCase() === sizeFilter.toLowerCase())\n        );\n    }\n\n    let sortedOrders = [...filteredOrders];\n    if (sortFunction === \"totalPrice\") {\n        sortedOrders.sort((a, b) => a.totalPrice - b.totalPrice);\n    }else if (sortFunction === \"name\") {\n        sortedOrders = filteredOrders; \n    }\n\n    return (\n        <>\n            {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\n                <div>\n                    <NavigationBar />\n                    <h2>Ordered Items</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        value={searchQuery}\n                        onChange={this.handleSearchChange}\n                    />\n                    <div className=\"sortInViewPurchaseHistory\">\n                        <select value={sortFunction} onChange={(e) => {\n                            if (e.target.value === 'totalPrice') {\n                                this.handleSortByTotalPrice();\n                            }else if (e.target.value === 'name') {\n                                this.handleSortByDefault(); // Handle default sorting option\n                            }\n                        }}>\n                            <option value=\"name\">Default Sorting</option>\n                            <option value=\"totalPrice\">Sort by Total Price</option>\n                        </select>\n                    </div>\n\n                    <div>\n                    <h2>Filter by Size:</h2>\n                    <select value={sizeFilter} onChange={this.handleSizeFilterChange}>\n                        <option value=\"\">All Sizes</option>\n                        <option value=\"XS\">XS</option>\n                        <option value=\"S\">S</option>\n                        <option value=\"M\">M</option>\n                        <option value=\"L\">L</option>\n                        <option value=\"XL\">XL</option>\n                    </select>\n                </div>\n                    {this.state.allOrders.length === 0 ? <h4>The User didn't purchase anything yet</h4>\n\n                        :\n                        <div>\n                            {sortedOrders.map(order => (\n                                <div key={order.orderId}>\n                                    <h3>Order ID: {order.orderId}</h3>\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th>Name</th>\n                                                <th>Price</th>\n                                                <th>Size</th>\n                                                <th>Quantity</th>\n                                                <th>Total Price for this t-shirt</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {order.eachItemsInOrder.map(item => (\n                                                <tr key={item._id}>\n                                                    <td>{item.shirtPhotoFilename.map(photo => (\n                                                            <img key={photo._id} className={photo._id} alt=\"\" />\n                                                        ))}\n                                                        </td>\n                                                    <td>{item.name}</td>\n                                                    <td>{item.price}</td>\n                                                    <td>{item.size}</td>\n                                                    <td>{item.quantity}</td>\n                                                    <td>{item.price * item.quantity}</td>\n                                                </tr>\n                                            ))}\n                                            <tr>\n                                                <td>Total Of The Order Price:</td>\n                                                <td>{order.totalPrice}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            ))}\n                        </div>\n\n                    }\n                </div>\n            ) : (\n                <Redirect to={\"/main\"} />\n            )}\n        </>\n    );\n}\n}"]},"metadata":{},"sourceType":"module"}