{"ast":null,"code":"var _jsxFileName = \"C:\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\testShoppingCart.js\";\nimport React, { Component } from 'react';\n\nclass testShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = item => {\n      this.setState(prevState => ({\n        cart: [...prevState.cart, item]\n      }));\n    };\n\n    this.removeFromCart = index => {\n      this.setState(prevState => {\n        const newCart = [...prevState.cart];\n        newCart.splice(index, 1);\n        return {\n          cart: newCart\n        };\n      });\n    };\n\n    this.state = {\n      cart: JSON.parse(localStorage.getItem('cart')) || []\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('cart', JSON.stringify(this.state.cart));\n  }\n\n  render() {\n    const cart = this.state.cart;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, cart.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item.name, \" - $\", item.price, React.createElement(\"button\", {\n      onClick: () => this.removeFromCart(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Remove\")))));\n  }\n\n}\n\nexport default testShoppingCart;","map":{"version":3,"sources":["C:\\ecommerce_CA\\client\\src\\components\\testShoppingCart.js"],"names":["React","Component","testShoppingCart","constructor","props","addToCart","item","setState","prevState","cart","removeFromCart","index","newCart","splice","state","JSON","parse","localStorage","getItem","componentDidUpdate","setItem","stringify","render","map","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AACvCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,SAXmB,GAWNC,IAAD,IAAU;AACpB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,IAAI,EAAE,CAAC,GAAGD,SAAS,CAACC,IAAd,EAAoBH,IAApB;AADsB,OAAhB,CAAd;AAGD,KAfkB;;AAAA,SAiBnBI,cAjBmB,GAiBDC,KAAD,IAAW;AAC1B,WAAKJ,QAAL,CAAeC,SAAD,IAAe;AAC3B,cAAMI,OAAO,GAAG,CAAC,GAAGJ,SAAS,CAACC,IAAd,CAAhB;AACAG,QAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AACA,eAAO;AAAEF,UAAAA,IAAI,EAAEG;AAAR,SAAP;AACD,OAJD;AAKD,KAvBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAEM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C;AADvC,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,SAAL,CAAe,KAAKP,KAAL,CAAWL,IAA1B,CAA7B;AACD;;AAgBDa,EAAAA,MAAM,GAAG;AAAA,UACCb,IADD,GACU,KAAKK,KADf,CACCL,IADD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACc,GAAL,CAAS,CAACjB,IAAD,EAAOK,KAAP,KACR;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,IAAI,CAACkB,IADR,UACkBlB,IAAI,CAACmB,KADvB,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKf,cAAL,CAAoBC,KAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADD,CADH,CAFF,CADF;AAaD;;AA1CsC;;AA6CzC,eAAeT,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass testShoppingCart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cart: JSON.parse(localStorage.getItem('cart')) || [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n  }\r\n\r\n  addToCart = (item) => {\r\n    this.setState((prevState) => ({\r\n      cart: [...prevState.cart, item],\r\n    }));\r\n  };\r\n\r\n  removeFromCart = (index) => {\r\n    this.setState((prevState) => {\r\n      const newCart = [...prevState.cart];\r\n      newCart.splice(index, 1);\r\n      return { cart: newCart };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { cart } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Shopping Cart</h2>\r\n        <ul>\r\n          {cart.map((item, index) => (\r\n            <li key={index}>\r\n              {item.name} - ${item.price}\r\n              <button onClick={() => this.removeFromCart(index)}>Remove</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default testShoppingCart;\r\n"]},"metadata":{},"sourceType":"module"}