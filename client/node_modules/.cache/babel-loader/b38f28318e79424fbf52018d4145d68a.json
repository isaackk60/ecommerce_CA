{"ast":null,"code":"import _defineProperty from \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\ViewPurchaseHistory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavigationBar from \"./NavigationBar\";\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class ViewAllUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      purchaseHistory: [],\n      eachItemsInOrder: [],\n      allOrders: []\n    };\n  } // componentDidMount() {\n  //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n  //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n  //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\n  //         .then(res => {\n  //             // Update purchaseHistory state\n  //             this.setState({ purchaseHistory: res.data }, () => {\n  //                 // Iterate over each item in purchase history and fetch shirt details\n  //                 this.state.purchaseHistory.forEach(itemsInArray => {\n  //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\n  //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\n  //                         .then(res => {\n  //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\n  //                             // Update eachItemsInOrder state by appending new items\n  //                             this.setState(prevState => ({\n  //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\n  //                             }));\n  //                         })\n  //                         .catch(err => {\n  //                             console.error(\"Error fetching shirt data:\", err);\n  //                         });\n  //                     });\n  //                 });\n  //             });\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Error fetching user data:\", err);\n  //         });\n  //     }\n  // }\n\n\n  componentDidMount() {\n    if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\n      let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\n      axios.get(\"\".concat(SERVER_HOST, \"/sales/email?email=\").concat(userEmail)).then(res => {\n        // Update purchaseHistory state\n        this.setState({\n          purchaseHistory: res.data\n        }, () => {\n          // Iterate over each item in purchase history\n          this.state.purchaseHistory.forEach((itemsInArray, index) => {\n            // Store each itemsInOrder array in a separate array\n            let eachItemsInOrder = [];\n            itemsInArray.items.forEach(item => {\n              axios.get(\"\".concat(SERVER_HOST, \"/shirts/\").concat(item.shirtID), {\n                headers: {\n                  \"authorization\": localStorage.token\n                }\n              }).then(res => {\n                const updatedItem = _objectSpread({}, res.data, {\n                  quantity: item.quantity\n                }); // Add quantity property\n\n\n                eachItemsInOrder.push(updatedItem);\n              }).catch(err => {\n                console.error(\"Error fetching shirt data:\", err);\n              });\n            }); // Push eachItemsInOrder array into allOrders array\n\n            this.setState(prevState => ({\n              allOrders: [...prevState.allOrders, {\n                orderId: itemsInArray._id,\n                // Store item._id into allOrders\n                eachItemsInOrder: eachItemsInOrder\n              }]\n            }));\n          });\n        });\n      }).catch(err => {\n        console.error(\"Error fetching user data:\", err);\n      });\n    }\n  } // handleDelete = (userId) => {\n  //     axios.delete(`${SERVER_HOST}/users/${userId}`)\n  //         .then(res => {\n  //             // Update state after successful deletion\n  //             this.setState(prevState => ({\n  //                 users: prevState.users.filter(user => user._id !== userId)\n  //             }));\n  //         })\n  //         .catch(err => {\n  //             // Handle error\n  //             console.error(\"Error deleting user:\", err);\n  //         });\n  // };\n\n\n  render() {\n    console.log(this.state.allOrders);\n    return React.createElement(React.Fragment, null, localStorage.accessLevel > ACCESS_LEVEL_GUEST ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Ordered Items\"), this.state.allOrders.map(order => React.createElement(\"div\", {\n      key: order.orderId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Order ID: \", order.orderId), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Quantity\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, order.eachItemsInOrder, order.eachItemsInOrder.map(item => React.createElement(\"tr\", {\n      key: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, item.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, item.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, item.quantity)))))))) : React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\ecommerce_CA\\client\\src\\components\\ViewPurchaseHistory.js"],"names":["React","Component","Redirect","Link","axios","NavigationBar","ACCESS_LEVEL_GUEST","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","ViewAllUsers","constructor","props","state","purchaseHistory","eachItemsInOrder","allOrders","componentDidMount","localStorage","accessLevel","userEmail","JSON","parse","getItem","get","then","res","setState","data","forEach","itemsInArray","index","items","item","shirtID","headers","token","updatedItem","quantity","push","catch","err","console","error","prevState","orderId","_id","render","log","map","order","name","price","size"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Redirect, Link } from \"react-router-dom\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport NavigationBar from \"./NavigationBar\"\r\n\r\nimport { ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\"\r\n\r\n\r\nexport default class ViewAllUsers extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            purchaseHistory: [],\r\n        \r\n            eachItemsInOrder:[],\r\n            allOrders:[]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n    //         let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n    //         axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n    //         .then(res => {\r\n    //             // Update purchaseHistory state\r\n    //             this.setState({ purchaseHistory: res.data }, () => {\r\n    //                 // Iterate over each item in purchase history and fetch shirt details\r\n    //                 this.state.purchaseHistory.forEach(itemsInArray => {\r\n    //                     itemsInArray.items.forEach(item => { // Changed from map to forEach\r\n    //                         axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n    //                         .then(res => {\r\n    //                             const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\r\n    //                             // Update eachItemsInOrder state by appending new items\r\n    //                             this.setState(prevState => ({\r\n    //                                 eachItemsInOrder: [...prevState.eachItemsInOrder, updatedItem]\r\n    //                             }));\r\n    //                         })\r\n    //                         .catch(err => {\r\n    //                             console.error(\"Error fetching shirt data:\", err);\r\n    //                         });\r\n    //                     });\r\n    //                 });\r\n    //             });\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.error(\"Error fetching user data:\", err);\r\n    //         });\r\n    //     }\r\n    // }\r\n    componentDidMount() {\r\n        if (localStorage.accessLevel > ACCESS_LEVEL_GUEST) {\r\n            let userEmail = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n            axios.get(`${SERVER_HOST}/sales/email?email=${userEmail}`)\r\n            .then(res => {\r\n                // Update purchaseHistory state\r\n                this.setState({ purchaseHistory: res.data }, () => {\r\n                    // Iterate over each item in purchase history\r\n                    this.state.purchaseHistory.forEach((itemsInArray, index) => {\r\n                        // Store each itemsInOrder array in a separate array\r\n                        let eachItemsInOrder = [];\r\n                        itemsInArray.items.forEach(item => {\r\n                            axios.get(`${SERVER_HOST}/shirts/${item.shirtID}`, { headers: { \"authorization\": localStorage.token } })\r\n                            .then(res => {\r\n                                const updatedItem = { ...res.data, quantity: item.quantity }; // Add quantity property\r\n                                eachItemsInOrder.push(updatedItem);\r\n                            })\r\n                            .catch(err => {\r\n                                console.error(\"Error fetching shirt data:\", err);\r\n                            });\r\n                        });\r\n                        // Push eachItemsInOrder array into allOrders array\r\n                        this.setState(prevState => ({\r\n                            allOrders: [\r\n                                ...prevState.allOrders,\r\n                                {\r\n                                    orderId: itemsInArray._id, // Store item._id into allOrders\r\n                                    eachItemsInOrder: eachItemsInOrder\r\n                                }\r\n                            ]\r\n                        }));\r\n                    });\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching user data:\", err);\r\n            });\r\n        }\r\n    }\r\n    \r\n    \r\n    // handleDelete = (userId) => {\r\n    //     axios.delete(`${SERVER_HOST}/users/${userId}`)\r\n    //         .then(res => {\r\n    //             // Update state after successful deletion\r\n    //             this.setState(prevState => ({\r\n    //                 users: prevState.users.filter(user => user._id !== userId)\r\n    //             }));\r\n    //         })\r\n    //         .catch(err => {\r\n    //             // Handle error\r\n    //             console.error(\"Error deleting user:\", err);\r\n    //         });\r\n    // };\r\n\r\n\r\n    render() {\r\n    console.log(this.state.allOrders);\r\n    return (\r\n        <>\r\n            {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\r\n                <div>\r\n                    <NavigationBar />\r\n                    <h2>Ordered Items</h2>\r\n                    {this.state.allOrders.map(order => (\r\n                        <div key={order.orderId}>\r\n                            <h3>Order ID: {order.orderId}</h3>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Size</th>\r\n                                        <th>Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {order.eachItemsInOrder}\r\n                                    {order.eachItemsInOrder.map(item => (\r\n                                        <tr key={item._id}>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.price}</td>\r\n                                            <td>{item.size}</td>\r\n                                            <td>{item.quantity}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <Redirect to={\"/main\"} />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}