{"ast":null,"code":"var _jsxFileName = \"C:\\\\ecommerce_CA\\\\client\\\\src\\\\components\\\\ShoppingCart.js\";\n// import React, { Component } from \"react\"\n// import Form from \"react-bootstrap/Form\"\n// import axios from \"axios\"\n// export default class ShoppingCart extends Component {\n//     constructor(props){\n//         this.state = {\n//             items: [], \n//             totalPrice: 0 \n//         };\n//     }\n//     addItemToCart = (item) => {\n//         const updatedItems = [...this.state.items, item];\n//         const totalPrice = this.state.totalPrice + (item.price * item.quantity);\n//         this.setState({ items: updatedItems, totalPrice });\n//     };\n//     render() {\n//         const { items, totalPrice } = this.state;\n//         const { itemsInCart } = this.props.location.state;\n//         return (\n//             <div>\n//                 <h2>Shopping Cart</h2>\n//                 <ul>\n//                     {items.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul>\n//                 <p>Total Price: ${totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\n// import React, { Component } from \"react\";\n// import Form from \"react-bootstrap/Form\"\n// import NavigationBar from \"./NavigationBar\"\n// import { SERVER_HOST } from \"../config/global_constants\"\n// import axios from \"axios\"\n// export default class ShoppingCart extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             // userId:\"\",\n//             name: \"\",\n//             size: \"\",\n//             price: \"\",\n//             quantity: \"\",\n//             shirtPhotoFilename: null,\n//             // redirectToDisplayAllTShirtInCart: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\n//             wasSubmittedAtLeastOnce: false,\n//             cart:[],\n//             totalPrice:0\n//         }\n//     }\n//     componentDidMount() {\n//         // const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//         axios.get(`${SERVER_HOST}/cart/`)\n//         .then(res => \n//         { \n//             this.setState({cart: res.data})                                         \n//         })\n//         .catch(err =>\n//         {\n//             // do nothing\n//         })\n//         axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}`, { headers: { \"authorization\": localStorage.token } })\n//         .then(res => {\n//             this.setState({\n//                 name: res.data.name,\n//                 // colour: res.data.colour,\n//                 size: res.data.size,\n//                 price: res.data.price,\n//                 quantity: res.data.quantity,\n//                 shirtPhotoFilename:res.data.shirtPhotoFilename\n//             })\n//         })\n//         .catch(err => {\n//             // do nothing\n//         })\n//         // Update cart state with itemsInCart\n//         // this.setState({ cart: itemsInCart });\n//         // Calculate total price\n//         let totalPrice = 0;\n//         // itemsInCart.forEach(item => {\n//         //     totalPrice += item.price * item.quantity;\n//         // });\n//         this.state.cart.forEach(item => {\n//             totalPrice += item.price * item.quantity;\n//         })\n//         // Update totalPrice state\n//         this.setState({ totalPrice: totalPrice });\n//         // Load shirt photos\n//         this.state.cart.forEach(cartItem => {\n//             cartItem.shirtPhotoFilename.forEach(photo => {\n//                 axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//                     .then(res => {\n//                         // Update shirt photo in DOM\n//                         document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\n//                     })\n//                     .catch(err => {\n//                         // Handle error\n//                     });\n//             });\n//         });\n//     }\n//     // componentDidMount(){\n//     //     const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\n//     //     this.setState({ cart: itemsInCart });\n//     //     let totalPrice = 0;\n//     //     itemsInCart.forEach(item => {\n//     //         totalPrice += item.price * item.quantity;\n//     //     });\n//     //     this.setState({ totalPrice: totalPrice });\n//     //     this.state.cart.shirtPhotoFilename.map(photo => {\n//     //         return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\n//     //             .then(res => {\n//     //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\n//     //             })\n//     //             .catch(err => {\n//     //                 // do nothing\n//     //             })\n//     //     })\n//         // let formData = new FormData()\n//         // formData.append(\"userId\", this.state.stock)\n//         // formData.append(\"name\", this.state.name)\n//         // // formData.append(\"colour\", this.state.colour)\n//         // formData.append(\"size\", this.state.size)\n//         // formData.append(\"price\", this.state.price)\n//         // formData.append(\"quantity\", this.state.quantity)\n//         // if (this.state.cart.shirtPhotoFilename) {\n//         //     for (let i = 0; i < this.state.cart.shirtPhotoFilename.length; i++) {\n//         //         formData.append(\"cartPhotos\", this.state.cart.shirtPhotoFilename[i])\n//         //     }\n//         // }\n//         // axios.post(`${SERVER_HOST}/cart`, formData, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\n//         //     .then(res => {\n//         //         this.setState({ redirectToDisplayAllTShirtInCart: true })\n//         //     })\n//         //     .catch(err => {\n//         //         this.setState({ wasSubmittedAtLeastOnce: true })\n//         //     })\n//     //}\n//     render() {\n// console.log(this.state.cart)\n//         return (\n//             <div>\n//                 <NavigationBar />\n//                 <h2>Shopping Cart</h2>\n//                 {/* <div>\n//                     {this.state.cart.shirtPhotoFilename === null ? null : <div className=\"shirtPhotos\">{this.state.cart.shirtPhotoFilename.map(photo => <img key={photo._id} id={photo._id} alt=\"\" />)}</div>}\n//                 </div> */}\n//                 {/* <ul>\n//                     {this.state.cart.map((item, index) => (\n//                         <li key={index}>\n//                             {item.name} - Quantity: {item.quantity} - Price: €{item.price * item.quantity}\n//                         </li>\n//                     ))}\n//                 </ul> */}\n//                 <p>Total Price: €{this.state.totalPrice}</p>\n//             </div>\n//         );\n//     }\n// }\nimport React, { Component } from \"react\";\nimport NavigationBar from \"./NavigationBar\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport axios from \"axios\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      totalPrice: 0\n    };\n  }\n\n  componentDidMount() {\n    // Fetch cart data from the server\n    axios.get(\"\".concat(SERVER_HOST, \"/cart\"), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      // Update state with fetched cart data\n      this.setState({\n        cart: res.data\n      }, () => {\n        // Calculate total price after updating state\n        this.calculateTotalPrice(); // Load shirt photos after updating state\n        // this.loadShirtPhotos();\n      });\n    }).catch(err => {\n      // Handle error\n      console.error(\"Error fetching cart data:\", err);\n    });\n  }\n\n  calculateTotalPrice() {\n    let totalPrice = 0; // Calculate total price based on cart items\n\n    this.state.cart.forEach(item => {\n      const carItem = item.cartItems[0];\n      totalPrice += carItem.price * carItem.quantity;\n    }); // Update totalPrice state\n\n    this.setState({\n      totalPrice: totalPrice\n    });\n  }\n\n  loadShirtPhotos() {\n    // Loop through each cart item and load its shirt photos\n    this.state.cart.forEach(item => {\n      item.cartItems[0].shirtPhotoFilename.forEach(photo => {\n        axios.get(\"\".concat(SERVER_HOST, \"/shirts/photo/\").concat(photo.filename)).then(res => {\n          // Update shirt photo in DOM\n          document.getElementById(photo._id).src = \"data:;base64,\".concat(res.data.image);\n        }).catch(err => {\n          // Handle error\n          console.error(\"Error loading shirt photo:\", err);\n        });\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.cart.map((item, index) => item.cartItems[0].name));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, this.state.cart.map((item, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, item.cartItems[0].name, \" - Size: \", item.cartItems[0].size, \" - Quantity: \", item.cartItems[0].quantity, \" - Price: \\u20AC\", item.cartItems[0].price * item.cartItems[0].quantity, item.cartItems[0].shirtPhotoFilename.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      id: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Total Price: \\u20AC\", this.state.totalPrice));\n  }\n\n}","map":{"version":3,"sources":["C:\\ecommerce_CA\\client\\src\\components\\ShoppingCart.js"],"names":["React","Component","NavigationBar","SERVER_HOST","axios","ShoppingCart","constructor","props","state","cart","totalPrice","componentDidMount","get","headers","localStorage","token","then","res","setState","data","calculateTotalPrice","catch","err","console","error","forEach","item","carItem","cartItems","price","quantity","loadShirtPhotos","shirtPhotoFilename","photo","filename","document","getElementById","_id","src","image","render","log","map","index","name","size"],"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","sourcesContent":["// import React, { Component } from \"react\"\r\n// import Form from \"react-bootstrap/Form\"\r\n\r\n// import axios from \"axios\"\r\n\r\n// export default class ShoppingCart extends Component {\r\n//     constructor(props){\r\n//         this.state = {\r\n//             items: [], \r\n//             totalPrice: 0 \r\n//         };\r\n//     }\r\n\r\n//     addItemToCart = (item) => {\r\n//         const updatedItems = [...this.state.items, item];\r\n//         const totalPrice = this.state.totalPrice + (item.price * item.quantity);\r\n//         this.setState({ items: updatedItems, totalPrice });\r\n//     };\r\n\r\n//     render() {\r\n//         const { items, totalPrice } = this.state;\r\n//         const { itemsInCart } = this.props.location.state;\r\n\r\n//         return (\r\n//             <div>\r\n//                 <h2>Shopping Cart</h2>\r\n//                 <ul>\r\n//                     {items.map((item, index) => (\r\n//                         <li key={index}>\r\n//                             {item.name} - Quantity: {item.quantity} - Price: ${item.price * item.quantity}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//                 <p>Total Price: ${totalPrice}</p>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import Form from \"react-bootstrap/Form\"\r\n// import NavigationBar from \"./NavigationBar\"\r\n// import { SERVER_HOST } from \"../config/global_constants\"\r\n\r\n// import axios from \"axios\"\r\n\r\n// export default class ShoppingCart extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             // userId:\"\",\r\n//             name: \"\",\r\n//             size: \"\",\r\n//             price: \"\",\r\n//             quantity: \"\",\r\n//             shirtPhotoFilename: null,\r\n//             // redirectToDisplayAllTShirtInCart: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\r\n//             wasSubmittedAtLeastOnce: false,\r\n//             cart:[],\r\n//             totalPrice:0\r\n//         }\r\n//     }\r\n//     componentDidMount() {\r\n//         // const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\r\n//         axios.get(`${SERVER_HOST}/cart/`)\r\n//         .then(res => \r\n//         { \r\n//             this.setState({cart: res.data})                                         \r\n//         })\r\n//         .catch(err =>\r\n//         {\r\n//             // do nothing\r\n//         })\r\n\r\n\r\n//         axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}`, { headers: { \"authorization\": localStorage.token } })\r\n//         .then(res => {\r\n//             this.setState({\r\n//                 name: res.data.name,\r\n//                 // colour: res.data.colour,\r\n//                 size: res.data.size,\r\n//                 price: res.data.price,\r\n//                 quantity: res.data.quantity,\r\n//                 shirtPhotoFilename:res.data.shirtPhotoFilename\r\n//             })\r\n//         })\r\n//         .catch(err => {\r\n//             // do nothing\r\n//         })\r\n\r\n\r\n//         // Update cart state with itemsInCart\r\n//         // this.setState({ cart: itemsInCart });\r\n    \r\n//         // Calculate total price\r\n//         let totalPrice = 0;\r\n//         // itemsInCart.forEach(item => {\r\n//         //     totalPrice += item.price * item.quantity;\r\n//         // });\r\n//         this.state.cart.forEach(item => {\r\n//             totalPrice += item.price * item.quantity;\r\n//         })\r\n    \r\n//         // Update totalPrice state\r\n//         this.setState({ totalPrice: totalPrice });\r\n    \r\n//         // Load shirt photos\r\n//         this.state.cart.forEach(cartItem => {\r\n//             cartItem.shirtPhotoFilename.forEach(photo => {\r\n//                 axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n//                     .then(res => {\r\n//                         // Update shirt photo in DOM\r\n//                         document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\r\n//                     })\r\n//                     .catch(err => {\r\n//                         // Handle error\r\n//                     });\r\n//             });\r\n//         });\r\n//     }\r\n    \r\n//     // componentDidMount(){\r\n//     //     const { itemsInCart } = this.props.location.state || { itemsInCart: [] };\r\n//     //     this.setState({ cart: itemsInCart });\r\n//     //     let totalPrice = 0;\r\n//     //     itemsInCart.forEach(item => {\r\n//     //         totalPrice += item.price * item.quantity;\r\n//     //     });\r\n//     //     this.setState({ totalPrice: totalPrice });\r\n//     //     this.state.cart.shirtPhotoFilename.map(photo => {\r\n//     //         return axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n//     //             .then(res => {\r\n//     //                 document.getElementById(photo._id).src = `data:;base64,${res.data.image}`\r\n//     //             })\r\n//     //             .catch(err => {\r\n//     //                 // do nothing\r\n//     //             })\r\n//     //     })\r\n//         // let formData = new FormData()\r\n//         // formData.append(\"userId\", this.state.stock)\r\n//         // formData.append(\"name\", this.state.name)\r\n//         // // formData.append(\"colour\", this.state.colour)\r\n//         // formData.append(\"size\", this.state.size)\r\n//         // formData.append(\"price\", this.state.price)\r\n//         // formData.append(\"quantity\", this.state.quantity)\r\n        \r\n\r\n//         // if (this.state.cart.shirtPhotoFilename) {\r\n//         //     for (let i = 0; i < this.state.cart.shirtPhotoFilename.length; i++) {\r\n//         //         formData.append(\"cartPhotos\", this.state.cart.shirtPhotoFilename[i])\r\n//         //     }\r\n//         // }\r\n\r\n//         // axios.post(`${SERVER_HOST}/cart`, formData, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\r\n//         //     .then(res => {\r\n//         //         this.setState({ redirectToDisplayAllTShirtInCart: true })\r\n//         //     })\r\n//         //     .catch(err => {\r\n//         //         this.setState({ wasSubmittedAtLeastOnce: true })\r\n//         //     })\r\n//     //}\r\n//     render() {\r\n// console.log(this.state.cart)\r\n//         return (\r\n//             <div>\r\n//                 <NavigationBar />\r\n//                 <h2>Shopping Cart</h2>\r\n//                 {/* <div>\r\n//                     {this.state.cart.shirtPhotoFilename === null ? null : <div className=\"shirtPhotos\">{this.state.cart.shirtPhotoFilename.map(photo => <img key={photo._id} id={photo._id} alt=\"\" />)}</div>}\r\n//                 </div> */}\r\n//                 {/* <ul>\r\n//                     {this.state.cart.map((item, index) => (\r\n//                         <li key={index}>\r\n//                             {item.name} - Quantity: {item.quantity} - Price: €{item.price * item.quantity}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul> */}\r\n//                 <p>Total Price: €{this.state.totalPrice}</p>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport { SERVER_HOST } from \"../config/global_constants\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ShoppingCart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cart: [],\r\n            totalPrice: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Fetch cart data from the server\r\n        axios.get(`${SERVER_HOST}/cart`, { headers: { \"authorization\": localStorage.token } })\r\n            .then(res => {\r\n                // Update state with fetched cart data\r\n                this.setState({ cart: res.data }, () => {\r\n                    // Calculate total price after updating state\r\n                    this.calculateTotalPrice();\r\n                    // Load shirt photos after updating state\r\n                    // this.loadShirtPhotos();\r\n                });\r\n            })\r\n            .catch(err => {\r\n                // Handle error\r\n                console.error(\"Error fetching cart data:\", err);\r\n            });\r\n    }\r\n\r\n    calculateTotalPrice() {\r\n        let totalPrice = 0;\r\n        // Calculate total price based on cart items\r\n        this.state.cart.forEach(item => {\r\n            const carItem=item.cartItems[0];\r\n            totalPrice += carItem.price * carItem.quantity;\r\n        });\r\n        // Update totalPrice state\r\n        this.setState({ totalPrice: totalPrice });\r\n    }\r\n\r\n    loadShirtPhotos() {\r\n        // Loop through each cart item and load its shirt photos\r\n        \r\n        this.state.cart.forEach(item => {\r\n            item.cartItems[0].shirtPhotoFilename.forEach(photo => {\r\n                axios.get(`${SERVER_HOST}/shirts/photo/${photo.filename}`)\r\n                    .then(res => {\r\n                        // Update shirt photo in DOM\r\n                        document.getElementById(photo._id).src = `data:;base64,${res.data.image}`;\r\n                    })\r\n                    .catch(err => {\r\n                        // Handle error\r\n                        console.error(\"Error loading shirt photo:\", err);\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.cart.map((item,index) => (item.cartItems[0].name)));\r\n        return (\r\n            <div>\r\n                <NavigationBar />\r\n                <h2>Shopping Cart</h2>\r\n                <div>\r\n                    {this.state.cart.map((item, index) => (\r\n                        <div key={index}>\r\n                            {item.cartItems[0].name} - Size: {item.cartItems[0].size} - Quantity: {item.cartItems[0].quantity} - Price: €{item.cartItems[0].price * item.cartItems[0].quantity}\r\n                            {/* Display shirt photos for the first item */}\r\n                            {item.cartItems[0].shirtPhotoFilename.map(photo => (\r\n                                <img key={photo._id} id={photo._id} alt=\"\" />\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <p>Total Price: €{this.state.totalPrice}</p>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}